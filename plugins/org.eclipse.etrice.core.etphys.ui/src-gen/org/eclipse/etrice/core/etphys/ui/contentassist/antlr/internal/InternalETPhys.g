/*
* generated by Xtext
*/
grammar InternalETPhys;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.eclipse.etrice.core.etphys.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.eclipse.etrice.core.etphys.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.eclipse.etrice.core.etphys.services.ETPhysGrammarAccess;

}

@parser::members {
 
 	private ETPhysGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ETPhysGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRulePhysicalModel
entryRulePhysicalModel 
:
{ before(grammarAccess.getPhysicalModelRule()); }
	 rulePhysicalModel
{ after(grammarAccess.getPhysicalModelRule()); } 
	 EOF 
;

// Rule PhysicalModel
rulePhysicalModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPhysicalModelAccess().getGroup()); }
(rule__PhysicalModel__Group__0)
{ after(grammarAccess.getPhysicalModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePhysicalSystem
entryRulePhysicalSystem 
:
{ before(grammarAccess.getPhysicalSystemRule()); }
	 rulePhysicalSystem
{ after(grammarAccess.getPhysicalSystemRule()); } 
	 EOF 
;

// Rule PhysicalSystem
rulePhysicalSystem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPhysicalSystemAccess().getGroup()); }
(rule__PhysicalSystem__Group__0)
{ after(grammarAccess.getPhysicalSystemAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNodeRef
entryRuleNodeRef 
:
{ before(grammarAccess.getNodeRefRule()); }
	 ruleNodeRef
{ after(grammarAccess.getNodeRefRule()); } 
	 EOF 
;

// Rule NodeRef
ruleNodeRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNodeRefAccess().getGroup()); }
(rule__NodeRef__Group__0)
{ after(grammarAccess.getNodeRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNodeClass
entryRuleNodeClass 
:
{ before(grammarAccess.getNodeClassRule()); }
	 ruleNodeClass
{ after(grammarAccess.getNodeClassRule()); } 
	 EOF 
;

// Rule NodeClass
ruleNodeClass
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNodeClassAccess().getGroup()); }
(rule__NodeClass__Group__0)
{ after(grammarAccess.getNodeClassAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleThread
entryRuleThread 
:
{ before(grammarAccess.getThreadRule()); }
	 ruleThread
{ after(grammarAccess.getThreadRule()); } 
	 EOF 
;

// Rule Thread
ruleThread
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getThreadAccess().getGroup()); }
(rule__Thread__Group__0)
{ after(grammarAccess.getThreadAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRuntimeClass
entryRuleRuntimeClass 
:
{ before(grammarAccess.getRuntimeClassRule()); }
	 ruleRuntimeClass
{ after(grammarAccess.getRuntimeClassRule()); } 
	 EOF 
;

// Rule RuntimeClass
ruleRuntimeClass
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRuntimeClassAccess().getGroup()); }
(rule__RuntimeClass__Group__0)
{ after(grammarAccess.getRuntimeClassAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDocumentation
entryRuleDocumentation 
:
{ before(grammarAccess.getDocumentationRule()); }
	 ruleDocumentation
{ after(grammarAccess.getDocumentationRule()); } 
	 EOF 
;

// Rule Documentation
ruleDocumentation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDocumentationAccess().getGroup()); }
(rule__Documentation__Group__0)
{ after(grammarAccess.getDocumentationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePRIO
entryRulePRIO 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getPRIORule()); }
	 rulePRIO
{ after(grammarAccess.getPRIORule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule PRIO
rulePRIO
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPRIOAccess().getGroup()); }
(rule__PRIO__Group__0)
{ after(grammarAccess.getPRIOAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImportedFQN
entryRuleImportedFQN 
:
{ before(grammarAccess.getImportedFQNRule()); }
	 ruleImportedFQN
{ after(grammarAccess.getImportedFQNRule()); } 
	 EOF 
;

// Rule ImportedFQN
ruleImportedFQN
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportedFQNAccess().getGroup()); }
(rule__ImportedFQN__Group__0)
{ after(grammarAccess.getImportedFQNAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFQN
entryRuleFQN 
:
{ before(grammarAccess.getFQNRule()); }
	 ruleFQN
{ after(grammarAccess.getFQNRule()); } 
	 EOF 
;

// Rule FQN
ruleFQN
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFQNAccess().getGroup()); }
(rule__FQN__Group__0)
{ after(grammarAccess.getFQNAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule ExecMode
ruleExecMode
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecModeAccess().getAlternatives()); }
(rule__ExecMode__Alternatives)
{ after(grammarAccess.getExecModeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ThreadModel
ruleThreadModel
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadModelAccess().getAlternatives()); }
(rule__ThreadModel__Alternatives)
{ after(grammarAccess.getThreadModelAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__PhysicalModel__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPhysicalModelAccess().getSystemsAssignment_4_0()); }
(rule__PhysicalModel__SystemsAssignment_4_0)
{ after(grammarAccess.getPhysicalModelAccess().getSystemsAssignment_4_0()); }
)

    |(
{ before(grammarAccess.getPhysicalModelAccess().getNodeClassesAssignment_4_1()); }
(rule__PhysicalModel__NodeClassesAssignment_4_1)
{ after(grammarAccess.getPhysicalModelAccess().getNodeClassesAssignment_4_1()); }
)

    |(
{ before(grammarAccess.getPhysicalModelAccess().getRuntimeClassesAssignment_4_2()); }
(rule__PhysicalModel__RuntimeClassesAssignment_4_2)
{ after(grammarAccess.getPhysicalModelAccess().getRuntimeClassesAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getDefaultAssignment_0_0()); }
(rule__Thread__DefaultAssignment_0_0)
{ after(grammarAccess.getThreadAccess().getDefaultAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getThreadAccess().getThreadKeyword_0_1()); }

	'Thread' 

{ after(grammarAccess.getThreadAccess().getThreadKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PRIO__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPRIOAccess().getPlusSignKeyword_0_0()); }

	'+' 

{ after(grammarAccess.getPRIOAccess().getPlusSignKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getPRIOAccess().getHyphenMinusKeyword_0_1()); }

	'-' 

{ after(grammarAccess.getPRIOAccess().getHyphenMinusKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getGroup_1_0()); }
(rule__Import__Group_1_0__0)
{ after(grammarAccess.getImportAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getImportAccess().getModelKeyword_1_1()); }

	'model' 

{ after(grammarAccess.getImportAccess().getModelKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecMode__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecModeAccess().getPOLLEDEnumLiteralDeclaration_0()); }
(	'polled' 
)
{ after(grammarAccess.getExecModeAccess().getPOLLEDEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getExecModeAccess().getBLOCKEDEnumLiteralDeclaration_1()); }
(	'blocked' 
)
{ after(grammarAccess.getExecModeAccess().getBLOCKEDEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getExecModeAccess().getMIXEDEnumLiteralDeclaration_2()); }
(	'mixed' 
)
{ after(grammarAccess.getExecModeAccess().getMIXEDEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ThreadModel__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadModelAccess().getSINGLE_THREADEDEnumLiteralDeclaration_0()); }
(	'singleThreaded' 
)
{ after(grammarAccess.getThreadModelAccess().getSINGLE_THREADEDEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getThreadModelAccess().getMULTI_THREADEDEnumLiteralDeclaration_1()); }
(	'multiThreaded' 
)
{ after(grammarAccess.getThreadModelAccess().getMULTI_THREADEDEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__PhysicalModel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PhysicalModel__Group__0__Impl
	rule__PhysicalModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalModel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPhysicalModelAccess().getPhysicalModelKeyword_0()); }

	'PhysicalModel' 

{ after(grammarAccess.getPhysicalModelAccess().getPhysicalModelKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PhysicalModel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PhysicalModel__Group__1__Impl
	rule__PhysicalModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalModel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPhysicalModelAccess().getNameAssignment_1()); }
(rule__PhysicalModel__NameAssignment_1)
{ after(grammarAccess.getPhysicalModelAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PhysicalModel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PhysicalModel__Group__2__Impl
	rule__PhysicalModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalModel__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPhysicalModelAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getPhysicalModelAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PhysicalModel__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PhysicalModel__Group__3__Impl
	rule__PhysicalModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalModel__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPhysicalModelAccess().getImportsAssignment_3()); }
(rule__PhysicalModel__ImportsAssignment_3)*
{ after(grammarAccess.getPhysicalModelAccess().getImportsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PhysicalModel__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PhysicalModel__Group__4__Impl
	rule__PhysicalModel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalModel__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPhysicalModelAccess().getAlternatives_4()); }
(rule__PhysicalModel__Alternatives_4)*
{ after(grammarAccess.getPhysicalModelAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PhysicalModel__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PhysicalModel__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalModel__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPhysicalModelAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getPhysicalModelAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__PhysicalSystem__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PhysicalSystem__Group__0__Impl
	rule__PhysicalSystem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalSystem__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPhysicalSystemAccess().getPhysicalSystemKeyword_0()); }

	'PhysicalSystem' 

{ after(grammarAccess.getPhysicalSystemAccess().getPhysicalSystemKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PhysicalSystem__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PhysicalSystem__Group__1__Impl
	rule__PhysicalSystem__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalSystem__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPhysicalSystemAccess().getNameAssignment_1()); }
(rule__PhysicalSystem__NameAssignment_1)
{ after(grammarAccess.getPhysicalSystemAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PhysicalSystem__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PhysicalSystem__Group__2__Impl
	rule__PhysicalSystem__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalSystem__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPhysicalSystemAccess().getDocuAssignment_2()); }
(rule__PhysicalSystem__DocuAssignment_2)?
{ after(grammarAccess.getPhysicalSystemAccess().getDocuAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PhysicalSystem__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PhysicalSystem__Group__3__Impl
	rule__PhysicalSystem__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalSystem__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPhysicalSystemAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getPhysicalSystemAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PhysicalSystem__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PhysicalSystem__Group__4__Impl
	rule__PhysicalSystem__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalSystem__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPhysicalSystemAccess().getNodeRefsAssignment_4()); }
(rule__PhysicalSystem__NodeRefsAssignment_4)*
{ after(grammarAccess.getPhysicalSystemAccess().getNodeRefsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PhysicalSystem__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PhysicalSystem__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalSystem__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPhysicalSystemAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getPhysicalSystemAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__NodeRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeRef__Group__0__Impl
	rule__NodeRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeRef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeRefAccess().getNodeRefKeyword_0()); }

	'NodeRef' 

{ after(grammarAccess.getNodeRefAccess().getNodeRefKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeRef__Group__1__Impl
	rule__NodeRef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeRef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeRefAccess().getNameAssignment_1()); }
(rule__NodeRef__NameAssignment_1)
{ after(grammarAccess.getNodeRefAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeRef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeRef__Group__2__Impl
	rule__NodeRef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeRef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeRefAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getNodeRefAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeRef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeRef__Group__3__Impl
	rule__NodeRef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeRef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeRefAccess().getTypeAssignment_3()); }
(rule__NodeRef__TypeAssignment_3)
{ after(grammarAccess.getNodeRefAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeRef__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeRef__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeRef__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeRefAccess().getDocuAssignment_4()); }
(rule__NodeRef__DocuAssignment_4)?
{ after(grammarAccess.getNodeRefAccess().getDocuAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__NodeClass__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeClass__Group__0__Impl
	rule__NodeClass__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeClass__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeClassAccess().getNodeClassKeyword_0()); }

	'NodeClass' 

{ after(grammarAccess.getNodeClassAccess().getNodeClassKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeClass__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeClass__Group__1__Impl
	rule__NodeClass__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeClass__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeClassAccess().getNameAssignment_1()); }
(rule__NodeClass__NameAssignment_1)
{ after(grammarAccess.getNodeClassAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeClass__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeClass__Group__2__Impl
	rule__NodeClass__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeClass__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeClassAccess().getDocuAssignment_2()); }
(rule__NodeClass__DocuAssignment_2)?
{ after(grammarAccess.getNodeClassAccess().getDocuAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeClass__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeClass__Group__3__Impl
	rule__NodeClass__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeClass__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeClassAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getNodeClassAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeClass__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeClass__Group__4__Impl
	rule__NodeClass__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeClass__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeClassAccess().getRuntimeKeyword_4()); }

	'runtime' 

{ after(grammarAccess.getNodeClassAccess().getRuntimeKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeClass__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeClass__Group__5__Impl
	rule__NodeClass__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeClass__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeClassAccess().getEqualsSignKeyword_5()); }

	'=' 

{ after(grammarAccess.getNodeClassAccess().getEqualsSignKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeClass__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeClass__Group__6__Impl
	rule__NodeClass__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeClass__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeClassAccess().getRuntimeAssignment_6()); }
(rule__NodeClass__RuntimeAssignment_6)
{ after(grammarAccess.getNodeClassAccess().getRuntimeAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeClass__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeClass__Group__7__Impl
	rule__NodeClass__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeClass__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeClassAccess().getThreadsAssignment_7()); }
(rule__NodeClass__ThreadsAssignment_7)*
{ after(grammarAccess.getNodeClassAccess().getThreadsAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeClass__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeClass__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeClass__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeClassAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getNodeClassAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Thread__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Thread__Group__0__Impl
	rule__Thread__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getAlternatives_0()); }
(rule__Thread__Alternatives_0)
{ after(grammarAccess.getThreadAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Thread__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Thread__Group__1__Impl
	rule__Thread__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getNameAssignment_1()); }
(rule__Thread__NameAssignment_1)
{ after(grammarAccess.getThreadAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Thread__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Thread__Group__2__Impl
	rule__Thread__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getThreadAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Thread__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Thread__Group__3__Impl
	rule__Thread__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getExecmodeKeyword_3()); }

	'execmode' 

{ after(grammarAccess.getThreadAccess().getExecmodeKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Thread__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Thread__Group__4__Impl
	rule__Thread__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getEqualsSignKeyword_4()); }

	'=' 

{ after(grammarAccess.getThreadAccess().getEqualsSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Thread__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Thread__Group__5__Impl
	rule__Thread__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getExecmodeAssignment_5()); }
(rule__Thread__ExecmodeAssignment_5)
{ after(grammarAccess.getThreadAccess().getExecmodeAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Thread__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Thread__Group__6__Impl
	rule__Thread__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getGroup_6()); }
(rule__Thread__Group_6__0)?
{ after(grammarAccess.getThreadAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Thread__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Thread__Group__7__Impl
	rule__Thread__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getGroup_7()); }
(rule__Thread__Group_7__0)?
{ after(grammarAccess.getThreadAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Thread__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Thread__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getThreadAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Thread__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Thread__Group_6__0__Impl
	rule__Thread__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getPrioKeyword_6_0()); }

	'prio' 

{ after(grammarAccess.getThreadAccess().getPrioKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Thread__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Thread__Group_6__1__Impl
	rule__Thread__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getEqualsSignKeyword_6_1()); }

	'=' 

{ after(grammarAccess.getThreadAccess().getEqualsSignKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Thread__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Thread__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getPrioAssignment_6_2()); }
(rule__Thread__PrioAssignment_6_2)
{ after(grammarAccess.getThreadAccess().getPrioAssignment_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Thread__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Thread__Group_7__0__Impl
	rule__Thread__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getStacksizeKeyword_7_0()); }

	'stacksize' 

{ after(grammarAccess.getThreadAccess().getStacksizeKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Thread__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Thread__Group_7__1__Impl
	rule__Thread__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getEqualsSignKeyword_7_1()); }

	'=' 

{ after(grammarAccess.getThreadAccess().getEqualsSignKeyword_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Thread__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Thread__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getStacksizeAssignment_7_2()); }
(rule__Thread__StacksizeAssignment_7_2)
{ after(grammarAccess.getThreadAccess().getStacksizeAssignment_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RuntimeClass__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuntimeClass__Group__0__Impl
	rule__RuntimeClass__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuntimeClass__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuntimeClassAccess().getRuntimeClassKeyword_0()); }

	'RuntimeClass' 

{ after(grammarAccess.getRuntimeClassAccess().getRuntimeClassKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuntimeClass__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuntimeClass__Group__1__Impl
	rule__RuntimeClass__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RuntimeClass__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuntimeClassAccess().getNameAssignment_1()); }
(rule__RuntimeClass__NameAssignment_1)
{ after(grammarAccess.getRuntimeClassAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuntimeClass__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuntimeClass__Group__2__Impl
	rule__RuntimeClass__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RuntimeClass__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuntimeClassAccess().getDocuAssignment_2()); }
(rule__RuntimeClass__DocuAssignment_2)?
{ after(grammarAccess.getRuntimeClassAccess().getDocuAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuntimeClass__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuntimeClass__Group__3__Impl
	rule__RuntimeClass__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RuntimeClass__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuntimeClassAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getRuntimeClassAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuntimeClass__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuntimeClass__Group__4__Impl
	rule__RuntimeClass__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RuntimeClass__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuntimeClassAccess().getModelKeyword_4()); }

	'model' 

{ after(grammarAccess.getRuntimeClassAccess().getModelKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuntimeClass__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuntimeClass__Group__5__Impl
	rule__RuntimeClass__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RuntimeClass__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuntimeClassAccess().getEqualsSignKeyword_5()); }

	'=' 

{ after(grammarAccess.getRuntimeClassAccess().getEqualsSignKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuntimeClass__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuntimeClass__Group__6__Impl
	rule__RuntimeClass__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__RuntimeClass__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuntimeClassAccess().getThreadModelAssignment_6()); }
(rule__RuntimeClass__ThreadModelAssignment_6)
{ after(grammarAccess.getRuntimeClassAccess().getThreadModelAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuntimeClass__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuntimeClass__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuntimeClass__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuntimeClassAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getRuntimeClassAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Documentation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Documentation__Group__0__Impl
	rule__Documentation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Documentation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDocumentationAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getDocumentationAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Documentation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Documentation__Group__1__Impl
	rule__Documentation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Documentation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getDocumentationAccess().getTextAssignment_1()); }
(rule__Documentation__TextAssignment_1)
{ after(grammarAccess.getDocumentationAccess().getTextAssignment_1()); }
)
(
{ before(grammarAccess.getDocumentationAccess().getTextAssignment_1()); }
(rule__Documentation__TextAssignment_1)*
{ after(grammarAccess.getDocumentationAccess().getTextAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Documentation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Documentation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Documentation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDocumentationAccess().getRightSquareBracketKeyword_2()); }

	']' 

{ after(grammarAccess.getDocumentationAccess().getRightSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PRIO__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PRIO__Group__0__Impl
	rule__PRIO__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PRIO__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPRIOAccess().getAlternatives_0()); }
(rule__PRIO__Alternatives_0)?
{ after(grammarAccess.getPRIOAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PRIO__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PRIO__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PRIO__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPRIOAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
{ after(grammarAccess.getPRIOAccess().getINTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
	rule__Import__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getAlternatives_1()); }
(rule__Import__Alternatives_1)
{ after(grammarAccess.getImportAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURIAssignment_2()); }
(rule__Import__ImportURIAssignment_2)
{ after(grammarAccess.getImportAccess().getImportURIAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Import__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group_1_0__0__Impl
	rule__Import__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1_0_0()); }
(rule__Import__ImportedNamespaceAssignment_1_0_0)
{ after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getFromKeyword_1_0_1()); }

	'from' 

{ after(grammarAccess.getImportAccess().getFromKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImportedFQN__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportedFQN__Group__0__Impl
	rule__ImportedFQN__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedFQN__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportedFQNAccess().getFQNParserRuleCall_0()); }
	ruleFQN
{ after(grammarAccess.getImportedFQNAccess().getFQNParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportedFQN__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportedFQN__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedFQN__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportedFQNAccess().getFullStopAsteriskKeyword_1()); }
(
	'.*' 
)?
{ after(grammarAccess.getImportedFQNAccess().getFullStopAsteriskKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FQN__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group__0__Impl
	rule__FQN__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getGroup_1()); }
(rule__FQN__Group_1__0)*
{ after(grammarAccess.getFQNAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FQN__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group_1__0__Impl
	rule__FQN__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__PhysicalModel__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPhysicalModelAccess().getNameFQNParserRuleCall_1_0()); }
	ruleFQN{ after(grammarAccess.getPhysicalModelAccess().getNameFQNParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalModel__ImportsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPhysicalModelAccess().getImportsImportParserRuleCall_3_0()); }
	ruleImport{ after(grammarAccess.getPhysicalModelAccess().getImportsImportParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalModel__SystemsAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPhysicalModelAccess().getSystemsPhysicalSystemParserRuleCall_4_0_0()); }
	rulePhysicalSystem{ after(grammarAccess.getPhysicalModelAccess().getSystemsPhysicalSystemParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalModel__NodeClassesAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPhysicalModelAccess().getNodeClassesNodeClassParserRuleCall_4_1_0()); }
	ruleNodeClass{ after(grammarAccess.getPhysicalModelAccess().getNodeClassesNodeClassParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalModel__RuntimeClassesAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPhysicalModelAccess().getRuntimeClassesRuntimeClassParserRuleCall_4_2_0()); }
	ruleRuntimeClass{ after(grammarAccess.getPhysicalModelAccess().getRuntimeClassesRuntimeClassParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalSystem__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPhysicalSystemAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getPhysicalSystemAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalSystem__DocuAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPhysicalSystemAccess().getDocuDocumentationParserRuleCall_2_0()); }
	ruleDocumentation{ after(grammarAccess.getPhysicalSystemAccess().getDocuDocumentationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalSystem__NodeRefsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPhysicalSystemAccess().getNodeRefsNodeRefParserRuleCall_4_0()); }
	ruleNodeRef{ after(grammarAccess.getPhysicalSystemAccess().getNodeRefsNodeRefParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NodeRef__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeRefAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getNodeRefAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NodeRef__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeRefAccess().getTypeNodeClassCrossReference_3_0()); }
(
{ before(grammarAccess.getNodeRefAccess().getTypeNodeClassFQNParserRuleCall_3_0_1()); }
	ruleFQN{ after(grammarAccess.getNodeRefAccess().getTypeNodeClassFQNParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getNodeRefAccess().getTypeNodeClassCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NodeRef__DocuAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeRefAccess().getDocuDocumentationParserRuleCall_4_0()); }
	ruleDocumentation{ after(grammarAccess.getNodeRefAccess().getDocuDocumentationParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NodeClass__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeClassAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getNodeClassAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NodeClass__DocuAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeClassAccess().getDocuDocumentationParserRuleCall_2_0()); }
	ruleDocumentation{ after(grammarAccess.getNodeClassAccess().getDocuDocumentationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NodeClass__RuntimeAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeClassAccess().getRuntimeRuntimeClassCrossReference_6_0()); }
(
{ before(grammarAccess.getNodeClassAccess().getRuntimeRuntimeClassFQNParserRuleCall_6_0_1()); }
	ruleFQN{ after(grammarAccess.getNodeClassAccess().getRuntimeRuntimeClassFQNParserRuleCall_6_0_1()); }
)
{ after(grammarAccess.getNodeClassAccess().getRuntimeRuntimeClassCrossReference_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NodeClass__ThreadsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeClassAccess().getThreadsThreadParserRuleCall_7_0()); }
	ruleThread{ after(grammarAccess.getNodeClassAccess().getThreadsThreadParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__DefaultAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getDefaultDefaultThreadKeyword_0_0_0()); }
(
{ before(grammarAccess.getThreadAccess().getDefaultDefaultThreadKeyword_0_0_0()); }

	'DefaultThread' 

{ after(grammarAccess.getThreadAccess().getDefaultDefaultThreadKeyword_0_0_0()); }
)

{ after(grammarAccess.getThreadAccess().getDefaultDefaultThreadKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getThreadAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__ExecmodeAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getExecmodeExecModeEnumRuleCall_5_0()); }
	ruleExecMode{ after(grammarAccess.getThreadAccess().getExecmodeExecModeEnumRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__PrioAssignment_6_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getPrioPRIOParserRuleCall_6_2_0()); }
	rulePRIO{ after(grammarAccess.getThreadAccess().getPrioPRIOParserRuleCall_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__StacksizeAssignment_7_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getStacksizeINTTerminalRuleCall_7_2_0()); }
	RULE_INT{ after(grammarAccess.getThreadAccess().getStacksizeINTTerminalRuleCall_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuntimeClass__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuntimeClassAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getRuntimeClassAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuntimeClass__DocuAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuntimeClassAccess().getDocuDocumentationParserRuleCall_2_0()); }
	ruleDocumentation{ after(grammarAccess.getRuntimeClassAccess().getDocuDocumentationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuntimeClass__ThreadModelAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuntimeClassAccess().getThreadModelThreadModelEnumRuleCall_6_0()); }
	ruleThreadModel{ after(grammarAccess.getRuntimeClassAccess().getThreadModelThreadModelEnumRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Documentation__TextAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDocumentationAccess().getTextSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getDocumentationAccess().getTextSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedNamespaceAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceImportedFQNParserRuleCall_1_0_0_0()); }
	ruleImportedFQN{ after(grammarAccess.getImportAccess().getImportedNamespaceImportedFQNParserRuleCall_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportURIAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


