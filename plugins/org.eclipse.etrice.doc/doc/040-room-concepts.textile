h1. ROOM Concepts

h2. Main Concepts

h3. Actors

h4. Description
 
The actor is the basic structural building block for building systems with ROOM. An actor can be refined hierarchically and thus can be of arbitrarily large scope. Ports define the interface of an actor. An Actor can also have a behavior usually defined by a finite state machine.

h4. Motivation

* Actors enable the construction of hierarchical structures with composition and layering
* Actors have their own logical thread of execution
* Actors can be freely deployed
* Actors define potentially reusable blocks

h4. Notation

|*Element*|*Graphical Notation*|*Textual Notation*|
|ActorClass|!images\040-ActorClassNotation.png!|!images\040-ActorClassTextualNotation.png!	|
|ActorRef|!images\040-ActorReferenceNotation.png!|!images\040-ActorReferenceTextualNotation.png!|

h4. Details

h5.  Actor Classes, Actor References, Ports and Bindings

An *ActorClass* defines the type (or blueprint) of an actor. Hierarchies are built by ActorClasses that contain *ActorReferences* which have another ActorClass as type. The interface of an ActorClass is always defined by Ports.

*External Ports* define the external interface of an actor and are defined in the *Interface* section of the ActorClass.

*Internal Ports* define the internal interface of an actor and are defined in the *Structure* section of the ActorClass.

*Bindings* connect Ports inside an ActorClass.

Example:

|*Graphical Notation*|*Textual Notation*|
|!images\040-ActorClass.png!|!images\040-ActorClassExampleTextualNotation.png!|

* _ActorClass1_ contains two ActorReferences
* _port1_ is a *External End Port*. Since it connects external Actors with the behavior of the ActorClass, it is defined in the *Interface* section and the *Structure* section of the ActorClass.
* _port2_ and _port3_ are *Internal End Ports* and can only be connected to the ports of contained ActorReferences. Internal End Ports connect the Behavior of an ActorClass with its contained ActorReferences.
* _port4_ is a relay port and connects outside Actors to contained ActorReferences. This port can not be accessed by the behavior of the ActorClass.
* *Bindings* can connect ports of the ActorClass and its contained ActorReferences. 

h5.  Attributes

h5.  Operations

h5. Finite State Machine


h3. Protocols

h4. Description

A ProtocolClass defines a set of incoming and outgoing messages that can be exchanged between two ports.
The exact semantics of a message is defined by the execution model.

h4. Motivation

* ProtocolClasses provide a reusable interface specification for ports
* ProtocolClasses can optionally specify valid message exchange sequences

h4. Notation

ProtocolClasses have only textual notation. 
The example defines a ProtocolClass with 2 incoming and two outgoing messages. Messages can have data attached. The data can be of a primitive type (e.g. int32, float64, ...) or a DataClass.

!images\040-ProtocolClassTextualNotation.png!

h3. Ports

h4. Description

Ports are the only interfaces of actors. A port has always a protocol assigned. 
Service Access Points (SAP) and Service Provision Points (SPP) are specialized ports that are used to define layering.

h4. Motivation

* Ports decouple interface definition (Protocols) from interface usage
* Ports decouple the logical interface from the transport 

h4. Notation

h5. Class Ports

These symbols can only appear on the border of an actor class symbol. 
*Textual Notation:* 
Ports that define an external interface of the ActorClass, are defined in the Interface (e.g. relay ports). Ports that define an internal interface are defined in the Structure (e.g. internal ports). An   

|*Element*|*Graphical Notation*|*Textual Notation*|
|Class End Port|!images\040-ClassEndPort.png!||
|Conjugated Class End Port|!images\040-ConjugatedClassEndPort.png!||
|Class Relay Port|!images\040-ClassRelayPort.png!||
|Conjugated Class Relay Port|!images\040-ConjugatedClassRelayPort.png!||
|Replicated Class End Port|!images\040-ReplicatedClassEndPort.png!||
|Conjugated Replicated Class End Port|!images\040-ConjugatedReplicatedClassEndPort.png!||
|Replicated Class Relay Port|!images\040-ReplicatedClassRelayPort.png!||
|Conjugated Replicated Class Relay Port|!images\040-ConjugatedReplicatedClassRelayPort.png!||

h5. Reference Ports

These symbols can only appear on the border of an ActorReference symbol. Since the type of port is defined in the ActorClass, no textual notation exists.

|*Element*|*Graphical Notation*|*Textual Notation*|
|Reference Port|!images\040-ReferencePort.png!| _implicit_ |
|Conjugated Reference Port|!images\040-ConjugatedReferencePort.png!| _implicit_ |
|Replicated Reference Port|!images\040-ReplicatedReferencePort.png!| _implicit_ |
|Conjugated Replicated Reference Port|!images\040-ConjugatedReplicatedReferencePort.png!| _implicit_ |


