<!-- ===========================================================
     ANT project ETRICE_HELP: compiles PDF, HTML and Eclipse TOC
     files out of TeX files.                                    

	 Copyright (c) 2013 Frank Lippert
     All rights reserved. This program and the accompanying materials
     are made available under the terms of the Eclipse Public License v1.0
     which accompanies this distribution, and is available at 
	 www.eclipse.org/legal/epl-v10.html

	 Needs external libraries: AntLatex-Task, Sason9HE

	 CONTRIBUTORS:
     Frank Lippert (initial contribution)
     Henrik Rentz-Reichert
     Juergen Haug
	 =========================================================== --> 
<project name="ETRICE_HELP" basedir="." default="default">

<!-- ============ setting up properties ============ --> 
<property name="author" 		value="Frank Lippert" />
<property name="version" 		value="1.0" />

<property name="doc.dir" 		value="doc" />
<property name="featuregen.dir" value="feature-gen" />
<property name="image.dir" 		value="${doc.dir}\images" />
<property name="manual.dir" 	value="manual" />
<property name="html.dir" 		value="html" />
<property name="styles.dir" 	value="styles" />

<property name="tex.file" 		value="etrice-doc.tex" />
<property name="pdf.file" 		value="${manual.dir}\etrice.pdf" />
<property name="html.file" 		value="${html.dir}\etrice-doc.html" /> 
<property name="toc.file" 		value="toc.xml" />
<property name="style.file" 	value="${styles.dir}\build_eclipse_toc.xsl" />

<property name="xlibs.dir" 		value="xternalLibs" />	

<property environment="env"/>
	
<target name="getAntLatex" depends="init" unless="antlatex.loaded">
	<echo message="Start download of ant_latex_0.0.9_1.jar.zip .........."/>
	<get src="http://www.java2s.com/Code/JarDownload/ant/ant_latex_0.0.9_1.jar.zip" dest="${xlibs.dir}" verbose="true"/>
	<unzip src="${xlibs.dir}/ant_latex_0.0.9_1.jar.zip" dest="${xlibs.dir}"/>
	<fail message="NOT FOUND ant_latex : Download from http://www.java2s.com/Code/Jar/a/Downloadantlatex0091jar.htm and copy 'ant_latex_0.0.9_1.jar' into 'xternalLibs'">
	    <condition><not>
	        <available classname="de.dokutransdata.antlatex.LaTeX" classpathref="project.class.path"/>
		</not></condition>
	</fail>
</target>
	
<target name="getSaxon" depends="init" unless="saxon.loaded">
	<echo message="Start download of SaxonHE9-6-0-6J.zip .........."/>
	<get src="http://downloads.sourceforge.net/project/saxon/Saxon-HE/9.6/SaxonHE9-6-0-6J.zip"  dest="${xlibs.dir}" verbose="true"/>
	<unzip src="${xlibs.dir}/SaxonHE9-6-0-6J.zip" dest="${xlibs.dir}">
		<patternset>
		    <include name="saxon9he.jar"/>
		  </patternset>
	</unzip>
	<fail message="NOT FOUND saxon9he : Download from http://sourceforge.net/projects/saxon/files/latest/download and copy 'saxon9he.jar' into 'xternalLibs'">
	    <condition><not>
	        <available classname="net.sf.saxon.TransformerFactoryImpl" classpathref="project.class.path"/>
	    </not></condition>
	</fail>
</target>
	
<!-- ============ initialization ================== -->
<target name="init" >
	<tstamp/>
	<mkdir dir="${manual.dir}" />
	<mkdir dir="${image.dir}" />
	<mkdir dir="${xlibs.dir}" />

	<path id="project.class.path">
		<pathelement path="${java.class.path}" />
		<pathelement path="${xlibs.dir}/ant_latex_0.0.9_1.jar" />
		<pathelement path="${xlibs.dir}/saxon9he.jar" />
	</path>
	
	 <available property="antlatex.loaded" classname="de.dokutransdata.antlatex.LaTeX" classpathref="project.class.path"/>
	 <available property="saxon.loaded" classname="net.sf.saxon.TransformerFactoryImpl" classpathref="project.class.path"/>
</target>


<!-- do we actually need to run PDF creation? -->
<target name="checkPdfCreationNeeded">
	<condition property="pdfCreation.notNeeded">
		<and>
			<uptodate targetfile="${pdf.file}" >
				<srcfiles dir="${doc.dir}" includes="**/*.tex" />
			</uptodate>
			<uptodate targetfile="${pdf.file}" >
				<srcfiles dir="${image.dir}" includes="**/*.*" />
			</uptodate>
			<uptodate targetfile="${pdf.file}" >
				<srcfiles dir="${featuregen.dir}" includes="**/*.tex" />
			</uptodate>
		</and>
	</condition>
</target>

<!-- the actual PDF creation task -->
<target name="createEtricePDF" depends="init, checkPdfCreationNeeded, getAntLatex" unless="pdfCreation.notNeeded"
	description="creates PDF manual from TeX files for eTrice documentation">
	
	<!-- ============ creating PDF manual ============= --> 
	<taskdef name="latex" classname="de.dokutransdata.antlatex.LaTeX"
	    classpathref="project.class.path"
	/>
	
	<property name="latex.tmp.dir" value="${java.io.tmpdir}miktex" />
	<mkdir dir="${latex.tmp.dir}" />
	<latex
		latexfile="${tex.file}"
		verbose="on"
		clean="off"  
		pdftex="on"  
		workingDir="${doc.dir}"
		jobname="etrice"
		auxDir="${latex.tmp.dir}"
		outputDir="${manual.dir}"
		MikTeX="on"
    /> 
	<delete dir="${latex.tmp.dir}" />
</target>


<!-- ============ TARGET: HTML FILES =============== -->

<!-- do we actually need to run HTML creation? -->
<target name="checkHtmlCreationNeeded">
	<condition property="htmlCreation.notNeeded">
		<and>
			<uptodate targetfile="${html.file}" >
				<srcfiles dir="${doc.dir}" includes="**/*.tex" />
			</uptodate>
			<uptodate targetfile="${html.file}" >
				<srcfiles dir="${image.dir}" includes="**/*.*" />
			</uptodate>
			<uptodate targetfile="${html.file}" >
				<srcfiles dir="${featuregen.dir}" includes="**/*.tex" />
			</uptodate>
		</and>
	</condition>
</target>
 
<!-- the actual HTML creation task -->
<target name="createEtriceHTML" depends="init, checkHtmlCreationNeeded" unless="htmlCreation.notNeeded" 
	description="creates HTML files from TeX files for eTrice documentation">
	<copy todir="${html.dir}/images">
		<fileset dir="${image.dir}" />
	</copy>
	<exec dir="doc" executable="htlatex" vmlauncher="false">
		<arg value="${tex.file}" />
		<arg value='"xhtml,3,next"' />
		<arg value='""' />
		<arg line='"-d../html"' />
	</exec>
	
	<!-- fix for wrong order of </p> and </div> -->
	<replace dir="${html.dir}" token="&lt;/p> &lt;/div>" value="&lt;/div> &lt;/p>">
	  <include name="**/*.html"/>
	</replace>
	
	<copy todir="${html.dir}">
		<fileset dir="${doc.dir}"
			includes="**/*.html **/*.png **/*.css" 
		/>
	</copy>
	<delete>
		<fileset dir="${doc.dir}" 
			includes="**/*.aux **/*.html **/*.css **/*.4ct **/*.4tc **/*.log **/*.dvi **/*.lg **/*.xref **/*.tmp **/*.idv" 
			excludes="images/**" 
		/> 
	</delete>
</target>


<!-- ============ XSLT for Eclipse TOCs ============ -->

<!-- do we actually need to run TOCs creation? -->
<target name="checkTocsCreationNeeded">
	<condition property="tocsCreation.notNeeded">
		<and>
			<available file="${html.file}" />
			<uptodate  srcfile="${html.file}" targetfile="${toc.file}" />
			<uptodate  srcfile="${style.file}" targetfile="${toc.file}" />
		</and>
	</condition>
</target>

<!-- the actual TOCs creation task --> 
<target name="createEclipseTocFiles" depends="init, checkTocsCreationNeeded, createEtriceHTML, getSaxon" unless="tocsCreation.notNeeded" 
		description="creates Eclipse Table of Content files from HTML file as part of the eTrice documentation">
   <!-- Transform one file into an HTML file -->
   <xslt basedir="html" destdir="."
		classpathref="project.class.path"
		in="${html.file}" out="dummy_out.xml"
		style="${style.file}"
		excludes="*.xml *.txt"
		scanincludeddirectories="false"
		processor="trax"
	>
	<factory name="net.sf.saxon.TransformerFactoryImpl" />
	</xslt>
	<delete file="dummy_out.xml"/>
</target>

 
<!-- ============ TARGET: DEFAULT ================== -->
<target name="default" depends="clean_tmp,createEtricePDF, createEclipseTocFiles"/>


<!-- ============ TARGET: clean ================== -->
<target name="clean" description="deletes all generated files for eTrice documentation">
	<delete dir="${html.dir}/images"/>
	<delete>
		<fileset dir="."
			includes="*.xml ${pdf.file} ${html.dir}/*.html ${html.dir}/*.css ${html.dir}/*.png"
			excludes="build.xml" 
		/>
	</delete>
</target>


<!-- ============ TARGET: clean_tmp ================== -->
<target name="clean_tmp" description="deletes all tmporary files for eTrice documentation">
	<delete>
		<fileset dir="${doc.dir}"
			includes="*.aux *.toc *.dvi *.out *.log *.gz *.pdf"
		/>
	</delete>
</target>

</project>
