/*
 * generated by Xtext
 */
package org.eclipse.etrice.generator.formatting;

import org.eclipse.etrice.generator.services.FSMtestGrammarAccess;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter;
import org.eclipse.xtext.formatting.impl.FormattingConfig;

/**
 * This class contains custom formatting description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation/latest/xtext.html#formatting
 * on how and when to use it 
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an example
 */
public class FSMtestFormatter extends AbstractDeclarativeFormatter {
	
	@Override
	protected void configureFormatting(FormattingConfig c) {
		FSMtestGrammarAccess grammarAccess = (FSMtestGrammarAccess) getGrammarAccess();
		c.setLinewrap(0, 1, 2).before(grammarAccess.getSL_COMMENTRule());
		c.setLinewrap(0, 1, 2).before(grammarAccess.getML_COMMENTRule());
		c.setLinewrap(0, 1, 1).after(grammarAccess.getML_COMMENTRule());

		for (Keyword k: grammarAccess.findKeywords(";")) {
			c.setIndentationDecrement().before(k);
			c.setLinewrap().before(k);
		}
		
		for (Keyword k: grammarAccess.findKeywords(",", ":")) {
			c.setNoSpace().before(k);
		}
		
		for (Keyword k: grammarAccess.findKeywords("in:","out:")) {
			c.setLinewrap().before(k);
		}
		
		for (Keyword k: grammarAccess.findKeywords("states:", "initial:", "loops:", "randseed:")) {
			c.setLinewrap().before(k);
		}

		for (Keyword k: grammarAccess.findKeywords(".")) {
			c.setNoSpace().around(k);
		}

		for (Keyword k: grammarAccess.findKeywords("fsmtest")) {
			c.setLinewrap(2).before(k);
			c.setIndentationIncrement().after(k);
		}
		
		c.setLinewrap(2).before(grammarAccess.getSourceDeclarationRule());
		c.setIndentationIncrement().after(grammarAccess.getSourceDeclarationRule());
		
		c.setIndentationDecrement().before(grammarAccess.getDestinationDeclarationRule());
		c.setLinewrap(1).before(grammarAccess.getDestinationDeclarationRule());
		
		c.setIndentationIncrement().before(grammarAccess.getSignalDeclarationRule());
		c.setLinewrap(1).before(grammarAccess.getSignalDeclarationRule());
		c.setIndentationDecrement().after(grammarAccess.getSignalDeclarationRule());
		
	}
}
