/*
* generated by Xtext
*/

package org.eclipse.etrice.core.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class ConfigGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ConfigModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ConfigModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cActorClassConfigsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cActorClassConfigsActorClassConfigParserRuleCall_0_0 = (RuleCall)cActorClassConfigsAssignment_0.eContents().get(0);
		private final Assignment cActorInstanceConfigsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cActorInstanceConfigsActorInstanceConfigParserRuleCall_1_0 = (RuleCall)cActorInstanceConfigsAssignment_1.eContents().get(0);
		
		//ConfigModel:
		//	actorClassConfigs+=ActorClassConfig* actorInstanceConfigs+=ActorInstanceConfig*;
		public ParserRule getRule() { return rule; }

		//actorClassConfigs+=ActorClassConfig* actorInstanceConfigs+=ActorInstanceConfig*
		public Group getGroup() { return cGroup; }

		//actorClassConfigs+=ActorClassConfig*
		public Assignment getActorClassConfigsAssignment_0() { return cActorClassConfigsAssignment_0; }

		//ActorClassConfig
		public RuleCall getActorClassConfigsActorClassConfigParserRuleCall_0_0() { return cActorClassConfigsActorClassConfigParserRuleCall_0_0; }

		//actorInstanceConfigs+=ActorInstanceConfig*
		public Assignment getActorInstanceConfigsAssignment_1() { return cActorInstanceConfigsAssignment_1; }

		//ActorInstanceConfig
		public RuleCall getActorInstanceConfigsActorInstanceConfigParserRuleCall_1_0() { return cActorInstanceConfigsActorInstanceConfigParserRuleCall_1_0; }
	}

	public class ActorClassConfigElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ActorClassConfig");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cActorClassConfigKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cActorClassAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cActorClassActorClassCrossReference_1_0 = (CrossReference)cActorClassAssignment_1.eContents().get(0);
		private final RuleCall cActorClassActorClassIDTerminalRuleCall_1_0_1 = (RuleCall)cActorClassActorClassCrossReference_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//ActorClassConfig:
		//	"ActorClassConfig" actorClass=[room::ActorClass] "{" "}";
		public ParserRule getRule() { return rule; }

		//"ActorClassConfig" actorClass=[room::ActorClass] "{" "}"
		public Group getGroup() { return cGroup; }

		//"ActorClassConfig"
		public Keyword getActorClassConfigKeyword_0() { return cActorClassConfigKeyword_0; }

		//actorClass=[room::ActorClass]
		public Assignment getActorClassAssignment_1() { return cActorClassAssignment_1; }

		//[room::ActorClass]
		public CrossReference getActorClassActorClassCrossReference_1_0() { return cActorClassActorClassCrossReference_1_0; }

		//ID
		public RuleCall getActorClassActorClassIDTerminalRuleCall_1_0_1() { return cActorClassActorClassIDTerminalRuleCall_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class ActorInstanceConfigElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ActorInstanceConfig");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cActorInstanceConfigKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//// ActorInstanceConfig MySS.AR1.AR2 {
		//// 		min = 1
		////		max = 5
		//// }
		//ActorInstanceConfig:
		//	"ActorInstanceConfig" / * root=[room::SubSystemClass|FQN] '/' path=RefPath * / "{" "}";
		public ParserRule getRule() { return rule; }

		//"ActorInstanceConfig" / * root=[room::SubSystemClass|FQN] '/' path=RefPath * / "{" "}"
		public Group getGroup() { return cGroup; }

		//"ActorInstanceConfig"
		public Keyword getActorInstanceConfigKeyword_0() { return cActorInstanceConfigKeyword_0; }

		/// * root=[room::SubSystemClass|FQN] '/' path=RefPath * / "{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2() { return cRightCurlyBracketKeyword_2; }
	}
	
	
	private ConfigModelElements pConfigModel;
	private ActorClassConfigElements pActorClassConfig;
	private ActorInstanceConfigElements pActorInstanceConfig;
	
	private final GrammarProvider grammarProvider;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public ConfigGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammarProvider = grammarProvider;
		this.gaTerminals = gaTerminals;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//ConfigModel:
	//	actorClassConfigs+=ActorClassConfig* actorInstanceConfigs+=ActorInstanceConfig*;
	public ConfigModelElements getConfigModelAccess() {
		return (pConfigModel != null) ? pConfigModel : (pConfigModel = new ConfigModelElements());
	}
	
	public ParserRule getConfigModelRule() {
		return getConfigModelAccess().getRule();
	}

	//ActorClassConfig:
	//	"ActorClassConfig" actorClass=[room::ActorClass] "{" "}";
	public ActorClassConfigElements getActorClassConfigAccess() {
		return (pActorClassConfig != null) ? pActorClassConfig : (pActorClassConfig = new ActorClassConfigElements());
	}
	
	public ParserRule getActorClassConfigRule() {
		return getActorClassConfigAccess().getRule();
	}

	//// ActorInstanceConfig MySS.AR1.AR2 {
	//// 		min = 1
	////		max = 5
	//// }
	//ActorInstanceConfig:
	//	"ActorInstanceConfig" / * root=[room::SubSystemClass|FQN] '/' path=RefPath * / "{" "}";
	public ActorInstanceConfigElements getActorInstanceConfigAccess() {
		return (pActorInstanceConfig != null) ? pActorInstanceConfig : (pActorInstanceConfig = new ActorInstanceConfigElements());
	}
	
	public ParserRule getActorInstanceConfigRule() {
		return getActorInstanceConfigAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
