/*
* generated by Xtext
*/
grammar InternalFSMtest;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.eclipse.etrice.generator.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.eclipse.etrice.generator.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.eclipse.etrice.generator.services.FSMtestGrammarAccess;

}

@parser::members {
 
 	private FSMtestGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(FSMtestGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getAlternatives()); }
(rule__Model__Alternatives)*
{ after(grammarAccess.getModelAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFsmDefinition
entryRuleFsmDefinition 
:
{ before(grammarAccess.getFsmDefinitionRule()); }
	 ruleFsmDefinition
{ after(grammarAccess.getFsmDefinitionRule()); } 
	 EOF 
;

// Rule FsmDefinition
ruleFsmDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFsmDefinitionAccess().getGroup()); }
(rule__FsmDefinition__Group__0)
{ after(grammarAccess.getFsmDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRandomTest
entryRuleRandomTest 
:
{ before(grammarAccess.getRandomTestRule()); }
	 ruleRandomTest
{ after(grammarAccess.getRandomTestRule()); } 
	 EOF 
;

// Rule RandomTest
ruleRandomTest
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRandomTestAccess().getGroup()); }
(rule__RandomTest__Group__0)
{ after(grammarAccess.getRandomTestAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGuardDeclaration
entryRuleGuardDeclaration 
:
{ before(grammarAccess.getGuardDeclarationRule()); }
	 ruleGuardDeclaration
{ after(grammarAccess.getGuardDeclarationRule()); } 
	 EOF 
;

// Rule GuardDeclaration
ruleGuardDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGuardDeclarationAccess().getSignalAssignment()); }
(rule__GuardDeclaration__SignalAssignment)
{ after(grammarAccess.getGuardDeclarationAccess().getSignalAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransitionDeclaration
entryRuleTransitionDeclaration 
:
{ before(grammarAccess.getTransitionDeclarationRule()); }
	 ruleTransitionDeclaration
{ after(grammarAccess.getTransitionDeclarationRule()); } 
	 EOF 
;

// Rule TransitionDeclaration
ruleTransitionDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransitionDeclarationAccess().getGroup()); }
(rule__TransitionDeclaration__Group__0)
{ after(grammarAccess.getTransitionDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConditionDeclaration
entryRuleConditionDeclaration 
:
{ before(grammarAccess.getConditionDeclarationRule()); }
	 ruleConditionDeclaration
{ after(grammarAccess.getConditionDeclarationRule()); } 
	 EOF 
;

// Rule ConditionDeclaration
ruleConditionDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionDeclarationAccess().getGroup()); }
(rule__ConditionDeclaration__Group__0)
{ after(grammarAccess.getConditionDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePreconditionDeclaration
entryRulePreconditionDeclaration 
:
{ before(grammarAccess.getPreconditionDeclarationRule()); }
	 rulePreconditionDeclaration
{ after(grammarAccess.getPreconditionDeclarationRule()); } 
	 EOF 
;

// Rule PreconditionDeclaration
rulePreconditionDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPreconditionDeclarationAccess().getGroup()); }
(rule__PreconditionDeclaration__Group__0)
{ after(grammarAccess.getPreconditionDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePostconditionDeclaration
entryRulePostconditionDeclaration 
:
{ before(grammarAccess.getPostconditionDeclarationRule()); }
	 rulePostconditionDeclaration
{ after(grammarAccess.getPostconditionDeclarationRule()); } 
	 EOF 
;

// Rule PostconditionDeclaration
rulePostconditionDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPostconditionDeclarationAccess().getGroup()); }
(rule__PostconditionDeclaration__Group__0)
{ after(grammarAccess.getPostconditionDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStateDeclaration
entryRuleStateDeclaration 
:
{ before(grammarAccess.getStateDeclarationRule()); }
	 ruleStateDeclaration
{ after(grammarAccess.getStateDeclarationRule()); } 
	 EOF 
;

// Rule StateDeclaration
ruleStateDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateDeclarationAccess().getGroup()); }
(rule__StateDeclaration__Group__0)
{ after(grammarAccess.getStateDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLoopsDeclaration
entryRuleLoopsDeclaration 
:
{ before(grammarAccess.getLoopsDeclarationRule()); }
	 ruleLoopsDeclaration
{ after(grammarAccess.getLoopsDeclarationRule()); } 
	 EOF 
;

// Rule LoopsDeclaration
ruleLoopsDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLoopsDeclarationAccess().getGroup()); }
(rule__LoopsDeclaration__Group__0)
{ after(grammarAccess.getLoopsDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSeedDeclaration
entryRuleSeedDeclaration 
:
{ before(grammarAccess.getSeedDeclarationRule()); }
	 ruleSeedDeclaration
{ after(grammarAccess.getSeedDeclarationRule()); } 
	 EOF 
;

// Rule SeedDeclaration
ruleSeedDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSeedDeclarationAccess().getGroup()); }
(rule__SeedDeclaration__Group__0)
{ after(grammarAccess.getSeedDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignalDeclaration
entryRuleSignalDeclaration 
:
{ before(grammarAccess.getSignalDeclarationRule()); }
	 ruleSignalDeclaration
{ after(grammarAccess.getSignalDeclarationRule()); } 
	 EOF 
;

// Rule SignalDeclaration
ruleSignalDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalDeclarationAccess().getGroup()); }
(rule__SignalDeclaration__Group__0)
{ after(grammarAccess.getSignalDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Model__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getFsmDefinitionsAssignment_0()); }
(rule__Model__FsmDefinitionsAssignment_0)
{ after(grammarAccess.getModelAccess().getFsmDefinitionsAssignment_0()); }
)

    |(
{ before(grammarAccess.getModelAccess().getRandomTestsAssignment_1()); }
(rule__Model__RandomTestsAssignment_1)
{ after(grammarAccess.getModelAccess().getRandomTestsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionDeclaration__Alternatives_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionDeclarationAccess().getPreconditionAssignment_6_1_0()); }
(rule__TransitionDeclaration__PreconditionAssignment_6_1_0)
{ after(grammarAccess.getTransitionDeclarationAccess().getPreconditionAssignment_6_1_0()); }
)

    |(
{ before(grammarAccess.getTransitionDeclarationAccess().getPostconditionAssignment_6_1_1()); }
(rule__TransitionDeclaration__PostconditionAssignment_6_1_1)
{ after(grammarAccess.getTransitionDeclarationAccess().getPostconditionAssignment_6_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDeclaration__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclarationAccess().getGroup_2_0()); }
(rule__SignalDeclaration__Group_2_0__0)
{ after(grammarAccess.getSignalDeclarationAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getSignalDeclarationAccess().getGroup_2_1()); }
(rule__SignalDeclaration__Group_2_1__0)
{ after(grammarAccess.getSignalDeclarationAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__FsmDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FsmDefinition__Group__0__Impl
	rule__FsmDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FsmDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFsmDefinitionAccess().getFsmdefinitionKeyword_0()); }

	'fsmdefinition' 

{ after(grammarAccess.getFsmDefinitionAccess().getFsmdefinitionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FsmDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FsmDefinition__Group__1__Impl
	rule__FsmDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FsmDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFsmDefinitionAccess().getNameAssignment_1()); }
(rule__FsmDefinition__NameAssignment_1)
{ after(grammarAccess.getFsmDefinitionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FsmDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FsmDefinition__Group__2__Impl
	rule__FsmDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FsmDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFsmDefinitionAccess().getInitialKeyword_2()); }

	'initial' 

{ after(grammarAccess.getFsmDefinitionAccess().getInitialKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FsmDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FsmDefinition__Group__3__Impl
	rule__FsmDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FsmDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFsmDefinitionAccess().getStatesAssignment_3()); }
(rule__FsmDefinition__StatesAssignment_3)
{ after(grammarAccess.getFsmDefinitionAccess().getStatesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FsmDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FsmDefinition__Group__4__Impl
	rule__FsmDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FsmDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFsmDefinitionAccess().getStatesAssignment_4()); }
(rule__FsmDefinition__StatesAssignment_4)*
{ after(grammarAccess.getFsmDefinitionAccess().getStatesAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FsmDefinition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FsmDefinition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FsmDefinition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFsmDefinitionAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getFsmDefinitionAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__RandomTest__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RandomTest__Group__0__Impl
	rule__RandomTest__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RandomTest__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRandomTestAccess().getRandomtestKeyword_0()); }

	'randomtest' 

{ after(grammarAccess.getRandomTestAccess().getRandomtestKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RandomTest__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RandomTest__Group__1__Impl
	rule__RandomTest__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RandomTest__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRandomTestAccess().getNameAssignment_1()); }
(rule__RandomTest__NameAssignment_1)
{ after(grammarAccess.getRandomTestAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RandomTest__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RandomTest__Group__2__Impl
	rule__RandomTest__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RandomTest__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRandomTestAccess().getFsmKeyword_2()); }

	'fsm:' 

{ after(grammarAccess.getRandomTestAccess().getFsmKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RandomTest__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RandomTest__Group__3__Impl
	rule__RandomTest__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RandomTest__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRandomTestAccess().getFsmAssignment_3()); }
(rule__RandomTest__FsmAssignment_3)
{ after(grammarAccess.getRandomTestAccess().getFsmAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RandomTest__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RandomTest__Group__4__Impl
	rule__RandomTest__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RandomTest__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRandomTestAccess().getLoopsDeclarationAssignment_4()); }
(rule__RandomTest__LoopsDeclarationAssignment_4)
{ after(grammarAccess.getRandomTestAccess().getLoopsDeclarationAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RandomTest__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RandomTest__Group__5__Impl
	rule__RandomTest__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RandomTest__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRandomTestAccess().getSeedDeclarationAssignment_5()); }
(rule__RandomTest__SeedDeclarationAssignment_5)?
{ after(grammarAccess.getRandomTestAccess().getSeedDeclarationAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RandomTest__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RandomTest__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RandomTest__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRandomTestAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getRandomTestAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__TransitionDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionDeclaration__Group__0__Impl
	rule__TransitionDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionDeclarationAccess().getTransitionKeyword_0()); }

	'transition' 

{ after(grammarAccess.getTransitionDeclarationAccess().getTransitionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionDeclaration__Group__1__Impl
	rule__TransitionDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionDeclarationAccess().getNameAssignment_1()); }
(rule__TransitionDeclaration__NameAssignment_1)
{ after(grammarAccess.getTransitionDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionDeclaration__Group__2__Impl
	rule__TransitionDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionDeclarationAccess().getToKeyword_2()); }

	'to' 

{ after(grammarAccess.getTransitionDeclarationAccess().getToKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionDeclaration__Group__3__Impl
	rule__TransitionDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionDeclarationAccess().getDestinationAssignment_3()); }
(rule__TransitionDeclaration__DestinationAssignment_3)
{ after(grammarAccess.getTransitionDeclarationAccess().getDestinationAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionDeclaration__Group__4__Impl
	rule__TransitionDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionDeclarationAccess().getGroup_4()); }
(rule__TransitionDeclaration__Group_4__0)?
{ after(grammarAccess.getTransitionDeclarationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionDeclaration__Group__5__Impl
	rule__TransitionDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionDeclarationAccess().getGroup_5()); }
(rule__TransitionDeclaration__Group_5__0)?
{ after(grammarAccess.getTransitionDeclarationAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionDeclaration__Group__6__Impl
	rule__TransitionDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionDeclarationAccess().getGroup_6()); }
(rule__TransitionDeclaration__Group_6__0)?
{ after(grammarAccess.getTransitionDeclarationAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionDeclaration__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionDeclaration__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionDeclaration__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionDeclarationAccess().getSemicolonKeyword_7()); }

	';' 

{ after(grammarAccess.getTransitionDeclarationAccess().getSemicolonKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__TransitionDeclaration__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionDeclaration__Group_4__0__Impl
	rule__TransitionDeclaration__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionDeclaration__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionDeclarationAccess().getTriggerKeyword_4_0()); }

	'trigger:' 

{ after(grammarAccess.getTransitionDeclarationAccess().getTriggerKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionDeclaration__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionDeclaration__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionDeclaration__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionDeclarationAccess().getTriggerAssignment_4_1()); }
(rule__TransitionDeclaration__TriggerAssignment_4_1)
{ after(grammarAccess.getTransitionDeclarationAccess().getTriggerAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TransitionDeclaration__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionDeclaration__Group_5__0__Impl
	rule__TransitionDeclaration__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionDeclaration__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionDeclarationAccess().getGuardsKeyword_5_0()); }

	'guards:' 

{ after(grammarAccess.getTransitionDeclarationAccess().getGuardsKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionDeclaration__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionDeclaration__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionDeclaration__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTransitionDeclarationAccess().getTriggersAssignment_5_1()); }
(rule__TransitionDeclaration__TriggersAssignment_5_1)
{ after(grammarAccess.getTransitionDeclarationAccess().getTriggersAssignment_5_1()); }
)
(
{ before(grammarAccess.getTransitionDeclarationAccess().getTriggersAssignment_5_1()); }
(rule__TransitionDeclaration__TriggersAssignment_5_1)*
{ after(grammarAccess.getTransitionDeclarationAccess().getTriggersAssignment_5_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TransitionDeclaration__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionDeclaration__Group_6__0__Impl
	rule__TransitionDeclaration__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionDeclaration__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionDeclarationAccess().getConstraintsKeyword_6_0()); }

	'constraints:' 

{ after(grammarAccess.getTransitionDeclarationAccess().getConstraintsKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionDeclaration__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionDeclaration__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionDeclaration__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTransitionDeclarationAccess().getAlternatives_6_1()); }
(rule__TransitionDeclaration__Alternatives_6_1)
{ after(grammarAccess.getTransitionDeclarationAccess().getAlternatives_6_1()); }
)
(
{ before(grammarAccess.getTransitionDeclarationAccess().getAlternatives_6_1()); }
(rule__TransitionDeclaration__Alternatives_6_1)*
{ after(grammarAccess.getTransitionDeclarationAccess().getAlternatives_6_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConditionDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionDeclaration__Group__0__Impl
	rule__ConditionDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionDeclarationAccess().getConditionKeyword_0()); }

	'condition' 

{ after(grammarAccess.getConditionDeclarationAccess().getConditionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionDeclarationAccess().getSignalAssignment_1()); }
(rule__ConditionDeclaration__SignalAssignment_1)
{ after(grammarAccess.getConditionDeclarationAccess().getSignalAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PreconditionDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PreconditionDeclaration__Group__0__Impl
	rule__PreconditionDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PreconditionDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreconditionDeclarationAccess().getPreconditionKeyword_0()); }

	'precondition' 

{ after(grammarAccess.getPreconditionDeclarationAccess().getPreconditionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PreconditionDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PreconditionDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PreconditionDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreconditionDeclarationAccess().getSignalAssignment_1()); }
(rule__PreconditionDeclaration__SignalAssignment_1)
{ after(grammarAccess.getPreconditionDeclarationAccess().getSignalAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PostconditionDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostconditionDeclaration__Group__0__Impl
	rule__PostconditionDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostconditionDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostconditionDeclarationAccess().getPostconditionKeyword_0()); }

	'postcondition' 

{ after(grammarAccess.getPostconditionDeclarationAccess().getPostconditionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostconditionDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostconditionDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostconditionDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostconditionDeclarationAccess().getSignalAssignment_1()); }
(rule__PostconditionDeclaration__SignalAssignment_1)
{ after(grammarAccess.getPostconditionDeclarationAccess().getSignalAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StateDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateDeclaration__Group__0__Impl
	rule__StateDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateDeclarationAccess().getStateKeyword_0()); }

	'state' 

{ after(grammarAccess.getStateDeclarationAccess().getStateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateDeclaration__Group__1__Impl
	rule__StateDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateDeclarationAccess().getNameAssignment_1()); }
(rule__StateDeclaration__NameAssignment_1)
{ after(grammarAccess.getStateDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateDeclaration__Group__2__Impl
	rule__StateDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateDeclarationAccess().getGroup_2()); }
(rule__StateDeclaration__Group_2__0)?
{ after(grammarAccess.getStateDeclarationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateDeclaration__Group__3__Impl
	rule__StateDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getStateDeclarationAccess().getTransitionsAssignment_3()); }
(rule__StateDeclaration__TransitionsAssignment_3)
{ after(grammarAccess.getStateDeclarationAccess().getTransitionsAssignment_3()); }
)
(
{ before(grammarAccess.getStateDeclarationAccess().getTransitionsAssignment_3()); }
(rule__StateDeclaration__TransitionsAssignment_3)*
{ after(grammarAccess.getStateDeclarationAccess().getTransitionsAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateDeclarationAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getStateDeclarationAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StateDeclaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateDeclaration__Group_2__0__Impl
	rule__StateDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateDeclarationAccess().getConstraintsKeyword_2_0()); }

	'constraints:' 

{ after(grammarAccess.getStateDeclarationAccess().getConstraintsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateDeclaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getStateDeclarationAccess().getConditionAssignment_2_1()); }
(rule__StateDeclaration__ConditionAssignment_2_1)
{ after(grammarAccess.getStateDeclarationAccess().getConditionAssignment_2_1()); }
)
(
{ before(grammarAccess.getStateDeclarationAccess().getConditionAssignment_2_1()); }
(rule__StateDeclaration__ConditionAssignment_2_1)*
{ after(grammarAccess.getStateDeclarationAccess().getConditionAssignment_2_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LoopsDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoopsDeclaration__Group__0__Impl
	rule__LoopsDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopsDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopsDeclarationAccess().getLoopsKeyword_0()); }

	'loops:' 

{ after(grammarAccess.getLoopsDeclarationAccess().getLoopsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoopsDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoopsDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopsDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopsDeclarationAccess().getValAssignment_1()); }
(rule__LoopsDeclaration__ValAssignment_1)
{ after(grammarAccess.getLoopsDeclarationAccess().getValAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SeedDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SeedDeclaration__Group__0__Impl
	rule__SeedDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SeedDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSeedDeclarationAccess().getRandseedKeyword_0()); }

	'randseed:' 

{ after(grammarAccess.getSeedDeclarationAccess().getRandseedKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SeedDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SeedDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SeedDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSeedDeclarationAccess().getValAssignment_1()); }
(rule__SeedDeclaration__ValAssignment_1)
{ after(grammarAccess.getSeedDeclarationAccess().getValAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignalDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalDeclaration__Group__0__Impl
	rule__SignalDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclarationAccess().getGroup_0()); }
(rule__SignalDeclaration__Group_0__0)?
{ after(grammarAccess.getSignalDeclarationAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalDeclaration__Group__1__Impl
	rule__SignalDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclarationAccess().getSignameAssignment_1()); }
(rule__SignalDeclaration__SignameAssignment_1)
{ after(grammarAccess.getSignalDeclarationAccess().getSignameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclarationAccess().getAlternatives_2()); }
(rule__SignalDeclaration__Alternatives_2)?
{ after(grammarAccess.getSignalDeclarationAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SignalDeclaration__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalDeclaration__Group_0__0__Impl
	rule__SignalDeclaration__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDeclaration__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclarationAccess().getPortAssignment_0_0()); }
(rule__SignalDeclaration__PortAssignment_0_0)
{ after(grammarAccess.getSignalDeclarationAccess().getPortAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDeclaration__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalDeclaration__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDeclaration__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclarationAccess().getFullStopKeyword_0_1()); }

	'.' 

{ after(grammarAccess.getSignalDeclarationAccess().getFullStopKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignalDeclaration__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalDeclaration__Group_2_0__0__Impl
	rule__SignalDeclaration__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDeclaration__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclarationAccess().getEqualsSignKeyword_2_0_0()); }

	'=' 

{ after(grammarAccess.getSignalDeclarationAccess().getEqualsSignKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDeclaration__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalDeclaration__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDeclaration__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclarationAccess().getIntValAssignment_2_0_1()); }
(rule__SignalDeclaration__IntValAssignment_2_0_1)
{ after(grammarAccess.getSignalDeclarationAccess().getIntValAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignalDeclaration__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalDeclaration__Group_2_1__0__Impl
	rule__SignalDeclaration__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDeclaration__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclarationAccess().getEqualsSignKeyword_2_1_0()); }

	'=' 

{ after(grammarAccess.getSignalDeclarationAccess().getEqualsSignKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDeclaration__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalDeclaration__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDeclaration__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclarationAccess().getStrValAssignment_2_1_1()); }
(rule__SignalDeclaration__StrValAssignment_2_1_1)
{ after(grammarAccess.getSignalDeclarationAccess().getStrValAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__FsmDefinitionsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getFsmDefinitionsFsmDefinitionParserRuleCall_0_0()); }
	ruleFsmDefinition{ after(grammarAccess.getModelAccess().getFsmDefinitionsFsmDefinitionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__RandomTestsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getRandomTestsRandomTestParserRuleCall_1_0()); }
	ruleRandomTest{ after(grammarAccess.getModelAccess().getRandomTestsRandomTestParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FsmDefinition__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFsmDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFsmDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FsmDefinition__StatesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFsmDefinitionAccess().getStatesStateDeclarationParserRuleCall_3_0()); }
	ruleStateDeclaration{ after(grammarAccess.getFsmDefinitionAccess().getStatesStateDeclarationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FsmDefinition__StatesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFsmDefinitionAccess().getStatesStateDeclarationParserRuleCall_4_0()); }
	ruleStateDeclaration{ after(grammarAccess.getFsmDefinitionAccess().getStatesStateDeclarationParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RandomTest__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRandomTestAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getRandomTestAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RandomTest__FsmAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRandomTestAccess().getFsmFsmDefinitionCrossReference_3_0()); }
(
{ before(grammarAccess.getRandomTestAccess().getFsmFsmDefinitionIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getRandomTestAccess().getFsmFsmDefinitionIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getRandomTestAccess().getFsmFsmDefinitionCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RandomTest__LoopsDeclarationAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRandomTestAccess().getLoopsDeclarationLoopsDeclarationParserRuleCall_4_0()); }
	ruleLoopsDeclaration{ after(grammarAccess.getRandomTestAccess().getLoopsDeclarationLoopsDeclarationParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RandomTest__SeedDeclarationAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRandomTestAccess().getSeedDeclarationSeedDeclarationParserRuleCall_5_0()); }
	ruleSeedDeclaration{ after(grammarAccess.getRandomTestAccess().getSeedDeclarationSeedDeclarationParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GuardDeclaration__SignalAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGuardDeclarationAccess().getSignalSignalDeclarationParserRuleCall_0()); }
	ruleSignalDeclaration{ after(grammarAccess.getGuardDeclarationAccess().getSignalSignalDeclarationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getTransitionDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionDeclaration__DestinationAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionDeclarationAccess().getDestinationStateDeclarationCrossReference_3_0()); }
(
{ before(grammarAccess.getTransitionDeclarationAccess().getDestinationStateDeclarationIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getTransitionDeclarationAccess().getDestinationStateDeclarationIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getTransitionDeclarationAccess().getDestinationStateDeclarationCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionDeclaration__TriggerAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionDeclarationAccess().getTriggerSignalDeclarationParserRuleCall_4_1_0()); }
	ruleSignalDeclaration{ after(grammarAccess.getTransitionDeclarationAccess().getTriggerSignalDeclarationParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionDeclaration__TriggersAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionDeclarationAccess().getTriggersGuardDeclarationParserRuleCall_5_1_0()); }
	ruleGuardDeclaration{ after(grammarAccess.getTransitionDeclarationAccess().getTriggersGuardDeclarationParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionDeclaration__PreconditionAssignment_6_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionDeclarationAccess().getPreconditionPreconditionDeclarationParserRuleCall_6_1_0_0()); }
	rulePreconditionDeclaration{ after(grammarAccess.getTransitionDeclarationAccess().getPreconditionPreconditionDeclarationParserRuleCall_6_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionDeclaration__PostconditionAssignment_6_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionDeclarationAccess().getPostconditionPostconditionDeclarationParserRuleCall_6_1_1_0()); }
	rulePostconditionDeclaration{ after(grammarAccess.getTransitionDeclarationAccess().getPostconditionPostconditionDeclarationParserRuleCall_6_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionDeclaration__SignalAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionDeclarationAccess().getSignalSignalDeclarationParserRuleCall_1_0()); }
	ruleSignalDeclaration{ after(grammarAccess.getConditionDeclarationAccess().getSignalSignalDeclarationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PreconditionDeclaration__SignalAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreconditionDeclarationAccess().getSignalSignalDeclarationParserRuleCall_1_0()); }
	ruleSignalDeclaration{ after(grammarAccess.getPreconditionDeclarationAccess().getSignalSignalDeclarationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostconditionDeclaration__SignalAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostconditionDeclarationAccess().getSignalSignalDeclarationParserRuleCall_1_0()); }
	ruleSignalDeclaration{ after(grammarAccess.getPostconditionDeclarationAccess().getSignalSignalDeclarationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getStateDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__ConditionAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateDeclarationAccess().getConditionConditionDeclarationParserRuleCall_2_1_0()); }
	ruleConditionDeclaration{ after(grammarAccess.getStateDeclarationAccess().getConditionConditionDeclarationParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateDeclaration__TransitionsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateDeclarationAccess().getTransitionsTransitionDeclarationParserRuleCall_3_0()); }
	ruleTransitionDeclaration{ after(grammarAccess.getStateDeclarationAccess().getTransitionsTransitionDeclarationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoopsDeclaration__ValAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopsDeclarationAccess().getValINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getLoopsDeclarationAccess().getValINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SeedDeclaration__ValAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSeedDeclarationAccess().getValINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getSeedDeclarationAccess().getValINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDeclaration__PortAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclarationAccess().getPortIDTerminalRuleCall_0_0_0()); }
	RULE_ID{ after(grammarAccess.getSignalDeclarationAccess().getPortIDTerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDeclaration__SignameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclarationAccess().getSignameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSignalDeclarationAccess().getSignameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDeclaration__IntValAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclarationAccess().getIntValINTTerminalRuleCall_2_0_1_0()); }
	RULE_INT{ after(grammarAccess.getSignalDeclarationAccess().getIntValINTTerminalRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDeclaration__StrValAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclarationAccess().getStrValSTRINGTerminalRuleCall_2_1_1_0()); }
	RULE_STRING{ after(grammarAccess.getSignalDeclarationAccess().getStrValSTRINGTerminalRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


