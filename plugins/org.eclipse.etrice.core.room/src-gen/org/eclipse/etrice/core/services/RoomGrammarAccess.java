/*
* generated by Xtext
*/
package org.eclipse.etrice.core.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.etrice.core.common.services.BaseGrammarAccess;

@Singleton
public class RoomGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class RoomModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RoomModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRoomModelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameFQNParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cDocuAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDocuDocumentationParserRuleCall_2_0 = (RuleCall)cDocuAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cImportsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cImportsImportParserRuleCall_4_0 = (RuleCall)cImportsAssignment_4.eContents().get(0);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Assignment cPrimitiveTypesAssignment_5_0 = (Assignment)cAlternatives_5.eContents().get(0);
		private final RuleCall cPrimitiveTypesPrimitiveTypeParserRuleCall_5_0_0 = (RuleCall)cPrimitiveTypesAssignment_5_0.eContents().get(0);
		private final Assignment cEnumerationTypesAssignment_5_1 = (Assignment)cAlternatives_5.eContents().get(1);
		private final RuleCall cEnumerationTypesEnumerationTypeParserRuleCall_5_1_0 = (RuleCall)cEnumerationTypesAssignment_5_1.eContents().get(0);
		private final Assignment cExternalTypesAssignment_5_2 = (Assignment)cAlternatives_5.eContents().get(2);
		private final RuleCall cExternalTypesExternalTypeParserRuleCall_5_2_0 = (RuleCall)cExternalTypesAssignment_5_2.eContents().get(0);
		private final Assignment cDataClassesAssignment_5_3 = (Assignment)cAlternatives_5.eContents().get(3);
		private final RuleCall cDataClassesDataClassParserRuleCall_5_3_0 = (RuleCall)cDataClassesAssignment_5_3.eContents().get(0);
		private final Assignment cProtocolClassesAssignment_5_4 = (Assignment)cAlternatives_5.eContents().get(4);
		private final RuleCall cProtocolClassesGeneralProtocolClassParserRuleCall_5_4_0 = (RuleCall)cProtocolClassesAssignment_5_4.eContents().get(0);
		private final Assignment cActorClassesAssignment_5_5 = (Assignment)cAlternatives_5.eContents().get(5);
		private final RuleCall cActorClassesActorClassParserRuleCall_5_5_0 = (RuleCall)cActorClassesAssignment_5_5.eContents().get(0);
		private final Assignment cSubSystemClassesAssignment_5_6 = (Assignment)cAlternatives_5.eContents().get(6);
		private final RuleCall cSubSystemClassesSubSystemClassParserRuleCall_5_6_0 = (RuleCall)cSubSystemClassesAssignment_5_6.eContents().get(0);
		private final Assignment cSystemsAssignment_5_7 = (Assignment)cAlternatives_5.eContents().get(7);
		private final RuleCall cSystemsLogicalSystemParserRuleCall_5_7_0 = (RuleCall)cSystemsAssignment_5_7.eContents().get(0);
		private final Assignment cAnnotationTypesAssignment_5_8 = (Assignment)cAlternatives_5.eContents().get(8);
		private final RuleCall cAnnotationTypesAnnotationTypeParserRuleCall_5_8_0 = (RuleCall)cAnnotationTypesAssignment_5_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//RoomModel:
		//	"RoomModel" name=FQN docu=Documentation? "{" imports+=Import* (primitiveTypes+=PrimitiveType |
		//	enumerationTypes+=EnumerationType | externalTypes+=ExternalType | dataClasses+=DataClass |
		//	protocolClasses+=GeneralProtocolClass | actorClasses+=ActorClass | subSystemClasses+=SubSystemClass |
		//	systems+=LogicalSystem | annotationTypes+=AnnotationType)* "}";
		public ParserRule getRule() { return rule; }

		//"RoomModel" name=FQN docu=Documentation? "{" imports+=Import* (primitiveTypes+=PrimitiveType |
		//enumerationTypes+=EnumerationType | externalTypes+=ExternalType | dataClasses+=DataClass |
		//protocolClasses+=GeneralProtocolClass | actorClasses+=ActorClass | subSystemClasses+=SubSystemClass |
		//systems+=LogicalSystem | annotationTypes+=AnnotationType)* "}"
		public Group getGroup() { return cGroup; }

		//"RoomModel"
		public Keyword getRoomModelKeyword_0() { return cRoomModelKeyword_0; }

		//name=FQN
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//FQN
		public RuleCall getNameFQNParserRuleCall_1_0() { return cNameFQNParserRuleCall_1_0; }

		//docu=Documentation?
		public Assignment getDocuAssignment_2() { return cDocuAssignment_2; }

		//Documentation
		public RuleCall getDocuDocumentationParserRuleCall_2_0() { return cDocuDocumentationParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//imports+=Import*
		public Assignment getImportsAssignment_4() { return cImportsAssignment_4; }

		//Import
		public RuleCall getImportsImportParserRuleCall_4_0() { return cImportsImportParserRuleCall_4_0; }

		//(primitiveTypes+=PrimitiveType | enumerationTypes+=EnumerationType | externalTypes+=ExternalType |
		//dataClasses+=DataClass | protocolClasses+=GeneralProtocolClass | actorClasses+=ActorClass |
		//subSystemClasses+=SubSystemClass | systems+=LogicalSystem | annotationTypes+=AnnotationType)*
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//primitiveTypes+=PrimitiveType
		public Assignment getPrimitiveTypesAssignment_5_0() { return cPrimitiveTypesAssignment_5_0; }

		//PrimitiveType
		public RuleCall getPrimitiveTypesPrimitiveTypeParserRuleCall_5_0_0() { return cPrimitiveTypesPrimitiveTypeParserRuleCall_5_0_0; }

		//enumerationTypes+=EnumerationType
		public Assignment getEnumerationTypesAssignment_5_1() { return cEnumerationTypesAssignment_5_1; }

		//EnumerationType
		public RuleCall getEnumerationTypesEnumerationTypeParserRuleCall_5_1_0() { return cEnumerationTypesEnumerationTypeParserRuleCall_5_1_0; }

		//externalTypes+=ExternalType
		public Assignment getExternalTypesAssignment_5_2() { return cExternalTypesAssignment_5_2; }

		//ExternalType
		public RuleCall getExternalTypesExternalTypeParserRuleCall_5_2_0() { return cExternalTypesExternalTypeParserRuleCall_5_2_0; }

		//dataClasses+=DataClass
		public Assignment getDataClassesAssignment_5_3() { return cDataClassesAssignment_5_3; }

		//DataClass
		public RuleCall getDataClassesDataClassParserRuleCall_5_3_0() { return cDataClassesDataClassParserRuleCall_5_3_0; }

		//protocolClasses+=GeneralProtocolClass
		public Assignment getProtocolClassesAssignment_5_4() { return cProtocolClassesAssignment_5_4; }

		//GeneralProtocolClass
		public RuleCall getProtocolClassesGeneralProtocolClassParserRuleCall_5_4_0() { return cProtocolClassesGeneralProtocolClassParserRuleCall_5_4_0; }

		//actorClasses+=ActorClass
		public Assignment getActorClassesAssignment_5_5() { return cActorClassesAssignment_5_5; }

		//ActorClass
		public RuleCall getActorClassesActorClassParserRuleCall_5_5_0() { return cActorClassesActorClassParserRuleCall_5_5_0; }

		//subSystemClasses+=SubSystemClass
		public Assignment getSubSystemClassesAssignment_5_6() { return cSubSystemClassesAssignment_5_6; }

		//SubSystemClass
		public RuleCall getSubSystemClassesSubSystemClassParserRuleCall_5_6_0() { return cSubSystemClassesSubSystemClassParserRuleCall_5_6_0; }

		//systems+=LogicalSystem
		public Assignment getSystemsAssignment_5_7() { return cSystemsAssignment_5_7; }

		//LogicalSystem
		public RuleCall getSystemsLogicalSystemParserRuleCall_5_7_0() { return cSystemsLogicalSystemParserRuleCall_5_7_0; }

		//annotationTypes+=AnnotationType
		public Assignment getAnnotationTypesAssignment_5_8() { return cAnnotationTypesAssignment_5_8; }

		//AnnotationType
		public RuleCall getAnnotationTypesAnnotationTypeParserRuleCall_5_8_0() { return cAnnotationTypesAnnotationTypeParserRuleCall_5_8_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class RoomClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RoomClass");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDataTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cGeneralProtocolClassParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cStructureClassParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//RoomClass:
		//	DataType | GeneralProtocolClass | StructureClass;
		public ParserRule getRule() { return rule; }

		//DataType | GeneralProtocolClass | StructureClass
		public Alternatives getAlternatives() { return cAlternatives; }

		//DataType
		public RuleCall getDataTypeParserRuleCall_0() { return cDataTypeParserRuleCall_0; }

		//GeneralProtocolClass
		public RuleCall getGeneralProtocolClassParserRuleCall_1() { return cGeneralProtocolClassParserRuleCall_1; }

		//StructureClass
		public RuleCall getStructureClassParserRuleCall_2() { return cStructureClassParserRuleCall_2; }
	}

	public class StructureClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StructureClass");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cActorContainerClassParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cLogicalSystemParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//StructureClass:
		//	ActorContainerClass | LogicalSystem;
		public ParserRule getRule() { return rule; }

		//ActorContainerClass | LogicalSystem
		public Alternatives getAlternatives() { return cAlternatives; }

		//ActorContainerClass
		public RuleCall getActorContainerClassParserRuleCall_0() { return cActorContainerClassParserRuleCall_0; }

		//LogicalSystem
		public RuleCall getLogicalSystemParserRuleCall_1() { return cLogicalSystemParserRuleCall_1; }
	}

	public class ActorContainerClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ActorContainerClass");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cActorClassParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSubSystemClassParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ActorContainerClass:
		//	ActorClass | SubSystemClass;
		public ParserRule getRule() { return rule; }

		//ActorClass | SubSystemClass
		public Alternatives getAlternatives() { return cAlternatives; }

		//ActorClass
		public RuleCall getActorClassParserRuleCall_0() { return cActorClassParserRuleCall_0; }

		//SubSystemClass
		public RuleCall getSubSystemClassParserRuleCall_1() { return cSubSystemClassParserRuleCall_1; }
	}

	public class VarDeclElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "VarDecl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cRefTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cRefTypeRefableTypeParserRuleCall_2_0 = (RuleCall)cRefTypeAssignment_2.eContents().get(0);
		
		//// **************************************************************
		//// data class
		//VarDecl:
		//	name=ID ":" refType=RefableType;
		public ParserRule getRule() { return rule; }

		//name=ID ":" refType=RefableType
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//refType=RefableType
		public Assignment getRefTypeAssignment_2() { return cRefTypeAssignment_2; }

		//RefableType
		public RuleCall getRefTypeRefableTypeParserRuleCall_2_0() { return cRefTypeRefableTypeParserRuleCall_2_0; }
	}

	public class RefableTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RefableType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cTypeDataTypeCrossReference_0_0 = (CrossReference)cTypeAssignment_0.eContents().get(0);
		private final RuleCall cTypeDataTypeFQNParserRuleCall_0_0_1 = (RuleCall)cTypeDataTypeCrossReference_0_0.eContents().get(1);
		private final Assignment cRefAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cRefRefKeyword_1_0 = (Keyword)cRefAssignment_1.eContents().get(0);
		
		//RefableType:
		//	type=[DataType|FQN] ref?="ref"?;
		public ParserRule getRule() { return rule; }

		//type=[DataType|FQN] ref?="ref"?
		public Group getGroup() { return cGroup; }

		//type=[DataType|FQN]
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//[DataType|FQN]
		public CrossReference getTypeDataTypeCrossReference_0_0() { return cTypeDataTypeCrossReference_0_0; }

		//FQN
		public RuleCall getTypeDataTypeFQNParserRuleCall_0_0_1() { return cTypeDataTypeFQNParserRuleCall_0_0_1; }

		//ref?="ref"?
		public Assignment getRefAssignment_1() { return cRefAssignment_1; }

		//"ref"
		public Keyword getRefRefKeyword_1_0() { return cRefRefKeyword_1_0; }
	}

	public class DataTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DataType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPrimitiveTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEnumerationTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cComplexTypeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//DataType:
		//	PrimitiveType | EnumerationType | ComplexType;
		public ParserRule getRule() { return rule; }

		//PrimitiveType | EnumerationType | ComplexType
		public Alternatives getAlternatives() { return cAlternatives; }

		//PrimitiveType
		public RuleCall getPrimitiveTypeParserRuleCall_0() { return cPrimitiveTypeParserRuleCall_0; }

		//EnumerationType
		public RuleCall getEnumerationTypeParserRuleCall_1() { return cEnumerationTypeParserRuleCall_1; }

		//ComplexType
		public RuleCall getComplexTypeParserRuleCall_2() { return cComplexTypeParserRuleCall_2; }
	}

	public class ComplexTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ComplexType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDataClassParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cExternalTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ComplexType:
		//	DataClass | ExternalType;
		public ParserRule getRule() { return rule; }

		//DataClass | ExternalType
		public Alternatives getAlternatives() { return cAlternatives; }

		//DataClass
		public RuleCall getDataClassParserRuleCall_0() { return cDataClassParserRuleCall_0; }

		//ExternalType
		public RuleCall getExternalTypeParserRuleCall_1() { return cExternalTypeParserRuleCall_1; }
	}

	public class PrimitiveTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PrimitiveType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPrimitiveTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeLiteralTypeEnumRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTargetNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTargetNameFQNParserRuleCall_5_0 = (RuleCall)cTargetNameAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cLeftParenthesisKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cCastNameAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cCastNameFQNParserRuleCall_6_1_0 = (RuleCall)cCastNameAssignment_6_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Keyword cDefaultKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cDefaultValueLiteralAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cDefaultValueLiteralSTRINGTerminalRuleCall_8_0 = (RuleCall)cDefaultValueLiteralAssignment_8.eContents().get(0);
		private final Assignment cDocuAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cDocuDocumentationParserRuleCall_9_0 = (RuleCall)cDocuAssignment_9.eContents().get(0);
		
		//PrimitiveType:
		//	"PrimitiveType" name=ID ":" type=LiteralType "->" targetName=FQN ("(" castName=FQN ")")? "default"
		//	defaultValueLiteral=STRING docu=Documentation?;
		public ParserRule getRule() { return rule; }

		//"PrimitiveType" name=ID ":" type=LiteralType "->" targetName=FQN ("(" castName=FQN ")")? "default"
		//defaultValueLiteral=STRING docu=Documentation?
		public Group getGroup() { return cGroup; }

		//"PrimitiveType"
		public Keyword getPrimitiveTypeKeyword_0() { return cPrimitiveTypeKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=LiteralType
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//LiteralType
		public RuleCall getTypeLiteralTypeEnumRuleCall_3_0() { return cTypeLiteralTypeEnumRuleCall_3_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_4() { return cHyphenMinusGreaterThanSignKeyword_4; }

		//targetName=FQN
		public Assignment getTargetNameAssignment_5() { return cTargetNameAssignment_5; }

		//FQN
		public RuleCall getTargetNameFQNParserRuleCall_5_0() { return cTargetNameFQNParserRuleCall_5_0; }

		//("(" castName=FQN ")")?
		public Group getGroup_6() { return cGroup_6; }

		//"("
		public Keyword getLeftParenthesisKeyword_6_0() { return cLeftParenthesisKeyword_6_0; }

		//castName=FQN
		public Assignment getCastNameAssignment_6_1() { return cCastNameAssignment_6_1; }

		//FQN
		public RuleCall getCastNameFQNParserRuleCall_6_1_0() { return cCastNameFQNParserRuleCall_6_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_6_2() { return cRightParenthesisKeyword_6_2; }

		//"default"
		public Keyword getDefaultKeyword_7() { return cDefaultKeyword_7; }

		//defaultValueLiteral=STRING
		public Assignment getDefaultValueLiteralAssignment_8() { return cDefaultValueLiteralAssignment_8; }

		//STRING
		public RuleCall getDefaultValueLiteralSTRINGTerminalRuleCall_8_0() { return cDefaultValueLiteralSTRINGTerminalRuleCall_8_0; }

		//docu=Documentation?
		public Assignment getDocuAssignment_9() { return cDocuAssignment_9; }

		//Documentation
		public RuleCall getDocuDocumentationParserRuleCall_9_0() { return cDocuDocumentationParserRuleCall_9_0; }
	}

	public class EnumerationTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EnumerationType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEnumerationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cDocuAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDocuDocumentationParserRuleCall_2_0 = (RuleCall)cDocuAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cOfKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cPrimitiveTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cPrimitiveTypePrimitiveTypeCrossReference_3_1_0 = (CrossReference)cPrimitiveTypeAssignment_3_1.eContents().get(0);
		private final RuleCall cPrimitiveTypePrimitiveTypeFQNParserRuleCall_3_1_0_1 = (RuleCall)cPrimitiveTypePrimitiveTypeCrossReference_3_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cLiteralsAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cLiteralsEnumLiteralParserRuleCall_5_0_0 = (RuleCall)cLiteralsAssignment_5_0.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cGroup_5.eContents().get(1);
		private final Keyword cCommaKeyword_5_1_0 = (Keyword)cGroup_5_1.eContents().get(0);
		private final Assignment cLiteralsAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final RuleCall cLiteralsEnumLiteralParserRuleCall_5_1_1_0 = (RuleCall)cLiteralsAssignment_5_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//EnumerationType:
		//	"Enumeration" name=ID docu=Documentation? ("of" primitiveType=[PrimitiveType|FQN])? "{" (literals+=EnumLiteral (","
		//	literals+=EnumLiteral)*)? "}";
		public ParserRule getRule() { return rule; }

		//"Enumeration" name=ID docu=Documentation? ("of" primitiveType=[PrimitiveType|FQN])? "{" (literals+=EnumLiteral (","
		//literals+=EnumLiteral)*)? "}"
		public Group getGroup() { return cGroup; }

		//"Enumeration"
		public Keyword getEnumerationKeyword_0() { return cEnumerationKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//docu=Documentation?
		public Assignment getDocuAssignment_2() { return cDocuAssignment_2; }

		//Documentation
		public RuleCall getDocuDocumentationParserRuleCall_2_0() { return cDocuDocumentationParserRuleCall_2_0; }

		//("of" primitiveType=[PrimitiveType|FQN])?
		public Group getGroup_3() { return cGroup_3; }

		//"of"
		public Keyword getOfKeyword_3_0() { return cOfKeyword_3_0; }

		//primitiveType=[PrimitiveType|FQN]
		public Assignment getPrimitiveTypeAssignment_3_1() { return cPrimitiveTypeAssignment_3_1; }

		//[PrimitiveType|FQN]
		public CrossReference getPrimitiveTypePrimitiveTypeCrossReference_3_1_0() { return cPrimitiveTypePrimitiveTypeCrossReference_3_1_0; }

		//FQN
		public RuleCall getPrimitiveTypePrimitiveTypeFQNParserRuleCall_3_1_0_1() { return cPrimitiveTypePrimitiveTypeFQNParserRuleCall_3_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//(literals+=EnumLiteral ("," literals+=EnumLiteral)*)?
		public Group getGroup_5() { return cGroup_5; }

		//literals+=EnumLiteral
		public Assignment getLiteralsAssignment_5_0() { return cLiteralsAssignment_5_0; }

		//EnumLiteral
		public RuleCall getLiteralsEnumLiteralParserRuleCall_5_0_0() { return cLiteralsEnumLiteralParserRuleCall_5_0_0; }

		//("," literals+=EnumLiteral)*
		public Group getGroup_5_1() { return cGroup_5_1; }

		//","
		public Keyword getCommaKeyword_5_1_0() { return cCommaKeyword_5_1_0; }

		//literals+=EnumLiteral
		public Assignment getLiteralsAssignment_5_1_1() { return cLiteralsAssignment_5_1_1; }

		//EnumLiteral
		public RuleCall getLiteralsEnumLiteralParserRuleCall_5_1_1_0() { return cLiteralsEnumLiteralParserRuleCall_5_1_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class EnumLiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EnumLiteral");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cEqualsSignKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cLiteralAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cLiteralIntLiteralParserRuleCall_1_1_0 = (RuleCall)cLiteralAssignment_1_1.eContents().get(0);
		
		//EnumLiteral:
		//	name=ID ("=" literal=IntLiteral)?;
		public ParserRule getRule() { return rule; }

		//name=ID ("=" literal=IntLiteral)?
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//("=" literal=IntLiteral)?
		public Group getGroup_1() { return cGroup_1; }

		//"="
		public Keyword getEqualsSignKeyword_1_0() { return cEqualsSignKeyword_1_0; }

		//literal=IntLiteral
		public Assignment getLiteralAssignment_1_1() { return cLiteralAssignment_1_1; }

		//IntLiteral
		public RuleCall getLiteralIntLiteralParserRuleCall_1_1_0() { return cLiteralIntLiteralParserRuleCall_1_1_0; }
	}

	public class ExternalTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ExternalType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExternalTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTargetNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTargetNameFQNParserRuleCall_3_0 = (RuleCall)cTargetNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDefaultKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDefaultValueLiteralAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDefaultValueLiteralSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cDefaultValueLiteralAssignment_4_1.eContents().get(0);
		private final Assignment cDocuAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cDocuDocumentationParserRuleCall_5_0 = (RuleCall)cDocuAssignment_5.eContents().get(0);
		
		//ExternalType:
		//	"ExternalType" name=ID "->" targetName=FQN ("default" defaultValueLiteral=STRING)? docu=Documentation?;
		public ParserRule getRule() { return rule; }

		//"ExternalType" name=ID "->" targetName=FQN ("default" defaultValueLiteral=STRING)? docu=Documentation?
		public Group getGroup() { return cGroup; }

		//"ExternalType"
		public Keyword getExternalTypeKeyword_0() { return cExternalTypeKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_2() { return cHyphenMinusGreaterThanSignKeyword_2; }

		//targetName=FQN
		public Assignment getTargetNameAssignment_3() { return cTargetNameAssignment_3; }

		//FQN
		public RuleCall getTargetNameFQNParserRuleCall_3_0() { return cTargetNameFQNParserRuleCall_3_0; }

		//("default" defaultValueLiteral=STRING)?
		public Group getGroup_4() { return cGroup_4; }

		//"default"
		public Keyword getDefaultKeyword_4_0() { return cDefaultKeyword_4_0; }

		//defaultValueLiteral=STRING
		public Assignment getDefaultValueLiteralAssignment_4_1() { return cDefaultValueLiteralAssignment_4_1; }

		//STRING
		public RuleCall getDefaultValueLiteralSTRINGTerminalRuleCall_4_1_0() { return cDefaultValueLiteralSTRINGTerminalRuleCall_4_1_0; }

		//docu=Documentation?
		public Assignment getDocuAssignment_5() { return cDocuAssignment_5; }

		//Documentation
		public RuleCall getDocuDocumentationParserRuleCall_5_0() { return cDocuDocumentationParserRuleCall_5_0; }
	}

	public class DataClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DataClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDataClassKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cDocuAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDocuDocumentationParserRuleCall_2_0 = (RuleCall)cDocuAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cExtendsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cBaseAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cBaseDataClassCrossReference_3_1_0 = (CrossReference)cBaseAssignment_3_1.eContents().get(0);
		private final RuleCall cBaseDataClassFQNParserRuleCall_3_1_0_1 = (RuleCall)cBaseDataClassCrossReference_3_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cAnnotationsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_5_0 = (RuleCall)cAnnotationsAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cUsercode1Keyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cUserCode1Assignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cUserCode1DetailCodeParserRuleCall_6_1_0 = (RuleCall)cUserCode1Assignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cUsercode2Keyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cUserCode2Assignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cUserCode2DetailCodeParserRuleCall_7_1_0 = (RuleCall)cUserCode2Assignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cUsercode3Keyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cUserCode3Assignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cUserCode3DetailCodeParserRuleCall_8_1_0 = (RuleCall)cUserCode3Assignment_8_1.eContents().get(0);
		private final Assignment cAttributesAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cAttributesAttributeParserRuleCall_9_0 = (RuleCall)cAttributesAssignment_9.eContents().get(0);
		private final Assignment cOperationsAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cOperationsStandardOperationParserRuleCall_10_0 = (RuleCall)cOperationsAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//// TODOHRR: define detail level language?
		//DataClass:
		//	"DataClass" name=ID docu=Documentation? ("extends" base=[DataClass|FQN])? "{" annotations+=Annotation* ("usercode1"
		//	userCode1=DetailCode)? ("usercode2" userCode2=DetailCode)? ("usercode3" userCode3=DetailCode)? attributes+=Attribute*
		//	operations+=StandardOperation* "}";
		public ParserRule getRule() { return rule; }

		//"DataClass" name=ID docu=Documentation? ("extends" base=[DataClass|FQN])? "{" annotations+=Annotation* ("usercode1"
		//userCode1=DetailCode)? ("usercode2" userCode2=DetailCode)? ("usercode3" userCode3=DetailCode)? attributes+=Attribute*
		//operations+=StandardOperation* "}"
		public Group getGroup() { return cGroup; }

		//"DataClass"
		public Keyword getDataClassKeyword_0() { return cDataClassKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//docu=Documentation?
		public Assignment getDocuAssignment_2() { return cDocuAssignment_2; }

		//Documentation
		public RuleCall getDocuDocumentationParserRuleCall_2_0() { return cDocuDocumentationParserRuleCall_2_0; }

		//("extends" base=[DataClass|FQN])?
		public Group getGroup_3() { return cGroup_3; }

		//"extends"
		public Keyword getExtendsKeyword_3_0() { return cExtendsKeyword_3_0; }

		//base=[DataClass|FQN]
		public Assignment getBaseAssignment_3_1() { return cBaseAssignment_3_1; }

		//[DataClass|FQN]
		public CrossReference getBaseDataClassCrossReference_3_1_0() { return cBaseDataClassCrossReference_3_1_0; }

		//FQN
		public RuleCall getBaseDataClassFQNParserRuleCall_3_1_0_1() { return cBaseDataClassFQNParserRuleCall_3_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//annotations+=Annotation*
		public Assignment getAnnotationsAssignment_5() { return cAnnotationsAssignment_5; }

		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_5_0() { return cAnnotationsAnnotationParserRuleCall_5_0; }

		//("usercode1" userCode1=DetailCode)?
		public Group getGroup_6() { return cGroup_6; }

		//"usercode1"
		public Keyword getUsercode1Keyword_6_0() { return cUsercode1Keyword_6_0; }

		//userCode1=DetailCode
		public Assignment getUserCode1Assignment_6_1() { return cUserCode1Assignment_6_1; }

		//DetailCode
		public RuleCall getUserCode1DetailCodeParserRuleCall_6_1_0() { return cUserCode1DetailCodeParserRuleCall_6_1_0; }

		//("usercode2" userCode2=DetailCode)?
		public Group getGroup_7() { return cGroup_7; }

		//"usercode2"
		public Keyword getUsercode2Keyword_7_0() { return cUsercode2Keyword_7_0; }

		//userCode2=DetailCode
		public Assignment getUserCode2Assignment_7_1() { return cUserCode2Assignment_7_1; }

		//DetailCode
		public RuleCall getUserCode2DetailCodeParserRuleCall_7_1_0() { return cUserCode2DetailCodeParserRuleCall_7_1_0; }

		//("usercode3" userCode3=DetailCode)?
		public Group getGroup_8() { return cGroup_8; }

		//"usercode3"
		public Keyword getUsercode3Keyword_8_0() { return cUsercode3Keyword_8_0; }

		//userCode3=DetailCode
		public Assignment getUserCode3Assignment_8_1() { return cUserCode3Assignment_8_1; }

		//DetailCode
		public RuleCall getUserCode3DetailCodeParserRuleCall_8_1_0() { return cUserCode3DetailCodeParserRuleCall_8_1_0; }

		//attributes+=Attribute*
		public Assignment getAttributesAssignment_9() { return cAttributesAssignment_9; }

		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_9_0() { return cAttributesAttributeParserRuleCall_9_0; }

		//operations+=StandardOperation*
		public Assignment getOperationsAssignment_10() { return cOperationsAssignment_10; }

		//StandardOperation
		public RuleCall getOperationsStandardOperationParserRuleCall_10_0() { return cOperationsStandardOperationParserRuleCall_10_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}

	public class AttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Attribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAttributeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cSizeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cSizeINTTerminalRuleCall_2_1_0 = (RuleCall)cSizeAssignment_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypeRefableTypeParserRuleCall_4_0 = (RuleCall)cTypeAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cEqualsSignKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cDefaultValueLiteralAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cDefaultValueLiteralSTRINGTerminalRuleCall_5_1_0 = (RuleCall)cDefaultValueLiteralAssignment_5_1.eContents().get(0);
		private final Assignment cDocuAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDocuDocumentationParserRuleCall_6_0 = (RuleCall)cDocuAssignment_6.eContents().get(0);
		
		//Attribute:
		//	"Attribute" name=ID ("[" size=INT "]")? ":" type=RefableType ("=" defaultValueLiteral=STRING)? docu=Documentation?;
		public ParserRule getRule() { return rule; }

		//"Attribute" name=ID ("[" size=INT "]")? ":" type=RefableType ("=" defaultValueLiteral=STRING)? docu=Documentation?
		public Group getGroup() { return cGroup; }

		//"Attribute"
		public Keyword getAttributeKeyword_0() { return cAttributeKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("[" size=INT "]")?
		public Group getGroup_2() { return cGroup_2; }

		//"["
		public Keyword getLeftSquareBracketKeyword_2_0() { return cLeftSquareBracketKeyword_2_0; }

		//size=INT
		public Assignment getSizeAssignment_2_1() { return cSizeAssignment_2_1; }

		//INT
		public RuleCall getSizeINTTerminalRuleCall_2_1_0() { return cSizeINTTerminalRuleCall_2_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_2_2() { return cRightSquareBracketKeyword_2_2; }

		//":"
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }

		//type=RefableType
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }

		//RefableType
		public RuleCall getTypeRefableTypeParserRuleCall_4_0() { return cTypeRefableTypeParserRuleCall_4_0; }

		//("=" defaultValueLiteral=STRING)?
		public Group getGroup_5() { return cGroup_5; }

		//"="
		public Keyword getEqualsSignKeyword_5_0() { return cEqualsSignKeyword_5_0; }

		//defaultValueLiteral=STRING
		public Assignment getDefaultValueLiteralAssignment_5_1() { return cDefaultValueLiteralAssignment_5_1; }

		//STRING
		public RuleCall getDefaultValueLiteralSTRINGTerminalRuleCall_5_1_0() { return cDefaultValueLiteralSTRINGTerminalRuleCall_5_1_0; }

		//docu=Documentation?
		public Assignment getDocuAssignment_6() { return cDocuAssignment_6; }

		//Documentation
		public RuleCall getDocuDocumentationParserRuleCall_6_0() { return cDocuDocumentationParserRuleCall_6_0; }
	}

	public class OperationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Operation");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cStandardOperationParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPortOperationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Operation:
		//	StandardOperation | PortOperation;
		public ParserRule getRule() { return rule; }

		//StandardOperation | PortOperation
		public Alternatives getAlternatives() { return cAlternatives; }

		//StandardOperation
		public RuleCall getStandardOperationParserRuleCall_0() { return cStandardOperationParserRuleCall_0; }

		//PortOperation
		public RuleCall getPortOperationParserRuleCall_1() { return cPortOperationParserRuleCall_1; }
	}

	public class StandardOperationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StandardOperation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOperationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cDestructorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cDestructorTildeKeyword_1_0 = (Keyword)cDestructorAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cArgumentsAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cArgumentsVarDeclParserRuleCall_4_0_0 = (RuleCall)cArgumentsAssignment_4_0.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cArgumentsAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cArgumentsVarDeclParserRuleCall_4_1_1_0 = (RuleCall)cArgumentsAssignment_4_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cColonKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Alternatives cAlternatives_6_1 = (Alternatives)cGroup_6.eContents().get(1);
		private final Keyword cVoidKeyword_6_1_0 = (Keyword)cAlternatives_6_1.eContents().get(0);
		private final Assignment cReturnTypeAssignment_6_1_1 = (Assignment)cAlternatives_6_1.eContents().get(1);
		private final RuleCall cReturnTypeRefableTypeParserRuleCall_6_1_1_0 = (RuleCall)cReturnTypeAssignment_6_1_1.eContents().get(0);
		private final Assignment cDocuAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cDocuDocumentationParserRuleCall_7_0 = (RuleCall)cDocuAssignment_7.eContents().get(0);
		private final Assignment cDetailCodeAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cDetailCodeDetailCodeParserRuleCall_8_0 = (RuleCall)cDetailCodeAssignment_8.eContents().get(0);
		
		//StandardOperation:
		//	"Operation" destructor?="~"? name=ID "(" (arguments+=VarDecl ("," arguments+=VarDecl)*)? ")" (":" ("void" |
		//	returnType=RefableType))? docu=Documentation? detailCode=DetailCode;
		public ParserRule getRule() { return rule; }

		//"Operation" destructor?="~"? name=ID "(" (arguments+=VarDecl ("," arguments+=VarDecl)*)? ")" (":" ("void" |
		//returnType=RefableType))? docu=Documentation? detailCode=DetailCode
		public Group getGroup() { return cGroup; }

		//"Operation"
		public Keyword getOperationKeyword_0() { return cOperationKeyword_0; }

		//destructor?="~"?
		public Assignment getDestructorAssignment_1() { return cDestructorAssignment_1; }

		//"~"
		public Keyword getDestructorTildeKeyword_1_0() { return cDestructorTildeKeyword_1_0; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }

		//(arguments+=VarDecl ("," arguments+=VarDecl)*)?
		public Group getGroup_4() { return cGroup_4; }

		//arguments+=VarDecl
		public Assignment getArgumentsAssignment_4_0() { return cArgumentsAssignment_4_0; }

		//VarDecl
		public RuleCall getArgumentsVarDeclParserRuleCall_4_0_0() { return cArgumentsVarDeclParserRuleCall_4_0_0; }

		//("," arguments+=VarDecl)*
		public Group getGroup_4_1() { return cGroup_4_1; }

		//","
		public Keyword getCommaKeyword_4_1_0() { return cCommaKeyword_4_1_0; }

		//arguments+=VarDecl
		public Assignment getArgumentsAssignment_4_1_1() { return cArgumentsAssignment_4_1_1; }

		//VarDecl
		public RuleCall getArgumentsVarDeclParserRuleCall_4_1_1_0() { return cArgumentsVarDeclParserRuleCall_4_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }

		//(":" ("void" | returnType=RefableType))?
		public Group getGroup_6() { return cGroup_6; }

		//":"
		public Keyword getColonKeyword_6_0() { return cColonKeyword_6_0; }

		//"void" | returnType=RefableType
		public Alternatives getAlternatives_6_1() { return cAlternatives_6_1; }

		//"void"
		public Keyword getVoidKeyword_6_1_0() { return cVoidKeyword_6_1_0; }

		//returnType=RefableType
		public Assignment getReturnTypeAssignment_6_1_1() { return cReturnTypeAssignment_6_1_1; }

		//RefableType
		public RuleCall getReturnTypeRefableTypeParserRuleCall_6_1_1_0() { return cReturnTypeRefableTypeParserRuleCall_6_1_1_0; }

		//docu=Documentation?
		public Assignment getDocuAssignment_7() { return cDocuAssignment_7; }

		//Documentation
		public RuleCall getDocuDocumentationParserRuleCall_7_0() { return cDocuDocumentationParserRuleCall_7_0; }

		//detailCode=DetailCode
		public Assignment getDetailCodeAssignment_8() { return cDetailCodeAssignment_8; }

		//DetailCode
		public RuleCall getDetailCodeDetailCodeParserRuleCall_8_0() { return cDetailCodeDetailCodeParserRuleCall_8_0; }
	}

	public class PortOperationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PortOperation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOperationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cArgumentsAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cArgumentsVarDeclParserRuleCall_3_0_0 = (RuleCall)cArgumentsAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cArgumentsAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cArgumentsVarDeclParserRuleCall_3_1_1_0 = (RuleCall)cArgumentsAssignment_3_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Group cGroup_5_0 = (Group)cAlternatives_5.eContents().get(0);
		private final Keyword cColonKeyword_5_0_0 = (Keyword)cGroup_5_0.eContents().get(0);
		private final Alternatives cAlternatives_5_0_1 = (Alternatives)cGroup_5_0.eContents().get(1);
		private final Keyword cVoidKeyword_5_0_1_0 = (Keyword)cAlternatives_5_0_1.eContents().get(0);
		private final Assignment cReturnTypeAssignment_5_0_1_1 = (Assignment)cAlternatives_5_0_1.eContents().get(1);
		private final RuleCall cReturnTypeRefableTypeParserRuleCall_5_0_1_1_0 = (RuleCall)cReturnTypeAssignment_5_0_1_1.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cAlternatives_5.eContents().get(1);
		private final Keyword cSendsKeyword_5_1_0 = (Keyword)cGroup_5_1.eContents().get(0);
		private final Assignment cSendsMsgAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final CrossReference cSendsMsgMessageCrossReference_5_1_1_0 = (CrossReference)cSendsMsgAssignment_5_1_1.eContents().get(0);
		private final RuleCall cSendsMsgMessageIDTerminalRuleCall_5_1_1_0_1 = (RuleCall)cSendsMsgMessageCrossReference_5_1_1_0.eContents().get(1);
		private final Assignment cDocuAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDocuDocumentationParserRuleCall_6_0 = (RuleCall)cDocuAssignment_6.eContents().get(0);
		private final Assignment cDetailCodeAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cDetailCodeDetailCodeParserRuleCall_7_0 = (RuleCall)cDetailCodeAssignment_7.eContents().get(0);
		
		//PortOperation:
		//	"Operation" name=ID "(" (arguments+=VarDecl ("," arguments+=VarDecl)*)? ")" (":" ("void" | returnType=RefableType) |
		//	"sends" sendsMsg=[Message])? docu=Documentation? detailCode=DetailCode;
		public ParserRule getRule() { return rule; }

		//"Operation" name=ID "(" (arguments+=VarDecl ("," arguments+=VarDecl)*)? ")" (":" ("void" | returnType=RefableType) |
		//"sends" sendsMsg=[Message])? docu=Documentation? detailCode=DetailCode
		public Group getGroup() { return cGroup; }

		//"Operation"
		public Keyword getOperationKeyword_0() { return cOperationKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//(arguments+=VarDecl ("," arguments+=VarDecl)*)?
		public Group getGroup_3() { return cGroup_3; }

		//arguments+=VarDecl
		public Assignment getArgumentsAssignment_3_0() { return cArgumentsAssignment_3_0; }

		//VarDecl
		public RuleCall getArgumentsVarDeclParserRuleCall_3_0_0() { return cArgumentsVarDeclParserRuleCall_3_0_0; }

		//("," arguments+=VarDecl)*
		public Group getGroup_3_1() { return cGroup_3_1; }

		//","
		public Keyword getCommaKeyword_3_1_0() { return cCommaKeyword_3_1_0; }

		//arguments+=VarDecl
		public Assignment getArgumentsAssignment_3_1_1() { return cArgumentsAssignment_3_1_1; }

		//VarDecl
		public RuleCall getArgumentsVarDeclParserRuleCall_3_1_1_0() { return cArgumentsVarDeclParserRuleCall_3_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }

		//(":" ("void" | returnType=RefableType) | "sends" sendsMsg=[Message])?
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//":" ("void" | returnType=RefableType)
		public Group getGroup_5_0() { return cGroup_5_0; }

		//":"
		public Keyword getColonKeyword_5_0_0() { return cColonKeyword_5_0_0; }

		//"void" | returnType=RefableType
		public Alternatives getAlternatives_5_0_1() { return cAlternatives_5_0_1; }

		//"void"
		public Keyword getVoidKeyword_5_0_1_0() { return cVoidKeyword_5_0_1_0; }

		//returnType=RefableType
		public Assignment getReturnTypeAssignment_5_0_1_1() { return cReturnTypeAssignment_5_0_1_1; }

		//RefableType
		public RuleCall getReturnTypeRefableTypeParserRuleCall_5_0_1_1_0() { return cReturnTypeRefableTypeParserRuleCall_5_0_1_1_0; }

		//"sends" sendsMsg=[Message]
		public Group getGroup_5_1() { return cGroup_5_1; }

		//"sends"
		public Keyword getSendsKeyword_5_1_0() { return cSendsKeyword_5_1_0; }

		//sendsMsg=[Message]
		public Assignment getSendsMsgAssignment_5_1_1() { return cSendsMsgAssignment_5_1_1; }

		//[Message]
		public CrossReference getSendsMsgMessageCrossReference_5_1_1_0() { return cSendsMsgMessageCrossReference_5_1_1_0; }

		//ID
		public RuleCall getSendsMsgMessageIDTerminalRuleCall_5_1_1_0_1() { return cSendsMsgMessageIDTerminalRuleCall_5_1_1_0_1; }

		//docu=Documentation?
		public Assignment getDocuAssignment_6() { return cDocuAssignment_6; }

		//Documentation
		public RuleCall getDocuDocumentationParserRuleCall_6_0() { return cDocuDocumentationParserRuleCall_6_0; }

		//detailCode=DetailCode
		public Assignment getDetailCodeAssignment_7() { return cDetailCodeAssignment_7; }

		//DetailCode
		public RuleCall getDetailCodeDetailCodeParserRuleCall_7_0() { return cDetailCodeDetailCodeParserRuleCall_7_0; }
	}

	public class GeneralProtocolClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GeneralProtocolClass");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cProtocolClassParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCompoundProtocolClassParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//GeneralProtocolClass:
		//	ProtocolClass | CompoundProtocolClass;
		public ParserRule getRule() { return rule; }

		//ProtocolClass | CompoundProtocolClass
		public Alternatives getAlternatives() { return cAlternatives; }

		//ProtocolClass
		public RuleCall getProtocolClassParserRuleCall_0() { return cProtocolClassParserRuleCall_0; }

		//CompoundProtocolClass
		public RuleCall getCompoundProtocolClassParserRuleCall_1() { return cCompoundProtocolClassParserRuleCall_1; }
	}

	public class ProtocolClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ProtocolClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommTypeCommunicationTypeEnumRuleCall_0_0 = (RuleCall)cCommTypeAssignment_0.eContents().get(0);
		private final Keyword cProtocolClassKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cDocuAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDocuDocumentationParserRuleCall_3_0 = (RuleCall)cDocuAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cExtendsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cBaseAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cBaseProtocolClassCrossReference_4_1_0 = (CrossReference)cBaseAssignment_4_1.eContents().get(0);
		private final RuleCall cBaseProtocolClassFQNParserRuleCall_4_1_0_1 = (RuleCall)cBaseProtocolClassCrossReference_4_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cAnnotationsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_6_0 = (RuleCall)cAnnotationsAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cUsercode1Keyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cUserCode1Assignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cUserCode1DetailCodeParserRuleCall_7_1_0 = (RuleCall)cUserCode1Assignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cUsercode2Keyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cUserCode2Assignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cUserCode2DetailCodeParserRuleCall_8_1_0 = (RuleCall)cUserCode2Assignment_8_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cUsercode3Keyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cUserCode3Assignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cUserCode3DetailCodeParserRuleCall_9_1_0 = (RuleCall)cUserCode3Assignment_9_1.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cIncomingKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Assignment cIncomingMessagesAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final RuleCall cIncomingMessagesMessageParserRuleCall_10_2_0 = (RuleCall)cIncomingMessagesAssignment_10_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10_3 = (Keyword)cGroup_10.eContents().get(3);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cOutgoingKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Assignment cOutgoingMessagesAssignment_11_2 = (Assignment)cGroup_11.eContents().get(2);
		private final RuleCall cOutgoingMessagesMessageParserRuleCall_11_2_0 = (RuleCall)cOutgoingMessagesAssignment_11_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11_3 = (Keyword)cGroup_11.eContents().get(3);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cRegularKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Keyword cPortClassKeyword_12_1 = (Keyword)cGroup_12.eContents().get(1);
		private final Assignment cRegularAssignment_12_2 = (Assignment)cGroup_12.eContents().get(2);
		private final RuleCall cRegularPortClassParserRuleCall_12_2_0 = (RuleCall)cRegularAssignment_12_2.eContents().get(0);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cConjugatedKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Keyword cPortClassKeyword_13_1 = (Keyword)cGroup_13.eContents().get(1);
		private final Assignment cConjugatedAssignment_13_2 = (Assignment)cGroup_13.eContents().get(2);
		private final RuleCall cConjugatedPortClassParserRuleCall_13_2_0 = (RuleCall)cConjugatedAssignment_13_2.eContents().get(0);
		private final Assignment cSemanticsAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cSemanticsProtocolSemanticsParserRuleCall_14_0 = (RuleCall)cSemanticsAssignment_14.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_15 = (Keyword)cGroup.eContents().get(15);
		
		//ProtocolClass:
		//	commType=CommunicationType? "ProtocolClass" name=ID docu=Documentation? ("extends" base=[ProtocolClass|FQN])? "{"
		//	annotations+=Annotation* ("usercode1" userCode1=DetailCode)? ("usercode2" userCode2=DetailCode)? ("usercode3"
		//	userCode3=DetailCode)? ("incoming" "{" incomingMessages+=Message* "}")? ("outgoing" "{" outgoingMessages+=Message*
		//	"}")? ("regular" "PortClass" regular=PortClass)? ("conjugated" "PortClass" conjugated=PortClass)?
		//	semantics=ProtocolSemantics? "}";
		public ParserRule getRule() { return rule; }

		//commType=CommunicationType? "ProtocolClass" name=ID docu=Documentation? ("extends" base=[ProtocolClass|FQN])? "{"
		//annotations+=Annotation* ("usercode1" userCode1=DetailCode)? ("usercode2" userCode2=DetailCode)? ("usercode3"
		//userCode3=DetailCode)? ("incoming" "{" incomingMessages+=Message* "}")? ("outgoing" "{" outgoingMessages+=Message*
		//"}")? ("regular" "PortClass" regular=PortClass)? ("conjugated" "PortClass" conjugated=PortClass)?
		//semantics=ProtocolSemantics? "}"
		public Group getGroup() { return cGroup; }

		//commType=CommunicationType?
		public Assignment getCommTypeAssignment_0() { return cCommTypeAssignment_0; }

		//CommunicationType
		public RuleCall getCommTypeCommunicationTypeEnumRuleCall_0_0() { return cCommTypeCommunicationTypeEnumRuleCall_0_0; }

		//"ProtocolClass"
		public Keyword getProtocolClassKeyword_1() { return cProtocolClassKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//docu=Documentation?
		public Assignment getDocuAssignment_3() { return cDocuAssignment_3; }

		//Documentation
		public RuleCall getDocuDocumentationParserRuleCall_3_0() { return cDocuDocumentationParserRuleCall_3_0; }

		//("extends" base=[ProtocolClass|FQN])?
		public Group getGroup_4() { return cGroup_4; }

		//"extends"
		public Keyword getExtendsKeyword_4_0() { return cExtendsKeyword_4_0; }

		//base=[ProtocolClass|FQN]
		public Assignment getBaseAssignment_4_1() { return cBaseAssignment_4_1; }

		//[ProtocolClass|FQN]
		public CrossReference getBaseProtocolClassCrossReference_4_1_0() { return cBaseProtocolClassCrossReference_4_1_0; }

		//FQN
		public RuleCall getBaseProtocolClassFQNParserRuleCall_4_1_0_1() { return cBaseProtocolClassFQNParserRuleCall_4_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//annotations+=Annotation*
		public Assignment getAnnotationsAssignment_6() { return cAnnotationsAssignment_6; }

		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_6_0() { return cAnnotationsAnnotationParserRuleCall_6_0; }

		//("usercode1" userCode1=DetailCode)?
		public Group getGroup_7() { return cGroup_7; }

		//"usercode1"
		public Keyword getUsercode1Keyword_7_0() { return cUsercode1Keyword_7_0; }

		//userCode1=DetailCode
		public Assignment getUserCode1Assignment_7_1() { return cUserCode1Assignment_7_1; }

		//DetailCode
		public RuleCall getUserCode1DetailCodeParserRuleCall_7_1_0() { return cUserCode1DetailCodeParserRuleCall_7_1_0; }

		//("usercode2" userCode2=DetailCode)?
		public Group getGroup_8() { return cGroup_8; }

		//"usercode2"
		public Keyword getUsercode2Keyword_8_0() { return cUsercode2Keyword_8_0; }

		//userCode2=DetailCode
		public Assignment getUserCode2Assignment_8_1() { return cUserCode2Assignment_8_1; }

		//DetailCode
		public RuleCall getUserCode2DetailCodeParserRuleCall_8_1_0() { return cUserCode2DetailCodeParserRuleCall_8_1_0; }

		//("usercode3" userCode3=DetailCode)?
		public Group getGroup_9() { return cGroup_9; }

		//"usercode3"
		public Keyword getUsercode3Keyword_9_0() { return cUsercode3Keyword_9_0; }

		//userCode3=DetailCode
		public Assignment getUserCode3Assignment_9_1() { return cUserCode3Assignment_9_1; }

		//DetailCode
		public RuleCall getUserCode3DetailCodeParserRuleCall_9_1_0() { return cUserCode3DetailCodeParserRuleCall_9_1_0; }

		//("incoming" "{" incomingMessages+=Message* "}")?
		public Group getGroup_10() { return cGroup_10; }

		//"incoming"
		public Keyword getIncomingKeyword_10_0() { return cIncomingKeyword_10_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_10_1() { return cLeftCurlyBracketKeyword_10_1; }

		//incomingMessages+=Message*
		public Assignment getIncomingMessagesAssignment_10_2() { return cIncomingMessagesAssignment_10_2; }

		//Message
		public RuleCall getIncomingMessagesMessageParserRuleCall_10_2_0() { return cIncomingMessagesMessageParserRuleCall_10_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_10_3() { return cRightCurlyBracketKeyword_10_3; }

		//("outgoing" "{" outgoingMessages+=Message* "}")?
		public Group getGroup_11() { return cGroup_11; }

		//"outgoing"
		public Keyword getOutgoingKeyword_11_0() { return cOutgoingKeyword_11_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_11_1() { return cLeftCurlyBracketKeyword_11_1; }

		//outgoingMessages+=Message*
		public Assignment getOutgoingMessagesAssignment_11_2() { return cOutgoingMessagesAssignment_11_2; }

		//Message
		public RuleCall getOutgoingMessagesMessageParserRuleCall_11_2_0() { return cOutgoingMessagesMessageParserRuleCall_11_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_11_3() { return cRightCurlyBracketKeyword_11_3; }

		//("regular" "PortClass" regular=PortClass)?
		public Group getGroup_12() { return cGroup_12; }

		//"regular"
		public Keyword getRegularKeyword_12_0() { return cRegularKeyword_12_0; }

		//"PortClass"
		public Keyword getPortClassKeyword_12_1() { return cPortClassKeyword_12_1; }

		//regular=PortClass
		public Assignment getRegularAssignment_12_2() { return cRegularAssignment_12_2; }

		//PortClass
		public RuleCall getRegularPortClassParserRuleCall_12_2_0() { return cRegularPortClassParserRuleCall_12_2_0; }

		//("conjugated" "PortClass" conjugated=PortClass)?
		public Group getGroup_13() { return cGroup_13; }

		//"conjugated"
		public Keyword getConjugatedKeyword_13_0() { return cConjugatedKeyword_13_0; }

		//"PortClass"
		public Keyword getPortClassKeyword_13_1() { return cPortClassKeyword_13_1; }

		//conjugated=PortClass
		public Assignment getConjugatedAssignment_13_2() { return cConjugatedAssignment_13_2; }

		//PortClass
		public RuleCall getConjugatedPortClassParserRuleCall_13_2_0() { return cConjugatedPortClassParserRuleCall_13_2_0; }

		//semantics=ProtocolSemantics?
		public Assignment getSemanticsAssignment_14() { return cSemanticsAssignment_14; }

		//ProtocolSemantics
		public RuleCall getSemanticsProtocolSemanticsParserRuleCall_14_0() { return cSemanticsProtocolSemanticsParserRuleCall_14_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_15() { return cRightCurlyBracketKeyword_15; }
	}

	public class CompoundProtocolClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CompoundProtocolClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCompoundProtocolClassKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cDocuAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDocuDocumentationParserRuleCall_2_0 = (RuleCall)cDocuAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cAnnotationsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_4_0 = (RuleCall)cAnnotationsAssignment_4.eContents().get(0);
		private final Assignment cSubProtocolsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cSubProtocolsSubProtocolParserRuleCall_5_0 = (RuleCall)cSubProtocolsAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//CompoundProtocolClass:
		//	"CompoundProtocolClass" name=ID docu=Documentation? "{" annotations+=Annotation* subProtocols+=SubProtocol* "}";
		public ParserRule getRule() { return rule; }

		//"CompoundProtocolClass" name=ID docu=Documentation? "{" annotations+=Annotation* subProtocols+=SubProtocol* "}"
		public Group getGroup() { return cGroup; }

		//"CompoundProtocolClass"
		public Keyword getCompoundProtocolClassKeyword_0() { return cCompoundProtocolClassKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//docu=Documentation?
		public Assignment getDocuAssignment_2() { return cDocuAssignment_2; }

		//Documentation
		public RuleCall getDocuDocumentationParserRuleCall_2_0() { return cDocuDocumentationParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//annotations+=Annotation*
		public Assignment getAnnotationsAssignment_4() { return cAnnotationsAssignment_4; }

		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_4_0() { return cAnnotationsAnnotationParserRuleCall_4_0; }

		//subProtocols+=SubProtocol*
		public Assignment getSubProtocolsAssignment_5() { return cSubProtocolsAssignment_5; }

		//SubProtocol
		public RuleCall getSubProtocolsSubProtocolParserRuleCall_5_0() { return cSubProtocolsSubProtocolParserRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class SubProtocolElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SubProtocol");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSubProtocolKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cProtocolAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cProtocolGeneralProtocolClassCrossReference_3_0 = (CrossReference)cProtocolAssignment_3.eContents().get(0);
		private final RuleCall cProtocolGeneralProtocolClassFQNParserRuleCall_3_0_1 = (RuleCall)cProtocolGeneralProtocolClassCrossReference_3_0.eContents().get(1);
		
		//SubProtocol:
		//	"SubProtocol" name=ID ":" protocol=[GeneralProtocolClass|FQN];
		public ParserRule getRule() { return rule; }

		//"SubProtocol" name=ID ":" protocol=[GeneralProtocolClass|FQN]
		public Group getGroup() { return cGroup; }

		//"SubProtocol"
		public Keyword getSubProtocolKeyword_0() { return cSubProtocolKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//protocol=[GeneralProtocolClass|FQN]
		public Assignment getProtocolAssignment_3() { return cProtocolAssignment_3; }

		//[GeneralProtocolClass|FQN]
		public CrossReference getProtocolGeneralProtocolClassCrossReference_3_0() { return cProtocolGeneralProtocolClassCrossReference_3_0; }

		//FQN
		public RuleCall getProtocolGeneralProtocolClassFQNParserRuleCall_3_0_1() { return cProtocolGeneralProtocolClassFQNParserRuleCall_3_0_1; }
	}

	public class MessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Message");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPrivAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPrivPrivateKeyword_0_0 = (Keyword)cPrivAssignment_0.eContents().get(0);
		private final Keyword cMessageKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cDataAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDataVarDeclParserRuleCall_4_0 = (RuleCall)cDataAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cDocuAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDocuDocumentationParserRuleCall_6_0 = (RuleCall)cDocuAssignment_6.eContents().get(0);
		
		//Message:
		//	priv?="private"? "Message" name=ID "(" data=VarDecl? ")" docu=Documentation?;
		public ParserRule getRule() { return rule; }

		//priv?="private"? "Message" name=ID "(" data=VarDecl? ")" docu=Documentation?
		public Group getGroup() { return cGroup; }

		//priv?="private"?
		public Assignment getPrivAssignment_0() { return cPrivAssignment_0; }

		//"private"
		public Keyword getPrivPrivateKeyword_0_0() { return cPrivPrivateKeyword_0_0; }

		//"Message"
		public Keyword getMessageKeyword_1() { return cMessageKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }

		//data=VarDecl?
		public Assignment getDataAssignment_4() { return cDataAssignment_4; }

		//VarDecl
		public RuleCall getDataVarDeclParserRuleCall_4_0() { return cDataVarDeclParserRuleCall_4_0; }

		//")"
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }

		//docu=Documentation?
		public Assignment getDocuAssignment_6() { return cDocuAssignment_6; }

		//Documentation
		public RuleCall getDocuDocumentationParserRuleCall_6_0() { return cDocuDocumentationParserRuleCall_6_0; }
	}

	public class PortClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PortClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPortClassAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cUsercodeKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cUserCodeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cUserCodeDetailCodeParserRuleCall_2_1_0 = (RuleCall)cUserCodeAssignment_2_1.eContents().get(0);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cAttributesAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cAttributesAttributeParserRuleCall_3_0_0 = (RuleCall)cAttributesAssignment_3_0.eContents().get(0);
		private final Assignment cOperationsAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final RuleCall cOperationsPortOperationParserRuleCall_3_1_0 = (RuleCall)cOperationsAssignment_3_1.eContents().get(0);
		private final Assignment cMsgHandlersAssignment_3_2 = (Assignment)cAlternatives_3.eContents().get(2);
		private final RuleCall cMsgHandlersMessageHandlerParserRuleCall_3_2_0 = (RuleCall)cMsgHandlersAssignment_3_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//PortClass:
		//	{PortClass} "{" ("usercode" userCode=DetailCode)? (attributes+=Attribute | operations+=PortOperation |
		//	msgHandlers+=MessageHandler)* "}";
		public ParserRule getRule() { return rule; }

		//{PortClass} "{" ("usercode" userCode=DetailCode)? (attributes+=Attribute | operations+=PortOperation |
		//msgHandlers+=MessageHandler)* "}"
		public Group getGroup() { return cGroup; }

		//{PortClass}
		public Action getPortClassAction_0() { return cPortClassAction_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//("usercode" userCode=DetailCode)?
		public Group getGroup_2() { return cGroup_2; }

		//"usercode"
		public Keyword getUsercodeKeyword_2_0() { return cUsercodeKeyword_2_0; }

		//userCode=DetailCode
		public Assignment getUserCodeAssignment_2_1() { return cUserCodeAssignment_2_1; }

		//DetailCode
		public RuleCall getUserCodeDetailCodeParserRuleCall_2_1_0() { return cUserCodeDetailCodeParserRuleCall_2_1_0; }

		//(attributes+=Attribute | operations+=PortOperation | msgHandlers+=MessageHandler)*
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//attributes+=Attribute
		public Assignment getAttributesAssignment_3_0() { return cAttributesAssignment_3_0; }

		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_3_0_0() { return cAttributesAttributeParserRuleCall_3_0_0; }

		//operations+=PortOperation
		public Assignment getOperationsAssignment_3_1() { return cOperationsAssignment_3_1; }

		//PortOperation
		public RuleCall getOperationsPortOperationParserRuleCall_3_1_0() { return cOperationsPortOperationParserRuleCall_3_1_0; }

		//msgHandlers+=MessageHandler
		public Assignment getMsgHandlersAssignment_3_2() { return cMsgHandlersAssignment_3_2; }

		//MessageHandler
		public RuleCall getMsgHandlersMessageHandlerParserRuleCall_3_2_0() { return cMsgHandlersMessageHandlerParserRuleCall_3_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class MessageHandlerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MessageHandler");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cInMessageHandlerParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cOutMessageHandlerParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//MessageHandler:
		//	InMessageHandler | OutMessageHandler;
		public ParserRule getRule() { return rule; }

		//InMessageHandler | OutMessageHandler
		public Alternatives getAlternatives() { return cAlternatives; }

		//InMessageHandler
		public RuleCall getInMessageHandlerParserRuleCall_0() { return cInMessageHandlerParserRuleCall_0; }

		//OutMessageHandler
		public RuleCall getOutMessageHandlerParserRuleCall_1() { return cOutMessageHandlerParserRuleCall_1; }
	}

	public class InMessageHandlerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InMessageHandler");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHandleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cIncomingKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMsgAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cMsgMessageCrossReference_2_0 = (CrossReference)cMsgAssignment_2.eContents().get(0);
		private final RuleCall cMsgMessageIDTerminalRuleCall_2_0_1 = (RuleCall)cMsgMessageCrossReference_2_0.eContents().get(1);
		private final Assignment cDetailCodeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDetailCodeDetailCodeParserRuleCall_3_0 = (RuleCall)cDetailCodeAssignment_3.eContents().get(0);
		
		//InMessageHandler:
		//	"handle" "incoming" msg=[Message] detailCode=DetailCode;
		public ParserRule getRule() { return rule; }

		//"handle" "incoming" msg=[Message] detailCode=DetailCode
		public Group getGroup() { return cGroup; }

		//"handle"
		public Keyword getHandleKeyword_0() { return cHandleKeyword_0; }

		//"incoming"
		public Keyword getIncomingKeyword_1() { return cIncomingKeyword_1; }

		//msg=[Message]
		public Assignment getMsgAssignment_2() { return cMsgAssignment_2; }

		//[Message]
		public CrossReference getMsgMessageCrossReference_2_0() { return cMsgMessageCrossReference_2_0; }

		//ID
		public RuleCall getMsgMessageIDTerminalRuleCall_2_0_1() { return cMsgMessageIDTerminalRuleCall_2_0_1; }

		//detailCode=DetailCode
		public Assignment getDetailCodeAssignment_3() { return cDetailCodeAssignment_3; }

		//DetailCode
		public RuleCall getDetailCodeDetailCodeParserRuleCall_3_0() { return cDetailCodeDetailCodeParserRuleCall_3_0; }
	}

	public class OutMessageHandlerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OutMessageHandler");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHandleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cOutgoingKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMsgAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cMsgMessageCrossReference_2_0 = (CrossReference)cMsgAssignment_2.eContents().get(0);
		private final RuleCall cMsgMessageIDTerminalRuleCall_2_0_1 = (RuleCall)cMsgMessageCrossReference_2_0.eContents().get(1);
		private final Assignment cDetailCodeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDetailCodeDetailCodeParserRuleCall_3_0 = (RuleCall)cDetailCodeAssignment_3.eContents().get(0);
		
		//OutMessageHandler:
		//	"handle" "outgoing" msg=[Message] detailCode=DetailCode;
		public ParserRule getRule() { return rule; }

		//"handle" "outgoing" msg=[Message] detailCode=DetailCode
		public Group getGroup() { return cGroup; }

		//"handle"
		public Keyword getHandleKeyword_0() { return cHandleKeyword_0; }

		//"outgoing"
		public Keyword getOutgoingKeyword_1() { return cOutgoingKeyword_1; }

		//msg=[Message]
		public Assignment getMsgAssignment_2() { return cMsgAssignment_2; }

		//[Message]
		public CrossReference getMsgMessageCrossReference_2_0() { return cMsgMessageCrossReference_2_0; }

		//ID
		public RuleCall getMsgMessageIDTerminalRuleCall_2_0_1() { return cMsgMessageIDTerminalRuleCall_2_0_1; }

		//detailCode=DetailCode
		public Assignment getDetailCodeAssignment_3() { return cDetailCodeAssignment_3; }

		//DetailCode
		public RuleCall getDetailCodeDetailCodeParserRuleCall_3_0() { return cDetailCodeDetailCodeParserRuleCall_3_0; }
	}

	public class ProtocolSemanticsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ProtocolSemantics");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cProtocolSemanticsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSemanticsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRulesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRulesSemanticsRuleParserRuleCall_3_0 = (RuleCall)cRulesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ProtocolSemantics:
		//	{ProtocolSemantics} "semantics" "{" rules+=SemanticsRule* "}";
		public ParserRule getRule() { return rule; }

		//{ProtocolSemantics} "semantics" "{" rules+=SemanticsRule* "}"
		public Group getGroup() { return cGroup; }

		//{ProtocolSemantics}
		public Action getProtocolSemanticsAction_0() { return cProtocolSemanticsAction_0; }

		//"semantics"
		public Keyword getSemanticsKeyword_1() { return cSemanticsKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//rules+=SemanticsRule*
		public Assignment getRulesAssignment_3() { return cRulesAssignment_3; }

		//SemanticsRule
		public RuleCall getRulesSemanticsRuleParserRuleCall_3_0() { return cRulesSemanticsRuleParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class SemanticsRuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SemanticsRule");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cInSemanticsRuleParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cOutSemanticsRuleParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//SemanticsRule:
		//	InSemanticsRule | OutSemanticsRule;
		public ParserRule getRule() { return rule; }

		//InSemanticsRule | OutSemanticsRule
		public Alternatives getAlternatives() { return cAlternatives; }

		//InSemanticsRule
		public RuleCall getInSemanticsRuleParserRuleCall_0() { return cInSemanticsRuleParserRuleCall_0; }

		//OutSemanticsRule
		public RuleCall getOutSemanticsRuleParserRuleCall_1() { return cOutSemanticsRuleParserRuleCall_1; }
	}

	public class InSemanticsRuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InSemanticsRule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMsgAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cMsgMessageCrossReference_2_0 = (CrossReference)cMsgAssignment_2.eContents().get(0);
		private final RuleCall cMsgMessageIDTerminalRuleCall_2_0_1 = (RuleCall)cMsgMessageCrossReference_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Alternatives cAlternatives_3_1 = (Alternatives)cGroup_3.eContents().get(1);
		private final Assignment cFollowUpsAssignment_3_1_0 = (Assignment)cAlternatives_3_1.eContents().get(0);
		private final RuleCall cFollowUpsSemanticsRuleParserRuleCall_3_1_0_0 = (RuleCall)cFollowUpsAssignment_3_1_0.eContents().get(0);
		private final Group cGroup_3_1_1 = (Group)cAlternatives_3_1.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_3_1_1_0 = (Keyword)cGroup_3_1_1.eContents().get(0);
		private final Assignment cFollowUpsAssignment_3_1_1_1 = (Assignment)cGroup_3_1_1.eContents().get(1);
		private final RuleCall cFollowUpsSemanticsRuleParserRuleCall_3_1_1_1_0 = (RuleCall)cFollowUpsAssignment_3_1_1_1.eContents().get(0);
		private final Group cGroup_3_1_1_2 = (Group)cGroup_3_1_1.eContents().get(2);
		private final Keyword cCommaKeyword_3_1_1_2_0 = (Keyword)cGroup_3_1_1_2.eContents().get(0);
		private final Assignment cFollowUpsAssignment_3_1_1_2_1 = (Assignment)cGroup_3_1_1_2.eContents().get(1);
		private final RuleCall cFollowUpsSemanticsRuleParserRuleCall_3_1_1_2_1_0 = (RuleCall)cFollowUpsAssignment_3_1_1_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_1_1_3 = (Keyword)cGroup_3_1_1.eContents().get(3);
		
		//InSemanticsRule:
		//	"in" ":" msg=[Message] ("->" (followUps+=SemanticsRule | "(" followUps+=SemanticsRule ("," followUps+=SemanticsRule)+
		//	")"))?;
		public ParserRule getRule() { return rule; }

		//"in" ":" msg=[Message] ("->" (followUps+=SemanticsRule | "(" followUps+=SemanticsRule ("," followUps+=SemanticsRule)+
		//")"))?
		public Group getGroup() { return cGroup; }

		//"in"
		public Keyword getInKeyword_0() { return cInKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//msg=[Message]
		public Assignment getMsgAssignment_2() { return cMsgAssignment_2; }

		//[Message]
		public CrossReference getMsgMessageCrossReference_2_0() { return cMsgMessageCrossReference_2_0; }

		//ID
		public RuleCall getMsgMessageIDTerminalRuleCall_2_0_1() { return cMsgMessageIDTerminalRuleCall_2_0_1; }

		//("->" (followUps+=SemanticsRule | "(" followUps+=SemanticsRule ("," followUps+=SemanticsRule)+ ")"))?
		public Group getGroup_3() { return cGroup_3; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_3_0() { return cHyphenMinusGreaterThanSignKeyword_3_0; }

		//followUps+=SemanticsRule | "(" followUps+=SemanticsRule ("," followUps+=SemanticsRule)+ ")"
		public Alternatives getAlternatives_3_1() { return cAlternatives_3_1; }

		//followUps+=SemanticsRule
		public Assignment getFollowUpsAssignment_3_1_0() { return cFollowUpsAssignment_3_1_0; }

		//SemanticsRule
		public RuleCall getFollowUpsSemanticsRuleParserRuleCall_3_1_0_0() { return cFollowUpsSemanticsRuleParserRuleCall_3_1_0_0; }

		//"(" followUps+=SemanticsRule ("," followUps+=SemanticsRule)+ ")"
		public Group getGroup_3_1_1() { return cGroup_3_1_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_3_1_1_0() { return cLeftParenthesisKeyword_3_1_1_0; }

		//followUps+=SemanticsRule
		public Assignment getFollowUpsAssignment_3_1_1_1() { return cFollowUpsAssignment_3_1_1_1; }

		//SemanticsRule
		public RuleCall getFollowUpsSemanticsRuleParserRuleCall_3_1_1_1_0() { return cFollowUpsSemanticsRuleParserRuleCall_3_1_1_1_0; }

		//("," followUps+=SemanticsRule)+
		public Group getGroup_3_1_1_2() { return cGroup_3_1_1_2; }

		//","
		public Keyword getCommaKeyword_3_1_1_2_0() { return cCommaKeyword_3_1_1_2_0; }

		//followUps+=SemanticsRule
		public Assignment getFollowUpsAssignment_3_1_1_2_1() { return cFollowUpsAssignment_3_1_1_2_1; }

		//SemanticsRule
		public RuleCall getFollowUpsSemanticsRuleParserRuleCall_3_1_1_2_1_0() { return cFollowUpsSemanticsRuleParserRuleCall_3_1_1_2_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_3_1_1_3() { return cRightParenthesisKeyword_3_1_1_3; }
	}

	public class OutSemanticsRuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OutSemanticsRule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOutKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMsgAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cMsgMessageCrossReference_2_0 = (CrossReference)cMsgAssignment_2.eContents().get(0);
		private final RuleCall cMsgMessageIDTerminalRuleCall_2_0_1 = (RuleCall)cMsgMessageCrossReference_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Alternatives cAlternatives_3_1 = (Alternatives)cGroup_3.eContents().get(1);
		private final Assignment cFollowUpsAssignment_3_1_0 = (Assignment)cAlternatives_3_1.eContents().get(0);
		private final RuleCall cFollowUpsSemanticsRuleParserRuleCall_3_1_0_0 = (RuleCall)cFollowUpsAssignment_3_1_0.eContents().get(0);
		private final Group cGroup_3_1_1 = (Group)cAlternatives_3_1.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_3_1_1_0 = (Keyword)cGroup_3_1_1.eContents().get(0);
		private final Assignment cFollowUpsAssignment_3_1_1_1 = (Assignment)cGroup_3_1_1.eContents().get(1);
		private final RuleCall cFollowUpsSemanticsRuleParserRuleCall_3_1_1_1_0 = (RuleCall)cFollowUpsAssignment_3_1_1_1.eContents().get(0);
		private final Group cGroup_3_1_1_2 = (Group)cGroup_3_1_1.eContents().get(2);
		private final Keyword cCommaKeyword_3_1_1_2_0 = (Keyword)cGroup_3_1_1_2.eContents().get(0);
		private final Assignment cFollowUpsAssignment_3_1_1_2_1 = (Assignment)cGroup_3_1_1_2.eContents().get(1);
		private final RuleCall cFollowUpsSemanticsRuleParserRuleCall_3_1_1_2_1_0 = (RuleCall)cFollowUpsAssignment_3_1_1_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_1_1_3 = (Keyword)cGroup_3_1_1.eContents().get(3);
		
		//OutSemanticsRule:
		//	"out" ":" msg=[Message] ("->" (followUps+=SemanticsRule | "(" followUps+=SemanticsRule (","
		//	followUps+=SemanticsRule)+ ")"))?;
		public ParserRule getRule() { return rule; }

		//"out" ":" msg=[Message] ("->" (followUps+=SemanticsRule | "(" followUps+=SemanticsRule ("," followUps+=SemanticsRule)+
		//")"))?
		public Group getGroup() { return cGroup; }

		//"out"
		public Keyword getOutKeyword_0() { return cOutKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//msg=[Message]
		public Assignment getMsgAssignment_2() { return cMsgAssignment_2; }

		//[Message]
		public CrossReference getMsgMessageCrossReference_2_0() { return cMsgMessageCrossReference_2_0; }

		//ID
		public RuleCall getMsgMessageIDTerminalRuleCall_2_0_1() { return cMsgMessageIDTerminalRuleCall_2_0_1; }

		//("->" (followUps+=SemanticsRule | "(" followUps+=SemanticsRule ("," followUps+=SemanticsRule)+ ")"))?
		public Group getGroup_3() { return cGroup_3; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_3_0() { return cHyphenMinusGreaterThanSignKeyword_3_0; }

		//followUps+=SemanticsRule | "(" followUps+=SemanticsRule ("," followUps+=SemanticsRule)+ ")"
		public Alternatives getAlternatives_3_1() { return cAlternatives_3_1; }

		//followUps+=SemanticsRule
		public Assignment getFollowUpsAssignment_3_1_0() { return cFollowUpsAssignment_3_1_0; }

		//SemanticsRule
		public RuleCall getFollowUpsSemanticsRuleParserRuleCall_3_1_0_0() { return cFollowUpsSemanticsRuleParserRuleCall_3_1_0_0; }

		//"(" followUps+=SemanticsRule ("," followUps+=SemanticsRule)+ ")"
		public Group getGroup_3_1_1() { return cGroup_3_1_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_3_1_1_0() { return cLeftParenthesisKeyword_3_1_1_0; }

		//followUps+=SemanticsRule
		public Assignment getFollowUpsAssignment_3_1_1_1() { return cFollowUpsAssignment_3_1_1_1; }

		//SemanticsRule
		public RuleCall getFollowUpsSemanticsRuleParserRuleCall_3_1_1_1_0() { return cFollowUpsSemanticsRuleParserRuleCall_3_1_1_1_0; }

		//("," followUps+=SemanticsRule)+
		public Group getGroup_3_1_1_2() { return cGroup_3_1_1_2; }

		//","
		public Keyword getCommaKeyword_3_1_1_2_0() { return cCommaKeyword_3_1_1_2_0; }

		//followUps+=SemanticsRule
		public Assignment getFollowUpsAssignment_3_1_1_2_1() { return cFollowUpsAssignment_3_1_1_2_1; }

		//SemanticsRule
		public RuleCall getFollowUpsSemanticsRuleParserRuleCall_3_1_1_2_1_0() { return cFollowUpsSemanticsRuleParserRuleCall_3_1_1_2_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_3_1_1_3() { return cRightParenthesisKeyword_3_1_1_3; }
	}

	public class ActorClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ActorClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_0 = (UnorderedGroup)cGroup.eContents().get(0);
		private final Assignment cAbstractAssignment_0_0 = (Assignment)cUnorderedGroup_0.eContents().get(0);
		private final Keyword cAbstractAbstractKeyword_0_0_0 = (Keyword)cAbstractAssignment_0_0.eContents().get(0);
		private final Assignment cCommTypeAssignment_0_1 = (Assignment)cUnorderedGroup_0.eContents().get(1);
		private final RuleCall cCommTypeActorCommunicationTypeEnumRuleCall_0_1_0 = (RuleCall)cCommTypeAssignment_0_1.eContents().get(0);
		private final Keyword cActorClassKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cDocuAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDocuDocumentationParserRuleCall_3_0 = (RuleCall)cDocuAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cExtendsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cBaseAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cBaseActorClassCrossReference_4_1_0 = (CrossReference)cBaseAssignment_4_1.eContents().get(0);
		private final RuleCall cBaseActorClassFQNParserRuleCall_4_1_0_1 = (RuleCall)cBaseActorClassCrossReference_4_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cAnnotationsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_6_0 = (RuleCall)cAnnotationsAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cInterfaceKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cInterfacePortsAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cInterfacePortsPortParserRuleCall_7_2_0 = (RuleCall)cInterfacePortsAssignment_7_2.eContents().get(0);
		private final Assignment cServiceProvisionPointsAssignment_7_3 = (Assignment)cGroup_7.eContents().get(3);
		private final RuleCall cServiceProvisionPointsSPPParserRuleCall_7_3_0 = (RuleCall)cServiceProvisionPointsAssignment_7_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cStructureKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cStructureDocuAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cStructureDocuDocumentationParserRuleCall_8_1_0 = (RuleCall)cStructureDocuAssignment_8_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_8_2 = (Keyword)cGroup_8.eContents().get(2);
		private final Group cGroup_8_3 = (Group)cGroup_8.eContents().get(3);
		private final Keyword cUsercode1Keyword_8_3_0 = (Keyword)cGroup_8_3.eContents().get(0);
		private final Assignment cUserCode1Assignment_8_3_1 = (Assignment)cGroup_8_3.eContents().get(1);
		private final RuleCall cUserCode1DetailCodeParserRuleCall_8_3_1_0 = (RuleCall)cUserCode1Assignment_8_3_1.eContents().get(0);
		private final Group cGroup_8_4 = (Group)cGroup_8.eContents().get(4);
		private final Keyword cUsercode2Keyword_8_4_0 = (Keyword)cGroup_8_4.eContents().get(0);
		private final Assignment cUserCode2Assignment_8_4_1 = (Assignment)cGroup_8_4.eContents().get(1);
		private final RuleCall cUserCode2DetailCodeParserRuleCall_8_4_1_0 = (RuleCall)cUserCode2Assignment_8_4_1.eContents().get(0);
		private final Group cGroup_8_5 = (Group)cGroup_8.eContents().get(5);
		private final Keyword cUsercode3Keyword_8_5_0 = (Keyword)cGroup_8_5.eContents().get(0);
		private final Assignment cUserCode3Assignment_8_5_1 = (Assignment)cGroup_8_5.eContents().get(1);
		private final RuleCall cUserCode3DetailCodeParserRuleCall_8_5_1_0 = (RuleCall)cUserCode3Assignment_8_5_1.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_8_6 = (UnorderedGroup)cGroup_8.eContents().get(6);
		private final Alternatives cAlternatives_8_6_0 = (Alternatives)cUnorderedGroup_8_6.eContents().get(0);
		private final Assignment cInternalPortsAssignment_8_6_0_0 = (Assignment)cAlternatives_8_6_0.eContents().get(0);
		private final RuleCall cInternalPortsPortParserRuleCall_8_6_0_0_0 = (RuleCall)cInternalPortsAssignment_8_6_0_0.eContents().get(0);
		private final Assignment cExternalPortsAssignment_8_6_0_1 = (Assignment)cAlternatives_8_6_0.eContents().get(1);
		private final RuleCall cExternalPortsExternalPortParserRuleCall_8_6_0_1_0 = (RuleCall)cExternalPortsAssignment_8_6_0_1.eContents().get(0);
		private final Assignment cActorRefsAssignment_8_6_1 = (Assignment)cUnorderedGroup_8_6.eContents().get(1);
		private final RuleCall cActorRefsActorRefParserRuleCall_8_6_1_0 = (RuleCall)cActorRefsAssignment_8_6_1.eContents().get(0);
		private final Assignment cServiceImplementationsAssignment_8_6_2 = (Assignment)cUnorderedGroup_8_6.eContents().get(2);
		private final RuleCall cServiceImplementationsServiceImplementationParserRuleCall_8_6_2_0 = (RuleCall)cServiceImplementationsAssignment_8_6_2.eContents().get(0);
		private final Assignment cServiceAccessPointsAssignment_8_6_3 = (Assignment)cUnorderedGroup_8_6.eContents().get(3);
		private final RuleCall cServiceAccessPointsSAPParserRuleCall_8_6_3_0 = (RuleCall)cServiceAccessPointsAssignment_8_6_3.eContents().get(0);
		private final Assignment cBindingsAssignment_8_6_4 = (Assignment)cUnorderedGroup_8_6.eContents().get(4);
		private final RuleCall cBindingsBindingParserRuleCall_8_6_4_0 = (RuleCall)cBindingsAssignment_8_6_4.eContents().get(0);
		private final Assignment cConnectionsAssignment_8_6_5 = (Assignment)cUnorderedGroup_8_6.eContents().get(5);
		private final RuleCall cConnectionsLayerConnectionParserRuleCall_8_6_5_0 = (RuleCall)cConnectionsAssignment_8_6_5.eContents().get(0);
		private final Assignment cAttributesAssignment_8_6_6 = (Assignment)cUnorderedGroup_8_6.eContents().get(6);
		private final RuleCall cAttributesAttributeParserRuleCall_8_6_6_0 = (RuleCall)cAttributesAssignment_8_6_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8_7 = (Keyword)cGroup_8.eContents().get(7);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cBehaviorKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cBehaviorDocuAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cBehaviorDocuDocumentationParserRuleCall_9_1_0 = (RuleCall)cBehaviorDocuAssignment_9_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_9_2 = (Keyword)cGroup_9.eContents().get(2);
		private final Assignment cBehaviorAnnotationsAssignment_9_3 = (Assignment)cGroup_9.eContents().get(3);
		private final RuleCall cBehaviorAnnotationsAnnotationParserRuleCall_9_3_0 = (RuleCall)cBehaviorAnnotationsAssignment_9_3.eContents().get(0);
		private final Assignment cOperationsAssignment_9_4 = (Assignment)cGroup_9.eContents().get(4);
		private final RuleCall cOperationsStandardOperationParserRuleCall_9_4_0 = (RuleCall)cOperationsAssignment_9_4.eContents().get(0);
		private final Assignment cStateMachineAssignment_9_5 = (Assignment)cGroup_9.eContents().get(5);
		private final RuleCall cStateMachineStateMachineParserRuleCall_9_5_0 = (RuleCall)cStateMachineAssignment_9_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9_6 = (Keyword)cGroup_9.eContents().get(6);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//// some notes on ports
		////
		//// in ROOM ports can be contained in the structure and/or the interface
		//// p in s ==> internal end port
		//// p in i ==> relay port
		//// p in i and p in s ==> external end port
		//// since double containment is not supported we decided to define external ports as reference to interface ports
		//ActorClass:
		//	(abstract?="abstract"? & commType=ActorCommunicationType?) "ActorClass" name=ID docu=Documentation? ("extends"
		//	base=[ActorClass|FQN])? "{" annotations+=Annotation* ("Interface" "{" interfacePorts+=Port*
		//	serviceProvisionPoints+=SPP* "}")? ("Structure" structureDocu=Documentation? "{" ("usercode1" userCode1=DetailCode)?
		//	("usercode2" userCode2=DetailCode)? ("usercode3" userCode3=DetailCode)? ((internalPorts+=Port |
		//	externalPorts+=ExternalPort)* & actorRefs+=ActorRef* & serviceImplementations+=ServiceImplementation* &
		//	serviceAccessPoints+=SAP* & bindings+=Binding* & connections+=LayerConnection* & attributes+=Attribute*) "}")?
		//	("Behavior" behaviorDocu=Documentation? "{" behaviorAnnotations+=Annotation* operations+=StandardOperation*
		//	stateMachine=StateMachine? "}")? "}";
		public ParserRule getRule() { return rule; }

		//(abstract?="abstract"? & commType=ActorCommunicationType?) "ActorClass" name=ID docu=Documentation? ("extends"
		//base=[ActorClass|FQN])? "{" annotations+=Annotation* ("Interface" "{" interfacePorts+=Port*
		//serviceProvisionPoints+=SPP* "}")? ("Structure" structureDocu=Documentation? "{" ("usercode1" userCode1=DetailCode)?
		//("usercode2" userCode2=DetailCode)? ("usercode3" userCode3=DetailCode)? ((internalPorts+=Port |
		//externalPorts+=ExternalPort)* & actorRefs+=ActorRef* & serviceImplementations+=ServiceImplementation* &
		//serviceAccessPoints+=SAP* & bindings+=Binding* & connections+=LayerConnection* & attributes+=Attribute*) "}")?
		//("Behavior" behaviorDocu=Documentation? "{" behaviorAnnotations+=Annotation* operations+=StandardOperation*
		//stateMachine=StateMachine? "}")? "}"
		public Group getGroup() { return cGroup; }

		//abstract?="abstract"? & commType=ActorCommunicationType?
		public UnorderedGroup getUnorderedGroup_0() { return cUnorderedGroup_0; }

		//abstract?="abstract"?
		public Assignment getAbstractAssignment_0_0() { return cAbstractAssignment_0_0; }

		//"abstract"
		public Keyword getAbstractAbstractKeyword_0_0_0() { return cAbstractAbstractKeyword_0_0_0; }

		//commType=ActorCommunicationType?
		public Assignment getCommTypeAssignment_0_1() { return cCommTypeAssignment_0_1; }

		//ActorCommunicationType
		public RuleCall getCommTypeActorCommunicationTypeEnumRuleCall_0_1_0() { return cCommTypeActorCommunicationTypeEnumRuleCall_0_1_0; }

		//"ActorClass"
		public Keyword getActorClassKeyword_1() { return cActorClassKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//docu=Documentation?
		public Assignment getDocuAssignment_3() { return cDocuAssignment_3; }

		//Documentation
		public RuleCall getDocuDocumentationParserRuleCall_3_0() { return cDocuDocumentationParserRuleCall_3_0; }

		//("extends" base=[ActorClass|FQN])?
		public Group getGroup_4() { return cGroup_4; }

		//"extends"
		public Keyword getExtendsKeyword_4_0() { return cExtendsKeyword_4_0; }

		//base=[ActorClass|FQN]
		public Assignment getBaseAssignment_4_1() { return cBaseAssignment_4_1; }

		//[ActorClass|FQN]
		public CrossReference getBaseActorClassCrossReference_4_1_0() { return cBaseActorClassCrossReference_4_1_0; }

		//FQN
		public RuleCall getBaseActorClassFQNParserRuleCall_4_1_0_1() { return cBaseActorClassFQNParserRuleCall_4_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//annotations+=Annotation*
		public Assignment getAnnotationsAssignment_6() { return cAnnotationsAssignment_6; }

		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_6_0() { return cAnnotationsAnnotationParserRuleCall_6_0; }

		//("Interface" "{" interfacePorts+=Port* serviceProvisionPoints+=SPP* "}")?
		public Group getGroup_7() { return cGroup_7; }

		//"Interface"
		public Keyword getInterfaceKeyword_7_0() { return cInterfaceKeyword_7_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_7_1() { return cLeftCurlyBracketKeyword_7_1; }

		//interfacePorts+=Port*
		public Assignment getInterfacePortsAssignment_7_2() { return cInterfacePortsAssignment_7_2; }

		//Port
		public RuleCall getInterfacePortsPortParserRuleCall_7_2_0() { return cInterfacePortsPortParserRuleCall_7_2_0; }

		//serviceProvisionPoints+=SPP*
		public Assignment getServiceProvisionPointsAssignment_7_3() { return cServiceProvisionPointsAssignment_7_3; }

		//SPP
		public RuleCall getServiceProvisionPointsSPPParserRuleCall_7_3_0() { return cServiceProvisionPointsSPPParserRuleCall_7_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7_4() { return cRightCurlyBracketKeyword_7_4; }

		//("Structure" structureDocu=Documentation? "{" ("usercode1" userCode1=DetailCode)? ("usercode2" userCode2=DetailCode)?
		//("usercode3" userCode3=DetailCode)? ((internalPorts+=Port | externalPorts+=ExternalPort)* & actorRefs+=ActorRef* &
		//serviceImplementations+=ServiceImplementation* & serviceAccessPoints+=SAP* & bindings+=Binding* &
		//connections+=LayerConnection* & attributes+=Attribute*) "}")?
		public Group getGroup_8() { return cGroup_8; }

		//"Structure"
		public Keyword getStructureKeyword_8_0() { return cStructureKeyword_8_0; }

		//structureDocu=Documentation?
		public Assignment getStructureDocuAssignment_8_1() { return cStructureDocuAssignment_8_1; }

		//Documentation
		public RuleCall getStructureDocuDocumentationParserRuleCall_8_1_0() { return cStructureDocuDocumentationParserRuleCall_8_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_8_2() { return cLeftCurlyBracketKeyword_8_2; }

		//("usercode1" userCode1=DetailCode)?
		public Group getGroup_8_3() { return cGroup_8_3; }

		//"usercode1"
		public Keyword getUsercode1Keyword_8_3_0() { return cUsercode1Keyword_8_3_0; }

		//userCode1=DetailCode
		public Assignment getUserCode1Assignment_8_3_1() { return cUserCode1Assignment_8_3_1; }

		//DetailCode
		public RuleCall getUserCode1DetailCodeParserRuleCall_8_3_1_0() { return cUserCode1DetailCodeParserRuleCall_8_3_1_0; }

		//("usercode2" userCode2=DetailCode)?
		public Group getGroup_8_4() { return cGroup_8_4; }

		//"usercode2"
		public Keyword getUsercode2Keyword_8_4_0() { return cUsercode2Keyword_8_4_0; }

		//userCode2=DetailCode
		public Assignment getUserCode2Assignment_8_4_1() { return cUserCode2Assignment_8_4_1; }

		//DetailCode
		public RuleCall getUserCode2DetailCodeParserRuleCall_8_4_1_0() { return cUserCode2DetailCodeParserRuleCall_8_4_1_0; }

		//("usercode3" userCode3=DetailCode)?
		public Group getGroup_8_5() { return cGroup_8_5; }

		//"usercode3"
		public Keyword getUsercode3Keyword_8_5_0() { return cUsercode3Keyword_8_5_0; }

		//userCode3=DetailCode
		public Assignment getUserCode3Assignment_8_5_1() { return cUserCode3Assignment_8_5_1; }

		//DetailCode
		public RuleCall getUserCode3DetailCodeParserRuleCall_8_5_1_0() { return cUserCode3DetailCodeParserRuleCall_8_5_1_0; }

		//(internalPorts+=Port | externalPorts+=ExternalPort)* & actorRefs+=ActorRef* &
		//serviceImplementations+=ServiceImplementation* & serviceAccessPoints+=SAP* & bindings+=Binding* &
		//connections+=LayerConnection* & attributes+=Attribute*
		public UnorderedGroup getUnorderedGroup_8_6() { return cUnorderedGroup_8_6; }

		//(internalPorts+=Port | externalPorts+=ExternalPort)*
		public Alternatives getAlternatives_8_6_0() { return cAlternatives_8_6_0; }

		//internalPorts+=Port
		public Assignment getInternalPortsAssignment_8_6_0_0() { return cInternalPortsAssignment_8_6_0_0; }

		//Port
		public RuleCall getInternalPortsPortParserRuleCall_8_6_0_0_0() { return cInternalPortsPortParserRuleCall_8_6_0_0_0; }

		//externalPorts+=ExternalPort
		public Assignment getExternalPortsAssignment_8_6_0_1() { return cExternalPortsAssignment_8_6_0_1; }

		//ExternalPort
		public RuleCall getExternalPortsExternalPortParserRuleCall_8_6_0_1_0() { return cExternalPortsExternalPortParserRuleCall_8_6_0_1_0; }

		//actorRefs+=ActorRef*
		public Assignment getActorRefsAssignment_8_6_1() { return cActorRefsAssignment_8_6_1; }

		//ActorRef
		public RuleCall getActorRefsActorRefParserRuleCall_8_6_1_0() { return cActorRefsActorRefParserRuleCall_8_6_1_0; }

		//serviceImplementations+=ServiceImplementation*
		public Assignment getServiceImplementationsAssignment_8_6_2() { return cServiceImplementationsAssignment_8_6_2; }

		//ServiceImplementation
		public RuleCall getServiceImplementationsServiceImplementationParserRuleCall_8_6_2_0() { return cServiceImplementationsServiceImplementationParserRuleCall_8_6_2_0; }

		//serviceAccessPoints+=SAP*
		public Assignment getServiceAccessPointsAssignment_8_6_3() { return cServiceAccessPointsAssignment_8_6_3; }

		//SAP
		public RuleCall getServiceAccessPointsSAPParserRuleCall_8_6_3_0() { return cServiceAccessPointsSAPParserRuleCall_8_6_3_0; }

		//bindings+=Binding*
		public Assignment getBindingsAssignment_8_6_4() { return cBindingsAssignment_8_6_4; }

		//Binding
		public RuleCall getBindingsBindingParserRuleCall_8_6_4_0() { return cBindingsBindingParserRuleCall_8_6_4_0; }

		//connections+=LayerConnection*
		public Assignment getConnectionsAssignment_8_6_5() { return cConnectionsAssignment_8_6_5; }

		//LayerConnection
		public RuleCall getConnectionsLayerConnectionParserRuleCall_8_6_5_0() { return cConnectionsLayerConnectionParserRuleCall_8_6_5_0; }

		//attributes+=Attribute*
		public Assignment getAttributesAssignment_8_6_6() { return cAttributesAssignment_8_6_6; }

		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_8_6_6_0() { return cAttributesAttributeParserRuleCall_8_6_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8_7() { return cRightCurlyBracketKeyword_8_7; }

		//("Behavior" behaviorDocu=Documentation? "{" behaviorAnnotations+=Annotation* operations+=StandardOperation*
		//stateMachine=StateMachine? "}")?
		public Group getGroup_9() { return cGroup_9; }

		//"Behavior"
		public Keyword getBehaviorKeyword_9_0() { return cBehaviorKeyword_9_0; }

		//behaviorDocu=Documentation?
		public Assignment getBehaviorDocuAssignment_9_1() { return cBehaviorDocuAssignment_9_1; }

		//Documentation
		public RuleCall getBehaviorDocuDocumentationParserRuleCall_9_1_0() { return cBehaviorDocuDocumentationParserRuleCall_9_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_9_2() { return cLeftCurlyBracketKeyword_9_2; }

		//behaviorAnnotations+=Annotation*
		public Assignment getBehaviorAnnotationsAssignment_9_3() { return cBehaviorAnnotationsAssignment_9_3; }

		//Annotation
		public RuleCall getBehaviorAnnotationsAnnotationParserRuleCall_9_3_0() { return cBehaviorAnnotationsAnnotationParserRuleCall_9_3_0; }

		//operations+=StandardOperation*
		public Assignment getOperationsAssignment_9_4() { return cOperationsAssignment_9_4; }

		//StandardOperation
		public RuleCall getOperationsStandardOperationParserRuleCall_9_4_0() { return cOperationsStandardOperationParserRuleCall_9_4_0; }

		//stateMachine=StateMachine?
		public Assignment getStateMachineAssignment_9_5() { return cStateMachineAssignment_9_5; }

		//StateMachine
		public RuleCall getStateMachineStateMachineParserRuleCall_9_5_0() { return cStateMachineStateMachineParserRuleCall_9_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9_6() { return cRightCurlyBracketKeyword_9_6; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}

	public class InterfaceItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InterfaceItem");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPortParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSAPParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cSPPParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//InterfaceItem:
		//	Port | SAP | SPP;
		public ParserRule getRule() { return rule; }

		//Port | SAP | SPP
		public Alternatives getAlternatives() { return cAlternatives; }

		//Port
		public RuleCall getPortParserRuleCall_0() { return cPortParserRuleCall_0; }

		//SAP
		public RuleCall getSAPParserRuleCall_1() { return cSAPParserRuleCall_1; }

		//SPP
		public RuleCall getSPPParserRuleCall_2() { return cSPPParserRuleCall_2; }
	}

	public class PortElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Port");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cConjugatedAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cConjugatedConjugatedKeyword_0_0 = (Keyword)cConjugatedAssignment_0.eContents().get(0);
		private final Keyword cPortKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cMultiplicityAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMultiplicityMULTIPLICITYParserRuleCall_3_0 = (RuleCall)cMultiplicityAssignment_3.eContents().get(0);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cProtocolAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cProtocolGeneralProtocolClassCrossReference_5_0 = (CrossReference)cProtocolAssignment_5.eContents().get(0);
		private final RuleCall cProtocolGeneralProtocolClassFQNParserRuleCall_5_0_1 = (RuleCall)cProtocolGeneralProtocolClassCrossReference_5_0.eContents().get(1);
		private final Assignment cDocuAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDocuDocumentationParserRuleCall_6_0 = (RuleCall)cDocuAssignment_6.eContents().get(0);
		
		//Port:
		//	conjugated?="conjugated"? "Port" name=ID multiplicity=MULTIPLICITY? ":" protocol=[GeneralProtocolClass|FQN]
		//	docu=Documentation?;
		public ParserRule getRule() { return rule; }

		//conjugated?="conjugated"? "Port" name=ID multiplicity=MULTIPLICITY? ":" protocol=[GeneralProtocolClass|FQN]
		//docu=Documentation?
		public Group getGroup() { return cGroup; }

		//conjugated?="conjugated"?
		public Assignment getConjugatedAssignment_0() { return cConjugatedAssignment_0; }

		//"conjugated"
		public Keyword getConjugatedConjugatedKeyword_0_0() { return cConjugatedConjugatedKeyword_0_0; }

		//"Port"
		public Keyword getPortKeyword_1() { return cPortKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//multiplicity=MULTIPLICITY?
		public Assignment getMultiplicityAssignment_3() { return cMultiplicityAssignment_3; }

		//MULTIPLICITY
		public RuleCall getMultiplicityMULTIPLICITYParserRuleCall_3_0() { return cMultiplicityMULTIPLICITYParserRuleCall_3_0; }

		//":"
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }

		//protocol=[GeneralProtocolClass|FQN]
		public Assignment getProtocolAssignment_5() { return cProtocolAssignment_5; }

		//[GeneralProtocolClass|FQN]
		public CrossReference getProtocolGeneralProtocolClassCrossReference_5_0() { return cProtocolGeneralProtocolClassCrossReference_5_0; }

		//FQN
		public RuleCall getProtocolGeneralProtocolClassFQNParserRuleCall_5_0_1() { return cProtocolGeneralProtocolClassFQNParserRuleCall_5_0_1; }

		//docu=Documentation?
		public Assignment getDocuAssignment_6() { return cDocuAssignment_6; }

		//Documentation
		public RuleCall getDocuDocumentationParserRuleCall_6_0() { return cDocuDocumentationParserRuleCall_6_0; }
	}

	public class ExternalPortElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ExternalPort");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExternalKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cPortKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cInterfacePortAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cInterfacePortPortCrossReference_2_0 = (CrossReference)cInterfacePortAssignment_2.eContents().get(0);
		private final RuleCall cInterfacePortPortIDTerminalRuleCall_2_0_1 = (RuleCall)cInterfacePortPortCrossReference_2_0.eContents().get(1);
		
		//ExternalPort:
		//	"external" "Port" interfacePort=[Port];
		public ParserRule getRule() { return rule; }

		//"external" "Port" interfacePort=[Port]
		public Group getGroup() { return cGroup; }

		//"external"
		public Keyword getExternalKeyword_0() { return cExternalKeyword_0; }

		//"Port"
		public Keyword getPortKeyword_1() { return cPortKeyword_1; }

		//interfacePort=[Port]
		public Assignment getInterfacePortAssignment_2() { return cInterfacePortAssignment_2; }

		//[Port]
		public CrossReference getInterfacePortPortCrossReference_2_0() { return cInterfacePortPortCrossReference_2_0; }

		//ID
		public RuleCall getInterfacePortPortIDTerminalRuleCall_2_0_1() { return cInterfacePortPortIDTerminalRuleCall_2_0_1; }
	}

	public class SAPElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SAP");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSAPKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cProtocolAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cProtocolProtocolClassCrossReference_3_0 = (CrossReference)cProtocolAssignment_3.eContents().get(0);
		private final RuleCall cProtocolProtocolClassFQNParserRuleCall_3_0_1 = (RuleCall)cProtocolProtocolClassCrossReference_3_0.eContents().get(1);
		
		//SAP:
		//	"SAP" name=ID ":" protocol=[ProtocolClass|FQN];
		public ParserRule getRule() { return rule; }

		//"SAP" name=ID ":" protocol=[ProtocolClass|FQN]
		public Group getGroup() { return cGroup; }

		//"SAP"
		public Keyword getSAPKeyword_0() { return cSAPKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//protocol=[ProtocolClass|FQN]
		public Assignment getProtocolAssignment_3() { return cProtocolAssignment_3; }

		//[ProtocolClass|FQN]
		public CrossReference getProtocolProtocolClassCrossReference_3_0() { return cProtocolProtocolClassCrossReference_3_0; }

		//FQN
		public RuleCall getProtocolProtocolClassFQNParserRuleCall_3_0_1() { return cProtocolProtocolClassFQNParserRuleCall_3_0_1; }
	}

	public class SPPElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SPP");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSPPKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cProtocolAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cProtocolProtocolClassCrossReference_3_0 = (CrossReference)cProtocolAssignment_3.eContents().get(0);
		private final RuleCall cProtocolProtocolClassFQNParserRuleCall_3_0_1 = (RuleCall)cProtocolProtocolClassCrossReference_3_0.eContents().get(1);
		
		//SPP:
		//	"SPP" name=ID ":" protocol=[ProtocolClass|FQN];
		public ParserRule getRule() { return rule; }

		//"SPP" name=ID ":" protocol=[ProtocolClass|FQN]
		public Group getGroup() { return cGroup; }

		//"SPP"
		public Keyword getSPPKeyword_0() { return cSPPKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//protocol=[ProtocolClass|FQN]
		public Assignment getProtocolAssignment_3() { return cProtocolAssignment_3; }

		//[ProtocolClass|FQN]
		public CrossReference getProtocolProtocolClassCrossReference_3_0() { return cProtocolProtocolClassCrossReference_3_0; }

		//FQN
		public RuleCall getProtocolProtocolClassFQNParserRuleCall_3_0_1() { return cProtocolProtocolClassFQNParserRuleCall_3_0_1; }
	}

	public class ServiceImplementationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ServiceImplementation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cServiceImplementationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cOfKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSppAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cSppSPPCrossReference_2_0 = (CrossReference)cSppAssignment_2.eContents().get(0);
		private final RuleCall cSppSPPIDTerminalRuleCall_2_0_1 = (RuleCall)cSppSPPCrossReference_2_0.eContents().get(1);
		
		//ServiceImplementation:
		//	"ServiceImplementation" "of" spp=[SPP];
		public ParserRule getRule() { return rule; }

		//"ServiceImplementation" "of" spp=[SPP]
		public Group getGroup() { return cGroup; }

		//"ServiceImplementation"
		public Keyword getServiceImplementationKeyword_0() { return cServiceImplementationKeyword_0; }

		//"of"
		public Keyword getOfKeyword_1() { return cOfKeyword_1; }

		//spp=[SPP]
		public Assignment getSppAssignment_2() { return cSppAssignment_2; }

		//[SPP]
		public CrossReference getSppSPPCrossReference_2_0() { return cSppSPPCrossReference_2_0; }

		//ID
		public RuleCall getSppSPPIDTerminalRuleCall_2_0_1() { return cSppSPPIDTerminalRuleCall_2_0_1; }
	}

	public class LogicalSystemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LogicalSystem");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLogicalSystemKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cDocuAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDocuDocumentationParserRuleCall_2_0 = (RuleCall)cDocuAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cAnnotationsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_4_0 = (RuleCall)cAnnotationsAssignment_4.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_5 = (UnorderedGroup)cGroup.eContents().get(5);
		private final Assignment cSubSystemsAssignment_5_0 = (Assignment)cUnorderedGroup_5.eContents().get(0);
		private final RuleCall cSubSystemsSubSystemRefParserRuleCall_5_0_0 = (RuleCall)cSubSystemsAssignment_5_0.eContents().get(0);
		private final Assignment cBindingsAssignment_5_1 = (Assignment)cUnorderedGroup_5.eContents().get(1);
		private final RuleCall cBindingsBindingParserRuleCall_5_1_0 = (RuleCall)cBindingsAssignment_5_1.eContents().get(0);
		private final Assignment cConnectionsAssignment_5_2 = (Assignment)cUnorderedGroup_5.eContents().get(2);
		private final RuleCall cConnectionsLayerConnectionParserRuleCall_5_2_0 = (RuleCall)cConnectionsAssignment_5_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//LogicalSystem:
		//	"LogicalSystem" name=ID docu=Documentation? "{" annotations+=Annotation* (subSystems+=SubSystemRef* &
		//	bindings+=Binding* & connections+=LayerConnection*) "}";
		public ParserRule getRule() { return rule; }

		//"LogicalSystem" name=ID docu=Documentation? "{" annotations+=Annotation* (subSystems+=SubSystemRef* & bindings+=Binding*
		//& connections+=LayerConnection*) "}"
		public Group getGroup() { return cGroup; }

		//"LogicalSystem"
		public Keyword getLogicalSystemKeyword_0() { return cLogicalSystemKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//docu=Documentation?
		public Assignment getDocuAssignment_2() { return cDocuAssignment_2; }

		//Documentation
		public RuleCall getDocuDocumentationParserRuleCall_2_0() { return cDocuDocumentationParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//annotations+=Annotation*
		public Assignment getAnnotationsAssignment_4() { return cAnnotationsAssignment_4; }

		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_4_0() { return cAnnotationsAnnotationParserRuleCall_4_0; }

		//subSystems+=SubSystemRef* & bindings+=Binding* & connections+=LayerConnection*
		public UnorderedGroup getUnorderedGroup_5() { return cUnorderedGroup_5; }

		//subSystems+=SubSystemRef*
		public Assignment getSubSystemsAssignment_5_0() { return cSubSystemsAssignment_5_0; }

		//SubSystemRef
		public RuleCall getSubSystemsSubSystemRefParserRuleCall_5_0_0() { return cSubSystemsSubSystemRefParserRuleCall_5_0_0; }

		//bindings+=Binding*
		public Assignment getBindingsAssignment_5_1() { return cBindingsAssignment_5_1; }

		//Binding
		public RuleCall getBindingsBindingParserRuleCall_5_1_0() { return cBindingsBindingParserRuleCall_5_1_0; }

		//connections+=LayerConnection*
		public Assignment getConnectionsAssignment_5_2() { return cConnectionsAssignment_5_2; }

		//LayerConnection
		public RuleCall getConnectionsLayerConnectionParserRuleCall_5_2_0() { return cConnectionsLayerConnectionParserRuleCall_5_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class ActorContainerRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ActorContainerRef");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSubSystemRefParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cActorRefParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ActorContainerRef:
		//	SubSystemRef | ActorRef;
		public ParserRule getRule() { return rule; }

		//SubSystemRef | ActorRef
		public Alternatives getAlternatives() { return cAlternatives; }

		//SubSystemRef
		public RuleCall getSubSystemRefParserRuleCall_0() { return cSubSystemRefParserRuleCall_0; }

		//ActorRef
		public RuleCall getActorRefParserRuleCall_1() { return cActorRefParserRuleCall_1; }
	}

	public class SubSystemRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SubSystemRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSubSystemRefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cTypeSubSystemClassCrossReference_3_0 = (CrossReference)cTypeAssignment_3.eContents().get(0);
		private final RuleCall cTypeSubSystemClassFQNParserRuleCall_3_0_1 = (RuleCall)cTypeSubSystemClassCrossReference_3_0.eContents().get(1);
		private final Assignment cDocuAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDocuDocumentationParserRuleCall_4_0 = (RuleCall)cDocuAssignment_4.eContents().get(0);
		
		//SubSystemRef:
		//	"SubSystemRef" name=ID ":" type=[SubSystemClass|FQN] docu=Documentation?;
		public ParserRule getRule() { return rule; }

		//"SubSystemRef" name=ID ":" type=[SubSystemClass|FQN] docu=Documentation?
		public Group getGroup() { return cGroup; }

		//"SubSystemRef"
		public Keyword getSubSystemRefKeyword_0() { return cSubSystemRefKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=[SubSystemClass|FQN]
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//[SubSystemClass|FQN]
		public CrossReference getTypeSubSystemClassCrossReference_3_0() { return cTypeSubSystemClassCrossReference_3_0; }

		//FQN
		public RuleCall getTypeSubSystemClassFQNParserRuleCall_3_0_1() { return cTypeSubSystemClassFQNParserRuleCall_3_0_1; }

		//docu=Documentation?
		public Assignment getDocuAssignment_4() { return cDocuAssignment_4; }

		//Documentation
		public RuleCall getDocuDocumentationParserRuleCall_4_0() { return cDocuDocumentationParserRuleCall_4_0; }
	}

	public class SubSystemClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SubSystemClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSubSystemClassKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cDocuAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDocuDocumentationParserRuleCall_2_0 = (RuleCall)cDocuAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cAnnotationsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_4_0 = (RuleCall)cAnnotationsAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cUsercode1Keyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cUserCode1Assignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cUserCode1DetailCodeParserRuleCall_5_1_0 = (RuleCall)cUserCode1Assignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cUsercode2Keyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cUserCode2Assignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cUserCode2DetailCodeParserRuleCall_6_1_0 = (RuleCall)cUserCode2Assignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cUsercode3Keyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cUserCode3Assignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cUserCode3DetailCodeParserRuleCall_7_1_0 = (RuleCall)cUserCode3Assignment_7_1.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_8 = (UnorderedGroup)cGroup.eContents().get(8);
		private final Assignment cRelayPortsAssignment_8_0 = (Assignment)cUnorderedGroup_8.eContents().get(0);
		private final RuleCall cRelayPortsPortParserRuleCall_8_0_0 = (RuleCall)cRelayPortsAssignment_8_0.eContents().get(0);
		private final Assignment cServiceProvisionPointsAssignment_8_1 = (Assignment)cUnorderedGroup_8.eContents().get(1);
		private final RuleCall cServiceProvisionPointsSPPParserRuleCall_8_1_0 = (RuleCall)cServiceProvisionPointsAssignment_8_1.eContents().get(0);
		private final Assignment cActorRefsAssignment_8_2 = (Assignment)cUnorderedGroup_8.eContents().get(2);
		private final RuleCall cActorRefsActorRefParserRuleCall_8_2_0 = (RuleCall)cActorRefsAssignment_8_2.eContents().get(0);
		private final Assignment cBindingsAssignment_8_3 = (Assignment)cUnorderedGroup_8.eContents().get(3);
		private final RuleCall cBindingsBindingParserRuleCall_8_3_0 = (RuleCall)cBindingsAssignment_8_3.eContents().get(0);
		private final Assignment cConnectionsAssignment_8_4 = (Assignment)cUnorderedGroup_8.eContents().get(4);
		private final RuleCall cConnectionsLayerConnectionParserRuleCall_8_4_0 = (RuleCall)cConnectionsAssignment_8_4.eContents().get(0);
		private final Assignment cThreadsAssignment_8_5 = (Assignment)cUnorderedGroup_8.eContents().get(5);
		private final RuleCall cThreadsLogicalThreadParserRuleCall_8_5_0 = (RuleCall)cThreadsAssignment_8_5.eContents().get(0);
		private final Assignment cActorInstanceMappingsAssignment_8_6 = (Assignment)cUnorderedGroup_8.eContents().get(6);
		private final RuleCall cActorInstanceMappingsActorInstanceMappingParserRuleCall_8_6_0 = (RuleCall)cActorInstanceMappingsAssignment_8_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//SubSystemClass:
		//	"SubSystemClass" name=ID docu=Documentation? "{" annotations+=Annotation* ("usercode1" userCode1=DetailCode)?
		//	("usercode2" userCode2=DetailCode)? ("usercode3" userCode3=DetailCode)? (relayPorts+=Port* &
		//	serviceProvisionPoints+=SPP* & actorRefs+=ActorRef* & bindings+=Binding* & connections+=LayerConnection* &
		//	threads+=LogicalThread* & actorInstanceMappings+=ActorInstanceMapping*) "}";
		public ParserRule getRule() { return rule; }

		//"SubSystemClass" name=ID docu=Documentation? "{" annotations+=Annotation* ("usercode1" userCode1=DetailCode)?
		//("usercode2" userCode2=DetailCode)? ("usercode3" userCode3=DetailCode)? (relayPorts+=Port* &
		//serviceProvisionPoints+=SPP* & actorRefs+=ActorRef* & bindings+=Binding* & connections+=LayerConnection* &
		//threads+=LogicalThread* & actorInstanceMappings+=ActorInstanceMapping*) "}"
		public Group getGroup() { return cGroup; }

		//"SubSystemClass"
		public Keyword getSubSystemClassKeyword_0() { return cSubSystemClassKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//docu=Documentation?
		public Assignment getDocuAssignment_2() { return cDocuAssignment_2; }

		//Documentation
		public RuleCall getDocuDocumentationParserRuleCall_2_0() { return cDocuDocumentationParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//annotations+=Annotation*
		public Assignment getAnnotationsAssignment_4() { return cAnnotationsAssignment_4; }

		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_4_0() { return cAnnotationsAnnotationParserRuleCall_4_0; }

		//("usercode1" userCode1=DetailCode)?
		public Group getGroup_5() { return cGroup_5; }

		//"usercode1"
		public Keyword getUsercode1Keyword_5_0() { return cUsercode1Keyword_5_0; }

		//userCode1=DetailCode
		public Assignment getUserCode1Assignment_5_1() { return cUserCode1Assignment_5_1; }

		//DetailCode
		public RuleCall getUserCode1DetailCodeParserRuleCall_5_1_0() { return cUserCode1DetailCodeParserRuleCall_5_1_0; }

		//("usercode2" userCode2=DetailCode)?
		public Group getGroup_6() { return cGroup_6; }

		//"usercode2"
		public Keyword getUsercode2Keyword_6_0() { return cUsercode2Keyword_6_0; }

		//userCode2=DetailCode
		public Assignment getUserCode2Assignment_6_1() { return cUserCode2Assignment_6_1; }

		//DetailCode
		public RuleCall getUserCode2DetailCodeParserRuleCall_6_1_0() { return cUserCode2DetailCodeParserRuleCall_6_1_0; }

		//("usercode3" userCode3=DetailCode)?
		public Group getGroup_7() { return cGroup_7; }

		//"usercode3"
		public Keyword getUsercode3Keyword_7_0() { return cUsercode3Keyword_7_0; }

		//userCode3=DetailCode
		public Assignment getUserCode3Assignment_7_1() { return cUserCode3Assignment_7_1; }

		//DetailCode
		public RuleCall getUserCode3DetailCodeParserRuleCall_7_1_0() { return cUserCode3DetailCodeParserRuleCall_7_1_0; }

		//relayPorts+=Port* & serviceProvisionPoints+=SPP* & actorRefs+=ActorRef* & bindings+=Binding* &
		//connections+=LayerConnection* & threads+=LogicalThread* & actorInstanceMappings+=ActorInstanceMapping*
		public UnorderedGroup getUnorderedGroup_8() { return cUnorderedGroup_8; }

		//relayPorts+=Port*
		public Assignment getRelayPortsAssignment_8_0() { return cRelayPortsAssignment_8_0; }

		//Port
		public RuleCall getRelayPortsPortParserRuleCall_8_0_0() { return cRelayPortsPortParserRuleCall_8_0_0; }

		//serviceProvisionPoints+=SPP*
		public Assignment getServiceProvisionPointsAssignment_8_1() { return cServiceProvisionPointsAssignment_8_1; }

		//SPP
		public RuleCall getServiceProvisionPointsSPPParserRuleCall_8_1_0() { return cServiceProvisionPointsSPPParserRuleCall_8_1_0; }

		//actorRefs+=ActorRef*
		public Assignment getActorRefsAssignment_8_2() { return cActorRefsAssignment_8_2; }

		//ActorRef
		public RuleCall getActorRefsActorRefParserRuleCall_8_2_0() { return cActorRefsActorRefParserRuleCall_8_2_0; }

		//bindings+=Binding*
		public Assignment getBindingsAssignment_8_3() { return cBindingsAssignment_8_3; }

		//Binding
		public RuleCall getBindingsBindingParserRuleCall_8_3_0() { return cBindingsBindingParserRuleCall_8_3_0; }

		//connections+=LayerConnection*
		public Assignment getConnectionsAssignment_8_4() { return cConnectionsAssignment_8_4; }

		//LayerConnection
		public RuleCall getConnectionsLayerConnectionParserRuleCall_8_4_0() { return cConnectionsLayerConnectionParserRuleCall_8_4_0; }

		//threads+=LogicalThread*
		public Assignment getThreadsAssignment_8_5() { return cThreadsAssignment_8_5; }

		//LogicalThread
		public RuleCall getThreadsLogicalThreadParserRuleCall_8_5_0() { return cThreadsLogicalThreadParserRuleCall_8_5_0; }

		//actorInstanceMappings+=ActorInstanceMapping*
		public Assignment getActorInstanceMappingsAssignment_8_6() { return cActorInstanceMappingsAssignment_8_6; }

		//ActorInstanceMapping
		public RuleCall getActorInstanceMappingsActorInstanceMappingParserRuleCall_8_6_0() { return cActorInstanceMappingsActorInstanceMappingParserRuleCall_8_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}

	public class LogicalThreadElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LogicalThread");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLogicalThreadKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//LogicalThread:
		//	"LogicalThread" name=ID;
		public ParserRule getRule() { return rule; }

		//"LogicalThread" name=ID
		public Group getGroup() { return cGroup; }

		//"LogicalThread"
		public Keyword getLogicalThreadKeyword_0() { return cLogicalThreadKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class ActorInstanceMappingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ActorInstanceMapping");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cActorInstanceMappingKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPathAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPathRefPathParserRuleCall_1_0 = (RuleCall)cPathAssignment_1.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cThreadAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cThreadLogicalThreadCrossReference_3_0 = (CrossReference)cThreadAssignment_3.eContents().get(0);
		private final RuleCall cThreadLogicalThreadIDTerminalRuleCall_3_0_1 = (RuleCall)cThreadLogicalThreadCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cActorInstanceMappingsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cActorInstanceMappingsActorInstanceMappingParserRuleCall_4_1_0 = (RuleCall)cActorInstanceMappingsAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		
		//ActorInstanceMapping:
		//	"ActorInstanceMapping" path=RefPath "->" thread=[LogicalThread] ("{" actorInstanceMappings+=ActorInstanceMapping*
		//	"}")?;
		public ParserRule getRule() { return rule; }

		//"ActorInstanceMapping" path=RefPath "->" thread=[LogicalThread] ("{" actorInstanceMappings+=ActorInstanceMapping* "}")?
		public Group getGroup() { return cGroup; }

		//"ActorInstanceMapping"
		public Keyword getActorInstanceMappingKeyword_0() { return cActorInstanceMappingKeyword_0; }

		//path=RefPath
		public Assignment getPathAssignment_1() { return cPathAssignment_1; }

		//RefPath
		public RuleCall getPathRefPathParserRuleCall_1_0() { return cPathRefPathParserRuleCall_1_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_2() { return cHyphenMinusGreaterThanSignKeyword_2; }

		//thread=[LogicalThread]
		public Assignment getThreadAssignment_3() { return cThreadAssignment_3; }

		//[LogicalThread]
		public CrossReference getThreadLogicalThreadCrossReference_3_0() { return cThreadLogicalThreadCrossReference_3_0; }

		//ID
		public RuleCall getThreadLogicalThreadIDTerminalRuleCall_3_0_1() { return cThreadLogicalThreadIDTerminalRuleCall_3_0_1; }

		//("{" actorInstanceMappings+=ActorInstanceMapping* "}")?
		public Group getGroup_4() { return cGroup_4; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4_0() { return cLeftCurlyBracketKeyword_4_0; }

		//actorInstanceMappings+=ActorInstanceMapping*
		public Assignment getActorInstanceMappingsAssignment_4_1() { return cActorInstanceMappingsAssignment_4_1; }

		//ActorInstanceMapping
		public RuleCall getActorInstanceMappingsActorInstanceMappingParserRuleCall_4_1_0() { return cActorInstanceMappingsActorInstanceMappingParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4_2() { return cRightCurlyBracketKeyword_4_2; }
	}

	public class RefPathElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RefPath");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cRefsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cRefsRefSegmentParserRuleCall_0_0 = (RuleCall)cRefsAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cSolidusKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cRefsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cRefsRefSegmentParserRuleCall_1_1_0 = (RuleCall)cRefsAssignment_1_1.eContents().get(0);
		
		//RefPath:
		//	refs+=RefSegment ("/" refs+=RefSegment)*;
		public ParserRule getRule() { return rule; }

		//refs+=RefSegment ("/" refs+=RefSegment)*
		public Group getGroup() { return cGroup; }

		//refs+=RefSegment
		public Assignment getRefsAssignment_0() { return cRefsAssignment_0; }

		//RefSegment
		public RuleCall getRefsRefSegmentParserRuleCall_0_0() { return cRefsRefSegmentParserRuleCall_0_0; }

		//("/" refs+=RefSegment)*
		public Group getGroup_1() { return cGroup_1; }

		//"/"
		public Keyword getSolidusKeyword_1_0() { return cSolidusKeyword_1_0; }

		//refs+=RefSegment
		public Assignment getRefsAssignment_1_1() { return cRefsAssignment_1_1; }

		//RefSegment
		public RuleCall getRefsRefSegmentParserRuleCall_1_1_0() { return cRefsRefSegmentParserRuleCall_1_1_0; }
	}

	public class RefSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RefSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cRefAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cRefIDTerminalRuleCall_0_0 = (RuleCall)cRefAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cIdxAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cIdxINTTerminalRuleCall_1_1_0 = (RuleCall)cIdxAssignment_1_1.eContents().get(0);
		
		//RefSegment:
		//	ref=ID (":" idx=INT)?;
		public ParserRule getRule() { return rule; }

		//ref=ID (":" idx=INT)?
		public Group getGroup() { return cGroup; }

		//ref=ID
		public Assignment getRefAssignment_0() { return cRefAssignment_0; }

		//ID
		public RuleCall getRefIDTerminalRuleCall_0_0() { return cRefIDTerminalRuleCall_0_0; }

		//(":" idx=INT)?
		public Group getGroup_1() { return cGroup_1; }

		//":"
		public Keyword getColonKeyword_1_0() { return cColonKeyword_1_0; }

		//idx=INT
		public Assignment getIdxAssignment_1_1() { return cIdxAssignment_1_1; }

		//INT
		public RuleCall getIdxINTTerminalRuleCall_1_1_0() { return cIdxINTTerminalRuleCall_1_1_0; }
	}

	public class BindingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Binding");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBindingKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cEndpoint1Assignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cEndpoint1BindingEndPointParserRuleCall_1_0 = (RuleCall)cEndpoint1Assignment_1.eContents().get(0);
		private final Keyword cAndKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEndpoint2Assignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEndpoint2BindingEndPointParserRuleCall_3_0 = (RuleCall)cEndpoint2Assignment_3.eContents().get(0);
		
		//Binding:
		//	"Binding" endpoint1=BindingEndPoint "and" endpoint2=BindingEndPoint;
		public ParserRule getRule() { return rule; }

		//"Binding" endpoint1=BindingEndPoint "and" endpoint2=BindingEndPoint
		public Group getGroup() { return cGroup; }

		//"Binding"
		public Keyword getBindingKeyword_0() { return cBindingKeyword_0; }

		//endpoint1=BindingEndPoint
		public Assignment getEndpoint1Assignment_1() { return cEndpoint1Assignment_1; }

		//BindingEndPoint
		public RuleCall getEndpoint1BindingEndPointParserRuleCall_1_0() { return cEndpoint1BindingEndPointParserRuleCall_1_0; }

		//"and"
		public Keyword getAndKeyword_2() { return cAndKeyword_2; }

		//endpoint2=BindingEndPoint
		public Assignment getEndpoint2Assignment_3() { return cEndpoint2Assignment_3; }

		//BindingEndPoint
		public RuleCall getEndpoint2BindingEndPointParserRuleCall_3_0() { return cEndpoint2BindingEndPointParserRuleCall_3_0; }
	}

	public class BindingEndPointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BindingEndPoint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cActorRefAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final CrossReference cActorRefActorContainerRefCrossReference_0_0_0 = (CrossReference)cActorRefAssignment_0_0.eContents().get(0);
		private final RuleCall cActorRefActorContainerRefIDTerminalRuleCall_0_0_0_1 = (RuleCall)cActorRefActorContainerRefCrossReference_0_0_0.eContents().get(1);
		private final Keyword cFullStopKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cPortAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cPortPortCrossReference_1_0 = (CrossReference)cPortAssignment_1.eContents().get(0);
		private final RuleCall cPortPortIDTerminalRuleCall_1_0_1 = (RuleCall)cPortPortCrossReference_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cSubKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cSubAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cSubSubProtocolCrossReference_2_1_0 = (CrossReference)cSubAssignment_2_1.eContents().get(0);
		private final RuleCall cSubSubProtocolIDTerminalRuleCall_2_1_0_1 = (RuleCall)cSubSubProtocolCrossReference_2_1_0.eContents().get(1);
		
		//BindingEndPoint:
		//	(actorRef=[ActorContainerRef] ".")? port=[Port] ("sub" sub=[SubProtocol])?;
		public ParserRule getRule() { return rule; }

		//(actorRef=[ActorContainerRef] ".")? port=[Port] ("sub" sub=[SubProtocol])?
		public Group getGroup() { return cGroup; }

		//(actorRef=[ActorContainerRef] ".")?
		public Group getGroup_0() { return cGroup_0; }

		//actorRef=[ActorContainerRef]
		public Assignment getActorRefAssignment_0_0() { return cActorRefAssignment_0_0; }

		//[ActorContainerRef]
		public CrossReference getActorRefActorContainerRefCrossReference_0_0_0() { return cActorRefActorContainerRefCrossReference_0_0_0; }

		//ID
		public RuleCall getActorRefActorContainerRefIDTerminalRuleCall_0_0_0_1() { return cActorRefActorContainerRefIDTerminalRuleCall_0_0_0_1; }

		//"."
		public Keyword getFullStopKeyword_0_1() { return cFullStopKeyword_0_1; }

		//port=[Port]
		public Assignment getPortAssignment_1() { return cPortAssignment_1; }

		//[Port]
		public CrossReference getPortPortCrossReference_1_0() { return cPortPortCrossReference_1_0; }

		//ID
		public RuleCall getPortPortIDTerminalRuleCall_1_0_1() { return cPortPortIDTerminalRuleCall_1_0_1; }

		//("sub" sub=[SubProtocol])?
		public Group getGroup_2() { return cGroup_2; }

		//"sub"
		public Keyword getSubKeyword_2_0() { return cSubKeyword_2_0; }

		//sub=[SubProtocol]
		public Assignment getSubAssignment_2_1() { return cSubAssignment_2_1; }

		//[SubProtocol]
		public CrossReference getSubSubProtocolCrossReference_2_1_0() { return cSubSubProtocolCrossReference_2_1_0; }

		//ID
		public RuleCall getSubSubProtocolIDTerminalRuleCall_2_1_0_1() { return cSubSubProtocolIDTerminalRuleCall_2_1_0_1; }
	}

	public class LayerConnectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LayerConnection");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLayerConnectionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFromAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFromSAPointParserRuleCall_1_0 = (RuleCall)cFromAssignment_1.eContents().get(0);
		private final Keyword cSatisfied_byKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cToAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cToSPPointParserRuleCall_3_0 = (RuleCall)cToAssignment_3.eContents().get(0);
		
		//LayerConnection:
		//	"LayerConnection" from=SAPoint "satisfied_by" to=SPPoint;
		public ParserRule getRule() { return rule; }

		//"LayerConnection" from=SAPoint "satisfied_by" to=SPPoint
		public Group getGroup() { return cGroup; }

		//"LayerConnection"
		public Keyword getLayerConnectionKeyword_0() { return cLayerConnectionKeyword_0; }

		//from=SAPoint
		public Assignment getFromAssignment_1() { return cFromAssignment_1; }

		//SAPoint
		public RuleCall getFromSAPointParserRuleCall_1_0() { return cFromSAPointParserRuleCall_1_0; }

		//"satisfied_by"
		public Keyword getSatisfied_byKeyword_2() { return cSatisfied_byKeyword_2; }

		//to=SPPoint
		public Assignment getToAssignment_3() { return cToAssignment_3; }

		//SPPoint
		public RuleCall getToSPPointParserRuleCall_3_0() { return cToSPPointParserRuleCall_3_0; }
	}

	public class SAPointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SAPoint");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRefSAPointParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRelaySAPointParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//SAPoint:
		//	RefSAPoint | RelaySAPoint;
		public ParserRule getRule() { return rule; }

		//RefSAPoint | RelaySAPoint
		public Alternatives getAlternatives() { return cAlternatives; }

		//RefSAPoint
		public RuleCall getRefSAPointParserRuleCall_0() { return cRefSAPointParserRuleCall_0; }

		//RelaySAPoint
		public RuleCall getRelaySAPointParserRuleCall_1() { return cRelaySAPointParserRuleCall_1; }
	}

	public class RefSAPointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RefSAPoint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cRefAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cRefActorContainerRefCrossReference_1_0 = (CrossReference)cRefAssignment_1.eContents().get(0);
		private final RuleCall cRefActorContainerRefIDTerminalRuleCall_1_0_1 = (RuleCall)cRefActorContainerRefCrossReference_1_0.eContents().get(1);
		
		//RefSAPoint: // satisfies a sub actor
		//	"ref" ref=[ActorContainerRef];
		public ParserRule getRule() { return rule; }

		//// satisfies a sub actor
		//"ref" ref=[ActorContainerRef]
		public Group getGroup() { return cGroup; }

		//// satisfies a sub actor
		//"ref"
		public Keyword getRefKeyword_0() { return cRefKeyword_0; }

		//ref=[ActorContainerRef]
		public Assignment getRefAssignment_1() { return cRefAssignment_1; }

		//[ActorContainerRef]
		public CrossReference getRefActorContainerRefCrossReference_1_0() { return cRefActorContainerRefCrossReference_1_0; }

		//ID
		public RuleCall getRefActorContainerRefIDTerminalRuleCall_1_0_1() { return cRefActorContainerRefIDTerminalRuleCall_1_0_1; }
	}

	public class RelaySAPointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RelaySAPoint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRelay_sapKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cRelayAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cRelaySPPCrossReference_1_0 = (CrossReference)cRelayAssignment_1.eContents().get(0);
		private final RuleCall cRelaySPPIDTerminalRuleCall_1_0_1 = (RuleCall)cRelaySPPCrossReference_1_0.eContents().get(1);
		
		//RelaySAPoint: // relays from own interface
		//	"relay_sap" relay=[SPP];
		public ParserRule getRule() { return rule; }

		//// relays from own interface
		//"relay_sap" relay=[SPP]
		public Group getGroup() { return cGroup; }

		//// relays from own interface
		//"relay_sap"
		public Keyword getRelay_sapKeyword_0() { return cRelay_sapKeyword_0; }

		//relay=[SPP]
		public Assignment getRelayAssignment_1() { return cRelayAssignment_1; }

		//[SPP]
		public CrossReference getRelaySPPCrossReference_1_0() { return cRelaySPPCrossReference_1_0; }

		//ID
		public RuleCall getRelaySPPIDTerminalRuleCall_1_0_1() { return cRelaySPPIDTerminalRuleCall_1_0_1; }
	}

	public class SPPointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SPPoint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cRefAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cRefActorContainerRefCrossReference_0_0 = (CrossReference)cRefAssignment_0.eContents().get(0);
		private final RuleCall cRefActorContainerRefIDTerminalRuleCall_0_0_1 = (RuleCall)cRefActorContainerRefCrossReference_0_0.eContents().get(1);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cServiceAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cServiceSPPCrossReference_2_0 = (CrossReference)cServiceAssignment_2.eContents().get(0);
		private final RuleCall cServiceSPPIDTerminalRuleCall_2_0_1 = (RuleCall)cServiceSPPCrossReference_2_0.eContents().get(1);
		
		//SPPoint:
		//	ref=[ActorContainerRef] "." service=[SPP];
		public ParserRule getRule() { return rule; }

		//ref=[ActorContainerRef] "." service=[SPP]
		public Group getGroup() { return cGroup; }

		//ref=[ActorContainerRef]
		public Assignment getRefAssignment_0() { return cRefAssignment_0; }

		//[ActorContainerRef]
		public CrossReference getRefActorContainerRefCrossReference_0_0() { return cRefActorContainerRefCrossReference_0_0; }

		//ID
		public RuleCall getRefActorContainerRefIDTerminalRuleCall_0_0_1() { return cRefActorContainerRefIDTerminalRuleCall_0_0_1; }

		//"."
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }

		//service=[SPP]
		public Assignment getServiceAssignment_2() { return cServiceAssignment_2; }

		//[SPP]
		public CrossReference getServiceSPPCrossReference_2_0() { return cServiceSPPCrossReference_2_0; }

		//ID
		public RuleCall getServiceSPPIDTerminalRuleCall_2_0_1() { return cServiceSPPIDTerminalRuleCall_2_0_1; }
	}

	public class ActorRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ActorRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cRefTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cRefTypeReferenceTypeEnumRuleCall_0_0 = (RuleCall)cRefTypeAssignment_0.eContents().get(0);
		private final Keyword cActorRefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cMultiplicityAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMultiplicityMULTIPLICITYParserRuleCall_3_0 = (RuleCall)cMultiplicityAssignment_3.eContents().get(0);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTypeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cTypeActorClassCrossReference_5_0 = (CrossReference)cTypeAssignment_5.eContents().get(0);
		private final RuleCall cTypeActorClassFQNParserRuleCall_5_0_1 = (RuleCall)cTypeActorClassCrossReference_5_0.eContents().get(1);
		private final Assignment cDocuAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDocuDocumentationParserRuleCall_6_0 = (RuleCall)cDocuAssignment_6.eContents().get(0);
		
		//ActorRef:
		//	refType=ReferenceType? "ActorRef" name=ID multiplicity=MULTIPLICITY? ":" type=[ActorClass|FQN] docu=Documentation?;
		public ParserRule getRule() { return rule; }

		//refType=ReferenceType? "ActorRef" name=ID multiplicity=MULTIPLICITY? ":" type=[ActorClass|FQN] docu=Documentation?
		public Group getGroup() { return cGroup; }

		//refType=ReferenceType?
		public Assignment getRefTypeAssignment_0() { return cRefTypeAssignment_0; }

		//ReferenceType
		public RuleCall getRefTypeReferenceTypeEnumRuleCall_0_0() { return cRefTypeReferenceTypeEnumRuleCall_0_0; }

		//"ActorRef"
		public Keyword getActorRefKeyword_1() { return cActorRefKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//multiplicity=MULTIPLICITY?
		public Assignment getMultiplicityAssignment_3() { return cMultiplicityAssignment_3; }

		//MULTIPLICITY
		public RuleCall getMultiplicityMULTIPLICITYParserRuleCall_3_0() { return cMultiplicityMULTIPLICITYParserRuleCall_3_0; }

		//":"
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }

		//type=[ActorClass|FQN]
		public Assignment getTypeAssignment_5() { return cTypeAssignment_5; }

		//[ActorClass|FQN]
		public CrossReference getTypeActorClassCrossReference_5_0() { return cTypeActorClassCrossReference_5_0; }

		//FQN
		public RuleCall getTypeActorClassFQNParserRuleCall_5_0_1() { return cTypeActorClassFQNParserRuleCall_5_0_1; }

		//docu=Documentation?
		public Assignment getDocuAssignment_6() { return cDocuAssignment_6; }

		//Documentation
		public RuleCall getDocuDocumentationParserRuleCall_6_0() { return cDocuDocumentationParserRuleCall_6_0; }
	}

	public class StateGraphNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StateGraphNode");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cStateParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cChoicePointParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cTrPointParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//// **************************************************************
		//// state machine
		//StateGraphNode:
		//	State | ChoicePoint | TrPoint;
		public ParserRule getRule() { return rule; }

		//State | ChoicePoint | TrPoint
		public Alternatives getAlternatives() { return cAlternatives; }

		//State
		public RuleCall getStateParserRuleCall_0() { return cStateParserRuleCall_0; }

		//ChoicePoint
		public RuleCall getChoicePointParserRuleCall_1() { return cChoicePointParserRuleCall_1; }

		//TrPoint
		public RuleCall getTrPointParserRuleCall_2() { return cTrPointParserRuleCall_2; }
	}

	public class StateGraphItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StateGraphItem");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cStateGraphNodeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTransitionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//StateGraphItem:
		//	StateGraphNode | Transition;
		public ParserRule getRule() { return rule; }

		//StateGraphNode | Transition
		public Alternatives getAlternatives() { return cAlternatives; }

		//StateGraphNode
		public RuleCall getStateGraphNodeParserRuleCall_0() { return cStateGraphNodeParserRuleCall_0; }

		//Transition
		public RuleCall getTransitionParserRuleCall_1() { return cTransitionParserRuleCall_1; }
	}

	public class StateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "State");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSimpleStateParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRefinedStateParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//State:
		//	SimpleState | RefinedState;
		public ParserRule getRule() { return rule; }

		//SimpleState | RefinedState
		public Alternatives getAlternatives() { return cAlternatives; }

		//SimpleState
		public RuleCall getSimpleStateParserRuleCall_0() { return cSimpleStateParserRuleCall_0; }

		//RefinedState
		public RuleCall getRefinedStateParserRuleCall_1() { return cRefinedStateParserRuleCall_1; }
	}

	public class StateGraphElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StateGraph");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cStateGraphAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cStatesAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cStatesStateParserRuleCall_2_0_0 = (RuleCall)cStatesAssignment_2_0.eContents().get(0);
		private final Assignment cTrPointsAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cTrPointsTrPointParserRuleCall_2_1_0 = (RuleCall)cTrPointsAssignment_2_1.eContents().get(0);
		private final Assignment cChPointsAssignment_2_2 = (Assignment)cAlternatives_2.eContents().get(2);
		private final RuleCall cChPointsChoicePointParserRuleCall_2_2_0 = (RuleCall)cChPointsAssignment_2_2.eContents().get(0);
		private final Assignment cTransitionsAssignment_2_3 = (Assignment)cAlternatives_2.eContents().get(3);
		private final RuleCall cTransitionsTransitionParserRuleCall_2_3_0 = (RuleCall)cTransitionsAssignment_2_3.eContents().get(0);
		private final Assignment cRefinedTransitionsAssignment_2_4 = (Assignment)cAlternatives_2.eContents().get(4);
		private final RuleCall cRefinedTransitionsRefinedTransitionParserRuleCall_2_4_0 = (RuleCall)cRefinedTransitionsAssignment_2_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//StateGraph:
		//	{StateGraph} "{" (states+=State | trPoints+=TrPoint | chPoints+=ChoicePoint | transitions+=Transition |
		//	refinedTransitions+=RefinedTransition)* "}";
		public ParserRule getRule() { return rule; }

		//{StateGraph} "{" (states+=State | trPoints+=TrPoint | chPoints+=ChoicePoint | transitions+=Transition |
		//refinedTransitions+=RefinedTransition)* "}"
		public Group getGroup() { return cGroup; }

		//{StateGraph}
		public Action getStateGraphAction_0() { return cStateGraphAction_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//(states+=State | trPoints+=TrPoint | chPoints+=ChoicePoint | transitions+=Transition |
		//refinedTransitions+=RefinedTransition)*
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//states+=State
		public Assignment getStatesAssignment_2_0() { return cStatesAssignment_2_0; }

		//State
		public RuleCall getStatesStateParserRuleCall_2_0_0() { return cStatesStateParserRuleCall_2_0_0; }

		//trPoints+=TrPoint
		public Assignment getTrPointsAssignment_2_1() { return cTrPointsAssignment_2_1; }

		//TrPoint
		public RuleCall getTrPointsTrPointParserRuleCall_2_1_0() { return cTrPointsTrPointParserRuleCall_2_1_0; }

		//chPoints+=ChoicePoint
		public Assignment getChPointsAssignment_2_2() { return cChPointsAssignment_2_2; }

		//ChoicePoint
		public RuleCall getChPointsChoicePointParserRuleCall_2_2_0() { return cChPointsChoicePointParserRuleCall_2_2_0; }

		//transitions+=Transition
		public Assignment getTransitionsAssignment_2_3() { return cTransitionsAssignment_2_3; }

		//Transition
		public RuleCall getTransitionsTransitionParserRuleCall_2_3_0() { return cTransitionsTransitionParserRuleCall_2_3_0; }

		//refinedTransitions+=RefinedTransition
		public Assignment getRefinedTransitionsAssignment_2_4() { return cRefinedTransitionsAssignment_2_4; }

		//RefinedTransition
		public RuleCall getRefinedTransitionsRefinedTransitionParserRuleCall_2_4_0() { return cRefinedTransitionsRefinedTransitionParserRuleCall_2_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class StateMachineElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StateMachine");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cStateGraphAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cStateMachineKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cStatesAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cStatesStateParserRuleCall_3_0_0 = (RuleCall)cStatesAssignment_3_0.eContents().get(0);
		private final Assignment cTrPointsAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final RuleCall cTrPointsTrPointParserRuleCall_3_1_0 = (RuleCall)cTrPointsAssignment_3_1.eContents().get(0);
		private final Assignment cChPointsAssignment_3_2 = (Assignment)cAlternatives_3.eContents().get(2);
		private final RuleCall cChPointsChoicePointParserRuleCall_3_2_0 = (RuleCall)cChPointsAssignment_3_2.eContents().get(0);
		private final Assignment cTransitionsAssignment_3_3 = (Assignment)cAlternatives_3.eContents().get(3);
		private final RuleCall cTransitionsTransitionParserRuleCall_3_3_0 = (RuleCall)cTransitionsAssignment_3_3.eContents().get(0);
		private final Assignment cRefinedTransitionsAssignment_3_4 = (Assignment)cAlternatives_3.eContents().get(4);
		private final RuleCall cRefinedTransitionsRefinedTransitionParserRuleCall_3_4_0 = (RuleCall)cRefinedTransitionsAssignment_3_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//StateMachine returns StateGraph:
		//	{StateGraph} "StateMachine" "{" (states+=State | trPoints+=TrPoint | chPoints+=ChoicePoint | transitions+=Transition
		//	| refinedTransitions+=RefinedTransition)* "}";
		public ParserRule getRule() { return rule; }

		//{StateGraph} "StateMachine" "{" (states+=State | trPoints+=TrPoint | chPoints+=ChoicePoint | transitions+=Transition |
		//refinedTransitions+=RefinedTransition)* "}"
		public Group getGroup() { return cGroup; }

		//{StateGraph}
		public Action getStateGraphAction_0() { return cStateGraphAction_0; }

		//"StateMachine"
		public Keyword getStateMachineKeyword_1() { return cStateMachineKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//(states+=State | trPoints+=TrPoint | chPoints+=ChoicePoint | transitions+=Transition |
		//refinedTransitions+=RefinedTransition)*
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//states+=State
		public Assignment getStatesAssignment_3_0() { return cStatesAssignment_3_0; }

		//State
		public RuleCall getStatesStateParserRuleCall_3_0_0() { return cStatesStateParserRuleCall_3_0_0; }

		//trPoints+=TrPoint
		public Assignment getTrPointsAssignment_3_1() { return cTrPointsAssignment_3_1; }

		//TrPoint
		public RuleCall getTrPointsTrPointParserRuleCall_3_1_0() { return cTrPointsTrPointParserRuleCall_3_1_0; }

		//chPoints+=ChoicePoint
		public Assignment getChPointsAssignment_3_2() { return cChPointsAssignment_3_2; }

		//ChoicePoint
		public RuleCall getChPointsChoicePointParserRuleCall_3_2_0() { return cChPointsChoicePointParserRuleCall_3_2_0; }

		//transitions+=Transition
		public Assignment getTransitionsAssignment_3_3() { return cTransitionsAssignment_3_3; }

		//Transition
		public RuleCall getTransitionsTransitionParserRuleCall_3_3_0() { return cTransitionsTransitionParserRuleCall_3_3_0; }

		//refinedTransitions+=RefinedTransition
		public Assignment getRefinedTransitionsAssignment_3_4() { return cRefinedTransitionsAssignment_3_4; }

		//RefinedTransition
		public RuleCall getRefinedTransitionsRefinedTransitionParserRuleCall_3_4_0() { return cRefinedTransitionsRefinedTransitionParserRuleCall_3_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class SimpleStateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SimpleState");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStateKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cDocuAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDocuDocumentationParserRuleCall_2_0 = (RuleCall)cDocuAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cEntryKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cEntryCodeAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cEntryCodeDetailCodeParserRuleCall_3_1_1_0 = (RuleCall)cEntryCodeAssignment_3_1_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cExitKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cExitCodeAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cExitCodeDetailCodeParserRuleCall_3_2_1_0 = (RuleCall)cExitCodeAssignment_3_2_1.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cDoKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cDoCodeAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cDoCodeDetailCodeParserRuleCall_3_3_1_0 = (RuleCall)cDoCodeAssignment_3_3_1.eContents().get(0);
		private final Group cGroup_3_4 = (Group)cGroup_3.eContents().get(4);
		private final Keyword cSubgraphKeyword_3_4_0 = (Keyword)cGroup_3_4.eContents().get(0);
		private final Assignment cSubgraphAssignment_3_4_1 = (Assignment)cGroup_3_4.eContents().get(1);
		private final RuleCall cSubgraphStateGraphParserRuleCall_3_4_1_0 = (RuleCall)cSubgraphAssignment_3_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_5 = (Keyword)cGroup_3.eContents().get(5);
		
		//SimpleState:
		//	"State" name=ID docu=Documentation? ("{" ("entry" entryCode=DetailCode)? ("exit" exitCode=DetailCode)? ("do"
		//	doCode=DetailCode)? ("subgraph" subgraph=StateGraph)? "}")?;
		public ParserRule getRule() { return rule; }

		//"State" name=ID docu=Documentation? ("{" ("entry" entryCode=DetailCode)? ("exit" exitCode=DetailCode)? ("do"
		//doCode=DetailCode)? ("subgraph" subgraph=StateGraph)? "}")?
		public Group getGroup() { return cGroup; }

		//"State"
		public Keyword getStateKeyword_0() { return cStateKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//docu=Documentation?
		public Assignment getDocuAssignment_2() { return cDocuAssignment_2; }

		//Documentation
		public RuleCall getDocuDocumentationParserRuleCall_2_0() { return cDocuDocumentationParserRuleCall_2_0; }

		//("{" ("entry" entryCode=DetailCode)? ("exit" exitCode=DetailCode)? ("do" doCode=DetailCode)? ("subgraph"
		//subgraph=StateGraph)? "}")?
		public Group getGroup_3() { return cGroup_3; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3_0() { return cLeftCurlyBracketKeyword_3_0; }

		//("entry" entryCode=DetailCode)?
		public Group getGroup_3_1() { return cGroup_3_1; }

		//"entry"
		public Keyword getEntryKeyword_3_1_0() { return cEntryKeyword_3_1_0; }

		//entryCode=DetailCode
		public Assignment getEntryCodeAssignment_3_1_1() { return cEntryCodeAssignment_3_1_1; }

		//DetailCode
		public RuleCall getEntryCodeDetailCodeParserRuleCall_3_1_1_0() { return cEntryCodeDetailCodeParserRuleCall_3_1_1_0; }

		//("exit" exitCode=DetailCode)?
		public Group getGroup_3_2() { return cGroup_3_2; }

		//"exit"
		public Keyword getExitKeyword_3_2_0() { return cExitKeyword_3_2_0; }

		//exitCode=DetailCode
		public Assignment getExitCodeAssignment_3_2_1() { return cExitCodeAssignment_3_2_1; }

		//DetailCode
		public RuleCall getExitCodeDetailCodeParserRuleCall_3_2_1_0() { return cExitCodeDetailCodeParserRuleCall_3_2_1_0; }

		//("do" doCode=DetailCode)?
		public Group getGroup_3_3() { return cGroup_3_3; }

		//"do"
		public Keyword getDoKeyword_3_3_0() { return cDoKeyword_3_3_0; }

		//doCode=DetailCode
		public Assignment getDoCodeAssignment_3_3_1() { return cDoCodeAssignment_3_3_1; }

		//DetailCode
		public RuleCall getDoCodeDetailCodeParserRuleCall_3_3_1_0() { return cDoCodeDetailCodeParserRuleCall_3_3_1_0; }

		//("subgraph" subgraph=StateGraph)?
		public Group getGroup_3_4() { return cGroup_3_4; }

		//"subgraph"
		public Keyword getSubgraphKeyword_3_4_0() { return cSubgraphKeyword_3_4_0; }

		//subgraph=StateGraph
		public Assignment getSubgraphAssignment_3_4_1() { return cSubgraphAssignment_3_4_1; }

		//StateGraph
		public RuleCall getSubgraphStateGraphParserRuleCall_3_4_1_0() { return cSubgraphStateGraphParserRuleCall_3_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3_5() { return cRightCurlyBracketKeyword_3_5; }
	}

	public class RefinedStateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RefinedState");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRefinedStateKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTargetAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cTargetStateCrossReference_1_0 = (CrossReference)cTargetAssignment_1.eContents().get(0);
		private final RuleCall cTargetStateFQNParserRuleCall_1_0_1 = (RuleCall)cTargetStateCrossReference_1_0.eContents().get(1);
		private final Assignment cDocuAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDocuDocumentationParserRuleCall_2_0 = (RuleCall)cDocuAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cEntryKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cEntryCodeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cEntryCodeDetailCodeParserRuleCall_4_1_0 = (RuleCall)cEntryCodeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cExitKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cExitCodeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cExitCodeDetailCodeParserRuleCall_5_1_0 = (RuleCall)cExitCodeAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cDoKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cDoCodeAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cDoCodeDetailCodeParserRuleCall_6_1_0 = (RuleCall)cDoCodeAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cSubgraphKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cSubgraphAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cSubgraphStateGraphParserRuleCall_7_1_0 = (RuleCall)cSubgraphAssignment_7_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//RefinedState:
		//	"RefinedState" target=[State|FQN] docu=Documentation? "{" ("entry" entryCode=DetailCode)? ("exit"
		//	exitCode=DetailCode)? ("do" doCode=DetailCode)? ("subgraph" subgraph=StateGraph)? "}";
		public ParserRule getRule() { return rule; }

		//"RefinedState" target=[State|FQN] docu=Documentation? "{" ("entry" entryCode=DetailCode)? ("exit" exitCode=DetailCode)?
		//("do" doCode=DetailCode)? ("subgraph" subgraph=StateGraph)? "}"
		public Group getGroup() { return cGroup; }

		//"RefinedState"
		public Keyword getRefinedStateKeyword_0() { return cRefinedStateKeyword_0; }

		//target=[State|FQN]
		public Assignment getTargetAssignment_1() { return cTargetAssignment_1; }

		//[State|FQN]
		public CrossReference getTargetStateCrossReference_1_0() { return cTargetStateCrossReference_1_0; }

		//FQN
		public RuleCall getTargetStateFQNParserRuleCall_1_0_1() { return cTargetStateFQNParserRuleCall_1_0_1; }

		//docu=Documentation?
		public Assignment getDocuAssignment_2() { return cDocuAssignment_2; }

		//Documentation
		public RuleCall getDocuDocumentationParserRuleCall_2_0() { return cDocuDocumentationParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//("entry" entryCode=DetailCode)?
		public Group getGroup_4() { return cGroup_4; }

		//"entry"
		public Keyword getEntryKeyword_4_0() { return cEntryKeyword_4_0; }

		//entryCode=DetailCode
		public Assignment getEntryCodeAssignment_4_1() { return cEntryCodeAssignment_4_1; }

		//DetailCode
		public RuleCall getEntryCodeDetailCodeParserRuleCall_4_1_0() { return cEntryCodeDetailCodeParserRuleCall_4_1_0; }

		//("exit" exitCode=DetailCode)?
		public Group getGroup_5() { return cGroup_5; }

		//"exit"
		public Keyword getExitKeyword_5_0() { return cExitKeyword_5_0; }

		//exitCode=DetailCode
		public Assignment getExitCodeAssignment_5_1() { return cExitCodeAssignment_5_1; }

		//DetailCode
		public RuleCall getExitCodeDetailCodeParserRuleCall_5_1_0() { return cExitCodeDetailCodeParserRuleCall_5_1_0; }

		//("do" doCode=DetailCode)?
		public Group getGroup_6() { return cGroup_6; }

		//"do"
		public Keyword getDoKeyword_6_0() { return cDoKeyword_6_0; }

		//doCode=DetailCode
		public Assignment getDoCodeAssignment_6_1() { return cDoCodeAssignment_6_1; }

		//DetailCode
		public RuleCall getDoCodeDetailCodeParserRuleCall_6_1_0() { return cDoCodeDetailCodeParserRuleCall_6_1_0; }

		//("subgraph" subgraph=StateGraph)?
		public Group getGroup_7() { return cGroup_7; }

		//"subgraph"
		public Keyword getSubgraphKeyword_7_0() { return cSubgraphKeyword_7_0; }

		//subgraph=StateGraph
		public Assignment getSubgraphAssignment_7_1() { return cSubgraphAssignment_7_1; }

		//StateGraph
		public RuleCall getSubgraphStateGraphParserRuleCall_7_1_0() { return cSubgraphStateGraphParserRuleCall_7_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class DetailCodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DetailCode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDetailCodeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cLinesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLinesSTRINGTerminalRuleCall_2_0 = (RuleCall)cLinesAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//// TODOHRR: provide a means to call super class code (cf. ROOM p. 310f)
		//// super() keyword or flag like in Trice
		//DetailCode:
		//	{DetailCode} "{" lines+=STRING* "}";
		public ParserRule getRule() { return rule; }

		//{DetailCode} "{" lines+=STRING* "}"
		public Group getGroup() { return cGroup; }

		//{DetailCode}
		public Action getDetailCodeAction_0() { return cDetailCodeAction_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//lines+=STRING*
		public Assignment getLinesAssignment_2() { return cLinesAssignment_2; }

		//STRING
		public RuleCall getLinesSTRINGTerminalRuleCall_2_0() { return cLinesSTRINGTerminalRuleCall_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class TrPointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TrPoint");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTransitionPointParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEntryPointParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cExitPointParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//TrPoint:
		//	TransitionPoint | EntryPoint | ExitPoint;
		public ParserRule getRule() { return rule; }

		//TransitionPoint | EntryPoint | ExitPoint
		public Alternatives getAlternatives() { return cAlternatives; }

		//TransitionPoint
		public RuleCall getTransitionPointParserRuleCall_0() { return cTransitionPointParserRuleCall_0; }

		//EntryPoint
		public RuleCall getEntryPointParserRuleCall_1() { return cEntryPointParserRuleCall_1; }

		//ExitPoint
		public RuleCall getExitPointParserRuleCall_2() { return cExitPointParserRuleCall_2; }
	}

	public class TransitionPointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TransitionPoint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cHandlerAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cHandlerHandlerKeyword_0_0 = (Keyword)cHandlerAssignment_0.eContents().get(0);
		private final Keyword cTransitionPointKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//TransitionPoint:
		//	handler?="handler"? "TransitionPoint" name=ID;
		public ParserRule getRule() { return rule; }

		//handler?="handler"? "TransitionPoint" name=ID
		public Group getGroup() { return cGroup; }

		//handler?="handler"?
		public Assignment getHandlerAssignment_0() { return cHandlerAssignment_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.65/@alternatives/@elements.0/@terminal'
		public Keyword getHandlerHandlerKeyword_0_0() { return cHandlerHandlerKeyword_0_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.65/@alternatives/@elements.1'
		public Keyword getTransitionPointKeyword_1() { return cTransitionPointKeyword_1; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.65/@alternatives/@elements.2'
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.65/@alternatives/@elements.2/@terminal'
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
	}

	public class EntryPointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EntryPoint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEntryPointKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#XtextFragmentProvider_org.eclipse.etrice.core.Room/EntryPoint'
		public ParserRule getRule() { return rule; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.66/@alternatives'
		public Group getGroup() { return cGroup; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.66/@alternatives/@elements.0'
		public Keyword getEntryPointKeyword_0() { return cEntryPointKeyword_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.66/@alternatives/@elements.1'
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.66/@alternatives/@elements.1/@terminal'
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class ExitPointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ExitPoint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExitPointKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#XtextFragmentProvider_org.eclipse.etrice.core.Room/ExitPoint'
		public ParserRule getRule() { return rule; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.67/@alternatives'
		public Group getGroup() { return cGroup; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.67/@alternatives/@elements.0'
		public Keyword getExitPointKeyword_0() { return cExitPointKeyword_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.67/@alternatives/@elements.1'
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.67/@alternatives/@elements.1/@terminal'
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class ChoicePointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ChoicePoint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChoicePointKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cDocuAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDocuDocumentationParserRuleCall_2_0 = (RuleCall)cDocuAssignment_2.eContents().get(0);
		
		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#XtextFragmentProvider_org.eclipse.etrice.core.Room/ChoicePoint'
		public ParserRule getRule() { return rule; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.68/@alternatives'
		public Group getGroup() { return cGroup; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.68/@alternatives/@elements.0'
		public Keyword getChoicePointKeyword_0() { return cChoicePointKeyword_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.68/@alternatives/@elements.1'
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.68/@alternatives/@elements.1/@terminal'
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.68/@alternatives/@elements.2'
		public Assignment getDocuAssignment_2() { return cDocuAssignment_2; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.68/@alternatives/@elements.2/@terminal'
		public RuleCall getDocuDocumentationParserRuleCall_2_0() { return cDocuDocumentationParserRuleCall_2_0; }
	}

	public class TransitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Transition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cInitialTransitionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cNonInitialTransitionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#XtextFragmentProvider_org.eclipse.etrice.core.Room/Transition'
		public ParserRule getRule() { return rule; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.69/@alternatives'
		public Alternatives getAlternatives() { return cAlternatives; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.69/@alternatives/@elements.0'
		public RuleCall getInitialTransitionParserRuleCall_0() { return cInitialTransitionParserRuleCall_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.69/@alternatives/@elements.1'
		public RuleCall getNonInitialTransitionParserRuleCall_1() { return cNonInitialTransitionParserRuleCall_1; }
	}

	public class NonInitialTransitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NonInitialTransition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTransitionChainStartTransitionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cContinuationTransitionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cCPBranchTransitionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#XtextFragmentProvider_org.eclipse.etrice.core.Room/NonInitialTransition'
		public ParserRule getRule() { return rule; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.70/@alternatives'
		public Alternatives getAlternatives() { return cAlternatives; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.70/@alternatives/@elements.0'
		public RuleCall getTransitionChainStartTransitionParserRuleCall_0() { return cTransitionChainStartTransitionParserRuleCall_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.70/@alternatives/@elements.1'
		public RuleCall getContinuationTransitionParserRuleCall_1() { return cContinuationTransitionParserRuleCall_1; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.70/@alternatives/@elements.2'
		public RuleCall getCPBranchTransitionParserRuleCall_2() { return cCPBranchTransitionParserRuleCall_2; }
	}

	public class TransitionChainStartTransitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TransitionChainStartTransition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTriggeredTransitionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cGuardedTransitionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#XtextFragmentProvider_org.eclipse.etrice.core.Room/TransitionChainStartTransition'
		public ParserRule getRule() { return rule; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.71/@alternatives'
		public Alternatives getAlternatives() { return cAlternatives; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.71/@alternatives/@elements.0'
		public RuleCall getTriggeredTransitionParserRuleCall_0() { return cTriggeredTransitionParserRuleCall_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.71/@alternatives/@elements.1'
		public RuleCall getGuardedTransitionParserRuleCall_1() { return cGuardedTransitionParserRuleCall_1; }
	}

	public class InitialTransitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InitialTransition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTransitionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cInitialKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cToAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cToTransitionTerminalParserRuleCall_5_0 = (RuleCall)cToAssignment_5.eContents().get(0);
		private final Assignment cDocuAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDocuDocumentationParserRuleCall_6_0 = (RuleCall)cDocuAssignment_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cActionKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cActionAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cActionDetailCodeParserRuleCall_8_1_0 = (RuleCall)cActionAssignment_8_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#XtextFragmentProvider_org.eclipse.etrice.core.Room/InitialTransition'
		public ParserRule getRule() { return rule; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.72/@alternatives'
		public Group getGroup() { return cGroup; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.72/@alternatives/@elements.0'
		public Keyword getTransitionKeyword_0() { return cTransitionKeyword_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.72/@alternatives/@elements.1'
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.72/@alternatives/@elements.1/@terminal'
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.72/@alternatives/@elements.2'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.72/@alternatives/@elements.3'
		public Keyword getInitialKeyword_3() { return cInitialKeyword_3; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.72/@alternatives/@elements.4'
		public Keyword getHyphenMinusGreaterThanSignKeyword_4() { return cHyphenMinusGreaterThanSignKeyword_4; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.72/@alternatives/@elements.5'
		public Assignment getToAssignment_5() { return cToAssignment_5; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.72/@alternatives/@elements.5/@terminal'
		public RuleCall getToTransitionTerminalParserRuleCall_5_0() { return cToTransitionTerminalParserRuleCall_5_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.72/@alternatives/@elements.6'
		public Assignment getDocuAssignment_6() { return cDocuAssignment_6; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.72/@alternatives/@elements.6/@terminal'
		public RuleCall getDocuDocumentationParserRuleCall_6_0() { return cDocuDocumentationParserRuleCall_6_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.72/@alternatives/@elements.7'
		public Keyword getLeftCurlyBracketKeyword_7() { return cLeftCurlyBracketKeyword_7; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.72/@alternatives/@elements.8'
		public Group getGroup_8() { return cGroup_8; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.72/@alternatives/@elements.8/@elements.0'
		public Keyword getActionKeyword_8_0() { return cActionKeyword_8_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.72/@alternatives/@elements.8/@elements.1'
		public Assignment getActionAssignment_8_1() { return cActionAssignment_8_1; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.72/@alternatives/@elements.8/@elements.1/@terminal'
		public RuleCall getActionDetailCodeParserRuleCall_8_1_0() { return cActionDetailCodeParserRuleCall_8_1_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.72/@alternatives/@elements.9'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}

	public class ContinuationTransitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ContinuationTransition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTransitionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cFromAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cFromTransitionTerminalParserRuleCall_3_0 = (RuleCall)cFromAssignment_3.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cToAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cToTransitionTerminalParserRuleCall_5_0 = (RuleCall)cToAssignment_5.eContents().get(0);
		private final Assignment cDocuAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDocuDocumentationParserRuleCall_6_0 = (RuleCall)cDocuAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cLeftCurlyBracketKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Group cGroup_7_1 = (Group)cGroup_7.eContents().get(1);
		private final Keyword cActionKeyword_7_1_0 = (Keyword)cGroup_7_1.eContents().get(0);
		private final Assignment cActionAssignment_7_1_1 = (Assignment)cGroup_7_1.eContents().get(1);
		private final RuleCall cActionDetailCodeParserRuleCall_7_1_1_0 = (RuleCall)cActionAssignment_7_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_2 = (Keyword)cGroup_7.eContents().get(2);
		
		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#XtextFragmentProvider_org.eclipse.etrice.core.Room/ContinuationTransition'
		public ParserRule getRule() { return rule; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.73/@alternatives'
		public Group getGroup() { return cGroup; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.73/@alternatives/@elements.0'
		public Keyword getTransitionKeyword_0() { return cTransitionKeyword_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.73/@alternatives/@elements.1'
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.73/@alternatives/@elements.1/@terminal'
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.73/@alternatives/@elements.2'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.73/@alternatives/@elements.3'
		public Assignment getFromAssignment_3() { return cFromAssignment_3; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.73/@alternatives/@elements.3/@terminal'
		public RuleCall getFromTransitionTerminalParserRuleCall_3_0() { return cFromTransitionTerminalParserRuleCall_3_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.73/@alternatives/@elements.4'
		public Keyword getHyphenMinusGreaterThanSignKeyword_4() { return cHyphenMinusGreaterThanSignKeyword_4; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.73/@alternatives/@elements.5'
		public Assignment getToAssignment_5() { return cToAssignment_5; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.73/@alternatives/@elements.5/@terminal'
		public RuleCall getToTransitionTerminalParserRuleCall_5_0() { return cToTransitionTerminalParserRuleCall_5_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.73/@alternatives/@elements.6'
		public Assignment getDocuAssignment_6() { return cDocuAssignment_6; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.73/@alternatives/@elements.6/@terminal'
		public RuleCall getDocuDocumentationParserRuleCall_6_0() { return cDocuDocumentationParserRuleCall_6_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.73/@alternatives/@elements.7'
		public Group getGroup_7() { return cGroup_7; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.73/@alternatives/@elements.7/@elements.0'
		public Keyword getLeftCurlyBracketKeyword_7_0() { return cLeftCurlyBracketKeyword_7_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.73/@alternatives/@elements.7/@elements.1'
		public Group getGroup_7_1() { return cGroup_7_1; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.73/@alternatives/@elements.7/@elements.1/@elements.0'
		public Keyword getActionKeyword_7_1_0() { return cActionKeyword_7_1_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.73/@alternatives/@elements.7/@elements.1/@elements.1'
		public Assignment getActionAssignment_7_1_1() { return cActionAssignment_7_1_1; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.73/@alternatives/@elements.7/@elements.1/@elements.1/@terminal'
		public RuleCall getActionDetailCodeParserRuleCall_7_1_1_0() { return cActionDetailCodeParserRuleCall_7_1_1_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.73/@alternatives/@elements.7/@elements.2'
		public Keyword getRightCurlyBracketKeyword_7_2() { return cRightCurlyBracketKeyword_7_2; }
	}

	public class TriggeredTransitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TriggeredTransition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTransitionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cFromAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cFromTransitionTerminalParserRuleCall_3_0 = (RuleCall)cFromAssignment_3.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cToAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cToTransitionTerminalParserRuleCall_5_0 = (RuleCall)cToAssignment_5.eContents().get(0);
		private final Assignment cDocuAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDocuDocumentationParserRuleCall_6_0 = (RuleCall)cDocuAssignment_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cTriggersKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cLeftCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cTriggersAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cTriggersTriggerParserRuleCall_10_0 = (RuleCall)cTriggersAssignment_10.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cOrKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cTriggersAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cTriggersTriggerParserRuleCall_11_1_0 = (RuleCall)cTriggersAssignment_11_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cActionKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Assignment cActionAssignment_13_1 = (Assignment)cGroup_13.eContents().get(1);
		private final RuleCall cActionDetailCodeParserRuleCall_13_1_0 = (RuleCall)cActionAssignment_13_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		
		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#XtextFragmentProvider_org.eclipse.etrice.core.Room/TriggeredTransition'
		public ParserRule getRule() { return rule; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.74/@alternatives'
		public Group getGroup() { return cGroup; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.74/@alternatives/@elements.0'
		public Keyword getTransitionKeyword_0() { return cTransitionKeyword_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.74/@alternatives/@elements.1'
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.74/@alternatives/@elements.1/@terminal'
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.74/@alternatives/@elements.2'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.74/@alternatives/@elements.3'
		public Assignment getFromAssignment_3() { return cFromAssignment_3; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.74/@alternatives/@elements.3/@terminal'
		public RuleCall getFromTransitionTerminalParserRuleCall_3_0() { return cFromTransitionTerminalParserRuleCall_3_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.74/@alternatives/@elements.4'
		public Keyword getHyphenMinusGreaterThanSignKeyword_4() { return cHyphenMinusGreaterThanSignKeyword_4; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.74/@alternatives/@elements.5'
		public Assignment getToAssignment_5() { return cToAssignment_5; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.74/@alternatives/@elements.5/@terminal'
		public RuleCall getToTransitionTerminalParserRuleCall_5_0() { return cToTransitionTerminalParserRuleCall_5_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.74/@alternatives/@elements.6'
		public Assignment getDocuAssignment_6() { return cDocuAssignment_6; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.74/@alternatives/@elements.6/@terminal'
		public RuleCall getDocuDocumentationParserRuleCall_6_0() { return cDocuDocumentationParserRuleCall_6_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.74/@alternatives/@elements.7'
		public Keyword getLeftCurlyBracketKeyword_7() { return cLeftCurlyBracketKeyword_7; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.74/@alternatives/@elements.8'
		public Keyword getTriggersKeyword_8() { return cTriggersKeyword_8; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.74/@alternatives/@elements.9'
		public Keyword getLeftCurlyBracketKeyword_9() { return cLeftCurlyBracketKeyword_9; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.74/@alternatives/@elements.10'
		public Assignment getTriggersAssignment_10() { return cTriggersAssignment_10; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.74/@alternatives/@elements.10/@terminal'
		public RuleCall getTriggersTriggerParserRuleCall_10_0() { return cTriggersTriggerParserRuleCall_10_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.74/@alternatives/@elements.11'
		public Group getGroup_11() { return cGroup_11; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.74/@alternatives/@elements.11/@elements.0'
		public Keyword getOrKeyword_11_0() { return cOrKeyword_11_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.74/@alternatives/@elements.11/@elements.1'
		public Assignment getTriggersAssignment_11_1() { return cTriggersAssignment_11_1; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.74/@alternatives/@elements.11/@elements.1/@terminal'
		public RuleCall getTriggersTriggerParserRuleCall_11_1_0() { return cTriggersTriggerParserRuleCall_11_1_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.74/@alternatives/@elements.12'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.74/@alternatives/@elements.13'
		public Group getGroup_13() { return cGroup_13; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.74/@alternatives/@elements.13/@elements.0'
		public Keyword getActionKeyword_13_0() { return cActionKeyword_13_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.74/@alternatives/@elements.13/@elements.1'
		public Assignment getActionAssignment_13_1() { return cActionAssignment_13_1; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.74/@alternatives/@elements.13/@elements.1/@terminal'
		public RuleCall getActionDetailCodeParserRuleCall_13_1_0() { return cActionDetailCodeParserRuleCall_13_1_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.74/@alternatives/@elements.14'
		public Keyword getRightCurlyBracketKeyword_14() { return cRightCurlyBracketKeyword_14; }
	}

	public class GuardedTransitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GuardedTransition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTransitionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cFromAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cFromTransitionTerminalParserRuleCall_3_0 = (RuleCall)cFromAssignment_3.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cToAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cToTransitionTerminalParserRuleCall_5_0 = (RuleCall)cToAssignment_5.eContents().get(0);
		private final Assignment cDocuAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDocuDocumentationParserRuleCall_6_0 = (RuleCall)cDocuAssignment_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cGuardKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cGuardAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cGuardDetailCodeParserRuleCall_9_0 = (RuleCall)cGuardAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cActionKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cActionAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cActionDetailCodeParserRuleCall_10_1_0 = (RuleCall)cActionAssignment_10_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#XtextFragmentProvider_org.eclipse.etrice.core.Room/GuardedTransition'
		public ParserRule getRule() { return rule; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.75/@alternatives'
		public Group getGroup() { return cGroup; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.75/@alternatives/@elements.0'
		public Keyword getTransitionKeyword_0() { return cTransitionKeyword_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.75/@alternatives/@elements.1'
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.75/@alternatives/@elements.1/@terminal'
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.75/@alternatives/@elements.2'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.75/@alternatives/@elements.3'
		public Assignment getFromAssignment_3() { return cFromAssignment_3; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.75/@alternatives/@elements.3/@terminal'
		public RuleCall getFromTransitionTerminalParserRuleCall_3_0() { return cFromTransitionTerminalParserRuleCall_3_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.75/@alternatives/@elements.4'
		public Keyword getHyphenMinusGreaterThanSignKeyword_4() { return cHyphenMinusGreaterThanSignKeyword_4; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.75/@alternatives/@elements.5'
		public Assignment getToAssignment_5() { return cToAssignment_5; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.75/@alternatives/@elements.5/@terminal'
		public RuleCall getToTransitionTerminalParserRuleCall_5_0() { return cToTransitionTerminalParserRuleCall_5_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.75/@alternatives/@elements.6'
		public Assignment getDocuAssignment_6() { return cDocuAssignment_6; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.75/@alternatives/@elements.6/@terminal'
		public RuleCall getDocuDocumentationParserRuleCall_6_0() { return cDocuDocumentationParserRuleCall_6_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.75/@alternatives/@elements.7'
		public Keyword getLeftCurlyBracketKeyword_7() { return cLeftCurlyBracketKeyword_7; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.75/@alternatives/@elements.8'
		public Keyword getGuardKeyword_8() { return cGuardKeyword_8; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.75/@alternatives/@elements.9'
		public Assignment getGuardAssignment_9() { return cGuardAssignment_9; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.75/@alternatives/@elements.9/@terminal'
		public RuleCall getGuardDetailCodeParserRuleCall_9_0() { return cGuardDetailCodeParserRuleCall_9_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.75/@alternatives/@elements.10'
		public Group getGroup_10() { return cGroup_10; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.75/@alternatives/@elements.10/@elements.0'
		public Keyword getActionKeyword_10_0() { return cActionKeyword_10_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.75/@alternatives/@elements.10/@elements.1'
		public Assignment getActionAssignment_10_1() { return cActionAssignment_10_1; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.75/@alternatives/@elements.10/@elements.1/@terminal'
		public RuleCall getActionDetailCodeParserRuleCall_10_1_0() { return cActionDetailCodeParserRuleCall_10_1_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.75/@alternatives/@elements.11'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}

	public class CPBranchTransitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CPBranchTransition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTransitionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cFromAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cFromTransitionTerminalParserRuleCall_3_0 = (RuleCall)cFromAssignment_3.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cToAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cToTransitionTerminalParserRuleCall_5_0 = (RuleCall)cToAssignment_5.eContents().get(0);
		private final Assignment cDocuAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDocuDocumentationParserRuleCall_6_0 = (RuleCall)cDocuAssignment_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cCondKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cConditionAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cConditionDetailCodeParserRuleCall_9_0 = (RuleCall)cConditionAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cActionKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cActionAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cActionDetailCodeParserRuleCall_10_1_0 = (RuleCall)cActionAssignment_10_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#XtextFragmentProvider_org.eclipse.etrice.core.Room/CPBranchTransition'
		public ParserRule getRule() { return rule; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.76/@alternatives'
		public Group getGroup() { return cGroup; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.76/@alternatives/@elements.0'
		public Keyword getTransitionKeyword_0() { return cTransitionKeyword_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.76/@alternatives/@elements.1'
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.76/@alternatives/@elements.1/@terminal'
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.76/@alternatives/@elements.2'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.76/@alternatives/@elements.3'
		public Assignment getFromAssignment_3() { return cFromAssignment_3; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.76/@alternatives/@elements.3/@terminal'
		public RuleCall getFromTransitionTerminalParserRuleCall_3_0() { return cFromTransitionTerminalParserRuleCall_3_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.76/@alternatives/@elements.4'
		public Keyword getHyphenMinusGreaterThanSignKeyword_4() { return cHyphenMinusGreaterThanSignKeyword_4; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.76/@alternatives/@elements.5'
		public Assignment getToAssignment_5() { return cToAssignment_5; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.76/@alternatives/@elements.5/@terminal'
		public RuleCall getToTransitionTerminalParserRuleCall_5_0() { return cToTransitionTerminalParserRuleCall_5_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.76/@alternatives/@elements.6'
		public Assignment getDocuAssignment_6() { return cDocuAssignment_6; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.76/@alternatives/@elements.6/@terminal'
		public RuleCall getDocuDocumentationParserRuleCall_6_0() { return cDocuDocumentationParserRuleCall_6_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.76/@alternatives/@elements.7'
		public Keyword getLeftCurlyBracketKeyword_7() { return cLeftCurlyBracketKeyword_7; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.76/@alternatives/@elements.8'
		public Keyword getCondKeyword_8() { return cCondKeyword_8; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.76/@alternatives/@elements.9'
		public Assignment getConditionAssignment_9() { return cConditionAssignment_9; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.76/@alternatives/@elements.9/@terminal'
		public RuleCall getConditionDetailCodeParserRuleCall_9_0() { return cConditionDetailCodeParserRuleCall_9_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.76/@alternatives/@elements.10'
		public Group getGroup_10() { return cGroup_10; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.76/@alternatives/@elements.10/@elements.0'
		public Keyword getActionKeyword_10_0() { return cActionKeyword_10_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.76/@alternatives/@elements.10/@elements.1'
		public Assignment getActionAssignment_10_1() { return cActionAssignment_10_1; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.76/@alternatives/@elements.10/@elements.1/@terminal'
		public RuleCall getActionDetailCodeParserRuleCall_10_1_0() { return cActionDetailCodeParserRuleCall_10_1_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/org/eclipse/etrice/core/Room.xtext#/0/@rules.76/@alternatives/@elements.11'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}

	public class RefinedTransitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RefinedTransition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRefinedTransitionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTargetAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cTargetTransitionCrossReference_1_0 = (CrossReference)cTargetAssignment_1.eContents().get(0);
		private final RuleCall cTargetTransitionFQNParserRuleCall_1_0_1 = (RuleCall)cTargetTransitionCrossReference_1_0.eContents().get(1);
		private final Assignment cDocuAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDocuDocumentationParserRuleCall_2_0 = (RuleCall)cDocuAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cActionKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cActionAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cActionDetailCodeParserRuleCall_5_0 = (RuleCall)cActionAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//// by validation RefinedTransition can only be contained in the top level state graph
		//RefinedTransition:
		//	"RefinedTransition" target=[Transition|FQN] docu=Documentation? "{" "action" action=DetailCode "}";
		public ParserRule getRule() { return rule; }

		//"RefinedTransition" target=[Transition|FQN] docu=Documentation? "{" "action" action=DetailCode "}"
		public Group getGroup() { return cGroup; }

		//"RefinedTransition"
		public Keyword getRefinedTransitionKeyword_0() { return cRefinedTransitionKeyword_0; }

		//target=[Transition|FQN]
		public Assignment getTargetAssignment_1() { return cTargetAssignment_1; }

		//[Transition|FQN]
		public CrossReference getTargetTransitionCrossReference_1_0() { return cTargetTransitionCrossReference_1_0; }

		//FQN
		public RuleCall getTargetTransitionFQNParserRuleCall_1_0_1() { return cTargetTransitionFQNParserRuleCall_1_0_1; }

		//docu=Documentation?
		public Assignment getDocuAssignment_2() { return cDocuAssignment_2; }

		//Documentation
		public RuleCall getDocuDocumentationParserRuleCall_2_0() { return cDocuDocumentationParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//"action"
		public Keyword getActionKeyword_4() { return cActionKeyword_4; }

		//action=DetailCode
		public Assignment getActionAssignment_5() { return cActionAssignment_5; }

		//DetailCode
		public RuleCall getActionDetailCodeParserRuleCall_5_0() { return cActionDetailCodeParserRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class TransitionTerminalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TransitionTerminal");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cStateTerminalParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTrPointTerminalParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cSubStateTrPointTerminalParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cChoicepointTerminalParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//TransitionTerminal:
		//	StateTerminal | TrPointTerminal | SubStateTrPointTerminal | ChoicepointTerminal;
		public ParserRule getRule() { return rule; }

		//StateTerminal | TrPointTerminal | SubStateTrPointTerminal | ChoicepointTerminal
		public Alternatives getAlternatives() { return cAlternatives; }

		//StateTerminal
		public RuleCall getStateTerminalParserRuleCall_0() { return cStateTerminalParserRuleCall_0; }

		//TrPointTerminal
		public RuleCall getTrPointTerminalParserRuleCall_1() { return cTrPointTerminalParserRuleCall_1; }

		//SubStateTrPointTerminal
		public RuleCall getSubStateTrPointTerminalParserRuleCall_2() { return cSubStateTrPointTerminalParserRuleCall_2; }

		//ChoicepointTerminal
		public RuleCall getChoicepointTerminalParserRuleCall_3() { return cChoicepointTerminalParserRuleCall_3; }
	}

	public class StateTerminalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StateTerminal");
		private final Assignment cStateAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cStateStateCrossReference_0 = (CrossReference)cStateAssignment.eContents().get(0);
		private final RuleCall cStateStateIDTerminalRuleCall_0_1 = (RuleCall)cStateStateCrossReference_0.eContents().get(1);
		
		//StateTerminal:
		//	state=[State];
		public ParserRule getRule() { return rule; }

		//state=[State]
		public Assignment getStateAssignment() { return cStateAssignment; }

		//[State]
		public CrossReference getStateStateCrossReference_0() { return cStateStateCrossReference_0; }

		//ID
		public RuleCall getStateStateIDTerminalRuleCall_0_1() { return cStateStateIDTerminalRuleCall_0_1; }
	}

	public class TrPointTerminalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TrPointTerminal");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTrPointAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cTrPointTrPointCrossReference_1_0 = (CrossReference)cTrPointAssignment_1.eContents().get(0);
		private final RuleCall cTrPointTrPointIDTerminalRuleCall_1_0_1 = (RuleCall)cTrPointTrPointCrossReference_1_0.eContents().get(1);
		
		//TrPointTerminal:
		//	"my" trPoint=[TrPoint];
		public ParserRule getRule() { return rule; }

		//"my" trPoint=[TrPoint]
		public Group getGroup() { return cGroup; }

		//"my"
		public Keyword getMyKeyword_0() { return cMyKeyword_0; }

		//trPoint=[TrPoint]
		public Assignment getTrPointAssignment_1() { return cTrPointAssignment_1; }

		//[TrPoint]
		public CrossReference getTrPointTrPointCrossReference_1_0() { return cTrPointTrPointCrossReference_1_0; }

		//ID
		public RuleCall getTrPointTrPointIDTerminalRuleCall_1_0_1() { return cTrPointTrPointIDTerminalRuleCall_1_0_1; }
	}

	public class SubStateTrPointTerminalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SubStateTrPointTerminal");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTrPointAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cTrPointTrPointCrossReference_0_0 = (CrossReference)cTrPointAssignment_0.eContents().get(0);
		private final RuleCall cTrPointTrPointIDTerminalRuleCall_0_0_1 = (RuleCall)cTrPointTrPointCrossReference_0_0.eContents().get(1);
		private final Keyword cOfKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cStateAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cStateStateCrossReference_2_0 = (CrossReference)cStateAssignment_2.eContents().get(0);
		private final RuleCall cStateStateIDTerminalRuleCall_2_0_1 = (RuleCall)cStateStateCrossReference_2_0.eContents().get(1);
		
		//SubStateTrPointTerminal:
		//	trPoint=[TrPoint] "of" state=[State];
		public ParserRule getRule() { return rule; }

		//trPoint=[TrPoint] "of" state=[State]
		public Group getGroup() { return cGroup; }

		//trPoint=[TrPoint]
		public Assignment getTrPointAssignment_0() { return cTrPointAssignment_0; }

		//[TrPoint]
		public CrossReference getTrPointTrPointCrossReference_0_0() { return cTrPointTrPointCrossReference_0_0; }

		//ID
		public RuleCall getTrPointTrPointIDTerminalRuleCall_0_0_1() { return cTrPointTrPointIDTerminalRuleCall_0_0_1; }

		//"of"
		public Keyword getOfKeyword_1() { return cOfKeyword_1; }

		//state=[State]
		public Assignment getStateAssignment_2() { return cStateAssignment_2; }

		//[State]
		public CrossReference getStateStateCrossReference_2_0() { return cStateStateCrossReference_2_0; }

		//ID
		public RuleCall getStateStateIDTerminalRuleCall_2_0_1() { return cStateStateIDTerminalRuleCall_2_0_1; }
	}

	public class ChoicepointTerminalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ChoicepointTerminal");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCpKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cCpAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cCpChoicePointCrossReference_1_0 = (CrossReference)cCpAssignment_1.eContents().get(0);
		private final RuleCall cCpChoicePointIDTerminalRuleCall_1_0_1 = (RuleCall)cCpChoicePointCrossReference_1_0.eContents().get(1);
		
		//ChoicepointTerminal:
		//	"cp" cp=[ChoicePoint];
		public ParserRule getRule() { return rule; }

		//"cp" cp=[ChoicePoint]
		public Group getGroup() { return cGroup; }

		//"cp"
		public Keyword getCpKeyword_0() { return cCpKeyword_0; }

		//cp=[ChoicePoint]
		public Assignment getCpAssignment_1() { return cCpAssignment_1; }

		//[ChoicePoint]
		public CrossReference getCpChoicePointCrossReference_1_0() { return cCpChoicePointCrossReference_1_0; }

		//ID
		public RuleCall getCpChoicePointIDTerminalRuleCall_1_0_1() { return cCpChoicePointIDTerminalRuleCall_1_0_1; }
	}

	public class TriggerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Trigger");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLessThanSignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cMsgFromIfPairsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMsgFromIfPairsMessageFromIfParserRuleCall_1_0 = (RuleCall)cMsgFromIfPairsAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cVerticalLineKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cMsgFromIfPairsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cMsgFromIfPairsMessageFromIfParserRuleCall_2_1_0 = (RuleCall)cMsgFromIfPairsAssignment_2_1.eContents().get(0);
		private final Assignment cGuardAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cGuardGuardParserRuleCall_3_0 = (RuleCall)cGuardAssignment_3.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Trigger:
		//	"<" msgFromIfPairs+=MessageFromIf ("|" msgFromIfPairs+=MessageFromIf)* guard=Guard? ">";
		public ParserRule getRule() { return rule; }

		//"<" msgFromIfPairs+=MessageFromIf ("|" msgFromIfPairs+=MessageFromIf)* guard=Guard? ">"
		public Group getGroup() { return cGroup; }

		//"<"
		public Keyword getLessThanSignKeyword_0() { return cLessThanSignKeyword_0; }

		//msgFromIfPairs+=MessageFromIf
		public Assignment getMsgFromIfPairsAssignment_1() { return cMsgFromIfPairsAssignment_1; }

		//MessageFromIf
		public RuleCall getMsgFromIfPairsMessageFromIfParserRuleCall_1_0() { return cMsgFromIfPairsMessageFromIfParserRuleCall_1_0; }

		//("|" msgFromIfPairs+=MessageFromIf)*
		public Group getGroup_2() { return cGroup_2; }

		//"|"
		public Keyword getVerticalLineKeyword_2_0() { return cVerticalLineKeyword_2_0; }

		//msgFromIfPairs+=MessageFromIf
		public Assignment getMsgFromIfPairsAssignment_2_1() { return cMsgFromIfPairsAssignment_2_1; }

		//MessageFromIf
		public RuleCall getMsgFromIfPairsMessageFromIfParserRuleCall_2_1_0() { return cMsgFromIfPairsMessageFromIfParserRuleCall_2_1_0; }

		//guard=Guard?
		public Assignment getGuardAssignment_3() { return cGuardAssignment_3; }

		//Guard
		public RuleCall getGuardGuardParserRuleCall_3_0() { return cGuardGuardParserRuleCall_3_0; }

		//">"
		public Keyword getGreaterThanSignKeyword_4() { return cGreaterThanSignKeyword_4; }
	}

	public class MessageFromIfElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MessageFromIf");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cMessageAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cMessageMessageCrossReference_0_0 = (CrossReference)cMessageAssignment_0.eContents().get(0);
		private final RuleCall cMessageMessageIDTerminalRuleCall_0_0_1 = (RuleCall)cMessageMessageCrossReference_0_0.eContents().get(1);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cFromAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cFromInterfaceItemCrossReference_2_0 = (CrossReference)cFromAssignment_2.eContents().get(0);
		private final RuleCall cFromInterfaceItemIDTerminalRuleCall_2_0_1 = (RuleCall)cFromInterfaceItemCrossReference_2_0.eContents().get(1);
		
		//MessageFromIf:
		//	message=[Message] ":" from=[InterfaceItem];
		public ParserRule getRule() { return rule; }

		//message=[Message] ":" from=[InterfaceItem]
		public Group getGroup() { return cGroup; }

		//message=[Message]
		public Assignment getMessageAssignment_0() { return cMessageAssignment_0; }

		//[Message]
		public CrossReference getMessageMessageCrossReference_0_0() { return cMessageMessageCrossReference_0_0; }

		//ID
		public RuleCall getMessageMessageIDTerminalRuleCall_0_0_1() { return cMessageMessageIDTerminalRuleCall_0_0_1; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//from=[InterfaceItem]
		public Assignment getFromAssignment_2() { return cFromAssignment_2; }

		//[InterfaceItem]
		public CrossReference getFromInterfaceItemCrossReference_2_0() { return cFromInterfaceItemCrossReference_2_0; }

		//ID
		public RuleCall getFromInterfaceItemIDTerminalRuleCall_2_0_1() { return cFromInterfaceItemIDTerminalRuleCall_2_0_1; }
	}

	public class GuardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Guard");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGuardKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cGuardAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cGuardDetailCodeParserRuleCall_1_0 = (RuleCall)cGuardAssignment_1.eContents().get(0);
		
		//Guard:
		//	"guard" guard=DetailCode;
		public ParserRule getRule() { return rule; }

		//"guard" guard=DetailCode
		public Group getGroup() { return cGroup; }

		//"guard"
		public Keyword getGuardKeyword_0() { return cGuardKeyword_0; }

		//guard=DetailCode
		public Assignment getGuardAssignment_1() { return cGuardAssignment_1; }

		//DetailCode
		public RuleCall getGuardDetailCodeParserRuleCall_1_0() { return cGuardDetailCodeParserRuleCall_1_0; }
	}

	public class ImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Import");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Assignment cImportedNamespaceAssignment_1_0_0 = (Assignment)cGroup_1_0.eContents().get(0);
		private final RuleCall cImportedNamespaceImportedFQNParserRuleCall_1_0_0_0 = (RuleCall)cImportedNamespaceAssignment_1_0_0.eContents().get(0);
		private final Keyword cFromKeyword_1_0_1 = (Keyword)cGroup_1_0.eContents().get(1);
		private final Keyword cModelKeyword_1_1 = (Keyword)cAlternatives_1.eContents().get(1);
		private final Assignment cImportURIAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cImportURISTRINGTerminalRuleCall_2_0 = (RuleCall)cImportURIAssignment_2.eContents().get(0);
		
		//// **************************************************************
		//// general
		//// HOWTO: use a combination of URI global scopes and namespace aware local scope provider
		//// this is configured in the work flow by
		////			fragment = scoping.ImportURIScopingFragment {}
		//// and by overriding configureIScopeProviderDelegate in the runtime module with 
		////			ImportedNamespaceAwareLocalScopeProvider
		//// also configure in the RuntimeModule
		////	public Class<? extends ImportUriResolver> bindImportUriResolver() {
		////		return PlatformRelativeUriResolver.class;
		////	}
		//// and in the UiRuntimeModule
		////	public Class<? extends org.eclipse.xtext.ui.editor.IURIEditorOpener> bindIURIEditorOpener() {
		////		return GlobalNonPlatformURIEditorOpener.class;
		////	}
		////	public Class<? extends IHyperlinkHelper> bindIHyperlinkHelper() {
		////		return ImportAwareHyperlinkHelper.class;
		////	}
		//// the attribute 'importedNamespace' is picked up by the ImportedNamespaceAwareLocalScopeProvider
		//// the attribute 'importURI' is picked up by the ImportUriGlobalScopeProvider
		//Import:
		//	"import" (importedNamespace=ImportedFQN "from" | "model") importURI=STRING;
		public ParserRule getRule() { return rule; }

		//"import" (importedNamespace=ImportedFQN "from" | "model") importURI=STRING
		public Group getGroup() { return cGroup; }

		//"import"
		public Keyword getImportKeyword_0() { return cImportKeyword_0; }

		//importedNamespace=ImportedFQN "from" | "model"
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//importedNamespace=ImportedFQN "from"
		public Group getGroup_1_0() { return cGroup_1_0; }

		//importedNamespace=ImportedFQN
		public Assignment getImportedNamespaceAssignment_1_0_0() { return cImportedNamespaceAssignment_1_0_0; }

		//ImportedFQN
		public RuleCall getImportedNamespaceImportedFQNParserRuleCall_1_0_0_0() { return cImportedNamespaceImportedFQNParserRuleCall_1_0_0_0; }

		//"from"
		public Keyword getFromKeyword_1_0_1() { return cFromKeyword_1_0_1; }

		//"model"
		public Keyword getModelKeyword_1_1() { return cModelKeyword_1_1; }

		//importURI=STRING
		public Assignment getImportURIAssignment_2() { return cImportURIAssignment_2; }

		//STRING
		public RuleCall getImportURISTRINGTerminalRuleCall_2_0() { return cImportURISTRINGTerminalRuleCall_2_0; }
	}

	public class ImportedFQNElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ImportedFQN");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cFQNParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFullStopAsteriskKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//ImportedFQN:
		//	FQN ".*"?;
		public ParserRule getRule() { return rule; }

		//FQN ".*"?
		public Group getGroup() { return cGroup; }

		//FQN
		public RuleCall getFQNParserRuleCall_0() { return cFQNParserRuleCall_0; }

		//".*"?
		public Keyword getFullStopAsteriskKeyword_1() { return cFullStopAsteriskKeyword_1; }
	}

	public class MULTIPLICITYElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MULTIPLICITY");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Keyword cAsteriskKeyword_1_0 = (Keyword)cAlternatives_1.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1_1 = (RuleCall)cAlternatives_1.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//// the following is a data type rule (accompanied by a value converter) and must not be a terminal rule
		//// (because then the lexer already would find this in places where it is not expected, e.g. in an Attribute)
		//MULTIPLICITY returns ecore::EInt:
		//	"[" ("*" | INT) "]";
		public ParserRule getRule() { return rule; }

		//"[" ("*" | INT) "]"
		public Group getGroup() { return cGroup; }

		//"["
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }

		//"*" | INT
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//"*"
		public Keyword getAsteriskKeyword_1_0() { return cAsteriskKeyword_1_0; }

		//INT
		public RuleCall getINTTerminalRuleCall_1_1() { return cINTTerminalRuleCall_1_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_2() { return cRightSquareBracketKeyword_2; }
	}

	public class AnnotationTargetTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AnnotationTargetType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cDataClassKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cActorClassKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cActorBehaviorKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cProtocolClassKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cCompoundProtocolClassKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cSubSystemClassKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cLogicalSystemKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		
		//AnnotationTargetType:
		//	"DataClass" | "ActorClass" | "ActorBehavior" | "ProtocolClass" | "CompoundProtocolClass" | "SubSystemClass" |
		//	"LogicalSystem";
		public ParserRule getRule() { return rule; }

		//"DataClass" | "ActorClass" | "ActorBehavior" | "ProtocolClass" | "CompoundProtocolClass" | "SubSystemClass" |
		//"LogicalSystem"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"DataClass"
		public Keyword getDataClassKeyword_0() { return cDataClassKeyword_0; }

		//"ActorClass"
		public Keyword getActorClassKeyword_1() { return cActorClassKeyword_1; }

		//"ActorBehavior"
		public Keyword getActorBehaviorKeyword_2() { return cActorBehaviorKeyword_2; }

		//"ProtocolClass"
		public Keyword getProtocolClassKeyword_3() { return cProtocolClassKeyword_3; }

		//"CompoundProtocolClass"
		public Keyword getCompoundProtocolClassKeyword_4() { return cCompoundProtocolClassKeyword_4; }

		//"SubSystemClass"
		public Keyword getSubSystemClassKeyword_5() { return cSubSystemClassKeyword_5; }

		//"LogicalSystem"
		public Keyword getLogicalSystemKeyword_6() { return cLogicalSystemKeyword_6; }
	}
	
	
	public class CommunicationTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "CommunicationType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cEVENT_DRIVENEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cEVENT_DRIVENEventdrivenKeyword_0_0 = (Keyword)cEVENT_DRIVENEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDATA_DRIVENEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDATA_DRIVENDatadrivenKeyword_1_0 = (Keyword)cDATA_DRIVENEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cSYNCHRONOUSEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cSYNCHRONOUSSyncKeyword_2_0 = (Keyword)cSYNCHRONOUSEnumLiteralDeclaration_2.eContents().get(0);
		
		//// **************************************************************
		//// protocol class
		//enum CommunicationType:
		//	EVENT_DRIVEN="eventdriven" | DATA_DRIVEN="datadriven" | SYNCHRONOUS="sync";
		public EnumRule getRule() { return rule; }

		//EVENT_DRIVEN="eventdriven" | DATA_DRIVEN="datadriven" | SYNCHRONOUS="sync"
		public Alternatives getAlternatives() { return cAlternatives; }

		//EVENT_DRIVEN="eventdriven"
		public EnumLiteralDeclaration getEVENT_DRIVENEnumLiteralDeclaration_0() { return cEVENT_DRIVENEnumLiteralDeclaration_0; }

		//"eventdriven"
		public Keyword getEVENT_DRIVENEventdrivenKeyword_0_0() { return cEVENT_DRIVENEventdrivenKeyword_0_0; }

		//DATA_DRIVEN="datadriven"
		public EnumLiteralDeclaration getDATA_DRIVENEnumLiteralDeclaration_1() { return cDATA_DRIVENEnumLiteralDeclaration_1; }

		//"datadriven"
		public Keyword getDATA_DRIVENDatadrivenKeyword_1_0() { return cDATA_DRIVENDatadrivenKeyword_1_0; }

		//SYNCHRONOUS="sync"
		public EnumLiteralDeclaration getSYNCHRONOUSEnumLiteralDeclaration_2() { return cSYNCHRONOUSEnumLiteralDeclaration_2; }

		//"sync"
		public Keyword getSYNCHRONOUSSyncKeyword_2_0() { return cSYNCHRONOUSSyncKeyword_2_0; }
	}

	public class ActorCommunicationTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "ActorCommunicationType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cEVENT_DRIVENEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cEVENT_DRIVENEventdrivenKeyword_0_0 = (Keyword)cEVENT_DRIVENEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDATA_DRIVENEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDATA_DRIVENDatadrivenKeyword_1_0 = (Keyword)cDATA_DRIVENEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cASYNCHRONOUSEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cASYNCHRONOUSAsyncKeyword_2_0 = (Keyword)cASYNCHRONOUSEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cSYNCHRONOUSEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cSYNCHRONOUSSyncKeyword_3_0 = (Keyword)cSYNCHRONOUSEnumLiteralDeclaration_3.eContents().get(0);
		
		//// **************************************************************
		//// actor class
		//enum ActorCommunicationType:
		//	EVENT_DRIVEN="eventdriven" | DATA_DRIVEN="datadriven" | ASYNCHRONOUS="async" | SYNCHRONOUS="sync";
		public EnumRule getRule() { return rule; }

		//EVENT_DRIVEN="eventdriven" | DATA_DRIVEN="datadriven" | ASYNCHRONOUS="async" | SYNCHRONOUS="sync"
		public Alternatives getAlternatives() { return cAlternatives; }

		//EVENT_DRIVEN="eventdriven"
		public EnumLiteralDeclaration getEVENT_DRIVENEnumLiteralDeclaration_0() { return cEVENT_DRIVENEnumLiteralDeclaration_0; }

		//"eventdriven"
		public Keyword getEVENT_DRIVENEventdrivenKeyword_0_0() { return cEVENT_DRIVENEventdrivenKeyword_0_0; }

		//DATA_DRIVEN="datadriven"
		public EnumLiteralDeclaration getDATA_DRIVENEnumLiteralDeclaration_1() { return cDATA_DRIVENEnumLiteralDeclaration_1; }

		//"datadriven"
		public Keyword getDATA_DRIVENDatadrivenKeyword_1_0() { return cDATA_DRIVENDatadrivenKeyword_1_0; }

		//ASYNCHRONOUS="async"
		public EnumLiteralDeclaration getASYNCHRONOUSEnumLiteralDeclaration_2() { return cASYNCHRONOUSEnumLiteralDeclaration_2; }

		//"async"
		public Keyword getASYNCHRONOUSAsyncKeyword_2_0() { return cASYNCHRONOUSAsyncKeyword_2_0; }

		//SYNCHRONOUS="sync"
		public EnumLiteralDeclaration getSYNCHRONOUSEnumLiteralDeclaration_3() { return cSYNCHRONOUSEnumLiteralDeclaration_3; }

		//"sync"
		public Keyword getSYNCHRONOUSSyncKeyword_3_0() { return cSYNCHRONOUSSyncKeyword_3_0; }
	}

	public class ReferenceTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "ReferenceType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cFIXEDEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cFIXEDFixedKeyword_0_0 = (Keyword)cFIXEDEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cOPTIONALEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cOPTIONALOptionalKeyword_1_0 = (Keyword)cOPTIONALEnumLiteralDeclaration_1.eContents().get(0);
		
		//// IMPORTED='imported'
		//enum ReferenceType:
		//	FIXED="fixed" | OPTIONAL="optional";
		public EnumRule getRule() { return rule; }

		//FIXED="fixed" | OPTIONAL="optional"
		public Alternatives getAlternatives() { return cAlternatives; }

		//FIXED="fixed"
		public EnumLiteralDeclaration getFIXEDEnumLiteralDeclaration_0() { return cFIXEDEnumLiteralDeclaration_0; }

		//"fixed"
		public Keyword getFIXEDFixedKeyword_0_0() { return cFIXEDFixedKeyword_0_0; }

		//OPTIONAL="optional"
		public EnumLiteralDeclaration getOPTIONALEnumLiteralDeclaration_1() { return cOPTIONALEnumLiteralDeclaration_1; }

		//"optional"
		public Keyword getOPTIONALOptionalKeyword_1_0() { return cOPTIONALOptionalKeyword_1_0; }
	}

	public class RoomAnnotationTargetEnumElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "RoomAnnotationTargetEnum");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cDATA_CLASSEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cDATA_CLASSDataClassKeyword_0_0 = (Keyword)cDATA_CLASSEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cACTOR_CLASSEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cACTOR_CLASSActorClassKeyword_1_0 = (Keyword)cACTOR_CLASSEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cACTOR_BEHAVIOREnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cACTOR_BEHAVIORActorBehaviorKeyword_2_0 = (Keyword)cACTOR_BEHAVIOREnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cPROTOCOL_CLASSEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cPROTOCOL_CLASSProtocolClassKeyword_3_0 = (Keyword)cPROTOCOL_CLASSEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cCOMPOUND_PROTOCOL_CLASSEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cCOMPOUND_PROTOCOL_CLASSCompoundProtocolClassKeyword_4_0 = (Keyword)cCOMPOUND_PROTOCOL_CLASSEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cSUBSYSTEM_CLASSEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cSUBSYSTEM_CLASSSubSystemClassKeyword_5_0 = (Keyword)cSUBSYSTEM_CLASSEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cLOGICAL_SYSTEM_CLASSEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cLOGICAL_SYSTEM_CLASSLogicalSystemKeyword_6_0 = (Keyword)cLOGICAL_SYSTEM_CLASSEnumLiteralDeclaration_6.eContents().get(0);
		
		//enum RoomAnnotationTargetEnum:
		//	DATA_CLASS="DataClass" | ACTOR_CLASS="ActorClass" | ACTOR_BEHAVIOR="ActorBehavior" | PROTOCOL_CLASS="ProtocolClass" |
		//	COMPOUND_PROTOCOL_CLASS="CompoundProtocolClass" | SUBSYSTEM_CLASS="SubSystemClass" |
		//	LOGICAL_SYSTEM_CLASS="LogicalSystem";
		public EnumRule getRule() { return rule; }

		//DATA_CLASS="DataClass" | ACTOR_CLASS="ActorClass" | ACTOR_BEHAVIOR="ActorBehavior" | PROTOCOL_CLASS="ProtocolClass" |
		//COMPOUND_PROTOCOL_CLASS="CompoundProtocolClass" | SUBSYSTEM_CLASS="SubSystemClass" |
		//LOGICAL_SYSTEM_CLASS="LogicalSystem"
		public Alternatives getAlternatives() { return cAlternatives; }

		//DATA_CLASS="DataClass"
		public EnumLiteralDeclaration getDATA_CLASSEnumLiteralDeclaration_0() { return cDATA_CLASSEnumLiteralDeclaration_0; }

		//"DataClass"
		public Keyword getDATA_CLASSDataClassKeyword_0_0() { return cDATA_CLASSDataClassKeyword_0_0; }

		//ACTOR_CLASS="ActorClass"
		public EnumLiteralDeclaration getACTOR_CLASSEnumLiteralDeclaration_1() { return cACTOR_CLASSEnumLiteralDeclaration_1; }

		//"ActorClass"
		public Keyword getACTOR_CLASSActorClassKeyword_1_0() { return cACTOR_CLASSActorClassKeyword_1_0; }

		//ACTOR_BEHAVIOR="ActorBehavior"
		public EnumLiteralDeclaration getACTOR_BEHAVIOREnumLiteralDeclaration_2() { return cACTOR_BEHAVIOREnumLiteralDeclaration_2; }

		//"ActorBehavior"
		public Keyword getACTOR_BEHAVIORActorBehaviorKeyword_2_0() { return cACTOR_BEHAVIORActorBehaviorKeyword_2_0; }

		//PROTOCOL_CLASS="ProtocolClass"
		public EnumLiteralDeclaration getPROTOCOL_CLASSEnumLiteralDeclaration_3() { return cPROTOCOL_CLASSEnumLiteralDeclaration_3; }

		//"ProtocolClass"
		public Keyword getPROTOCOL_CLASSProtocolClassKeyword_3_0() { return cPROTOCOL_CLASSProtocolClassKeyword_3_0; }

		//COMPOUND_PROTOCOL_CLASS="CompoundProtocolClass"
		public EnumLiteralDeclaration getCOMPOUND_PROTOCOL_CLASSEnumLiteralDeclaration_4() { return cCOMPOUND_PROTOCOL_CLASSEnumLiteralDeclaration_4; }

		//"CompoundProtocolClass"
		public Keyword getCOMPOUND_PROTOCOL_CLASSCompoundProtocolClassKeyword_4_0() { return cCOMPOUND_PROTOCOL_CLASSCompoundProtocolClassKeyword_4_0; }

		//SUBSYSTEM_CLASS="SubSystemClass"
		public EnumLiteralDeclaration getSUBSYSTEM_CLASSEnumLiteralDeclaration_5() { return cSUBSYSTEM_CLASSEnumLiteralDeclaration_5; }

		//"SubSystemClass"
		public Keyword getSUBSYSTEM_CLASSSubSystemClassKeyword_5_0() { return cSUBSYSTEM_CLASSSubSystemClassKeyword_5_0; }

		//LOGICAL_SYSTEM_CLASS="LogicalSystem"
		public EnumLiteralDeclaration getLOGICAL_SYSTEM_CLASSEnumLiteralDeclaration_6() { return cLOGICAL_SYSTEM_CLASSEnumLiteralDeclaration_6; }

		//"LogicalSystem"
		public Keyword getLOGICAL_SYSTEM_CLASSLogicalSystemKeyword_6_0() { return cLOGICAL_SYSTEM_CLASSLogicalSystemKeyword_6_0; }
	}
	
	private RoomModelElements pRoomModel;
	private RoomClassElements pRoomClass;
	private StructureClassElements pStructureClass;
	private ActorContainerClassElements pActorContainerClass;
	private VarDeclElements pVarDecl;
	private RefableTypeElements pRefableType;
	private DataTypeElements pDataType;
	private ComplexTypeElements pComplexType;
	private PrimitiveTypeElements pPrimitiveType;
	private EnumerationTypeElements pEnumerationType;
	private EnumLiteralElements pEnumLiteral;
	private ExternalTypeElements pExternalType;
	private DataClassElements pDataClass;
	private AttributeElements pAttribute;
	private OperationElements pOperation;
	private StandardOperationElements pStandardOperation;
	private PortOperationElements pPortOperation;
	private CommunicationTypeElements unknownRuleCommunicationType;
	private GeneralProtocolClassElements pGeneralProtocolClass;
	private ProtocolClassElements pProtocolClass;
	private CompoundProtocolClassElements pCompoundProtocolClass;
	private SubProtocolElements pSubProtocol;
	private MessageElements pMessage;
	private PortClassElements pPortClass;
	private MessageHandlerElements pMessageHandler;
	private InMessageHandlerElements pInMessageHandler;
	private OutMessageHandlerElements pOutMessageHandler;
	private ProtocolSemanticsElements pProtocolSemantics;
	private SemanticsRuleElements pSemanticsRule;
	private InSemanticsRuleElements pInSemanticsRule;
	private OutSemanticsRuleElements pOutSemanticsRule;
	private ActorCommunicationTypeElements unknownRuleActorCommunicationType;
	private ActorClassElements pActorClass;
	private InterfaceItemElements pInterfaceItem;
	private PortElements pPort;
	private ExternalPortElements pExternalPort;
	private SAPElements pSAP;
	private SPPElements pSPP;
	private ServiceImplementationElements pServiceImplementation;
	private LogicalSystemElements pLogicalSystem;
	private ActorContainerRefElements pActorContainerRef;
	private SubSystemRefElements pSubSystemRef;
	private SubSystemClassElements pSubSystemClass;
	private LogicalThreadElements pLogicalThread;
	private ActorInstanceMappingElements pActorInstanceMapping;
	private RefPathElements pRefPath;
	private RefSegmentElements pRefSegment;
	private BindingElements pBinding;
	private BindingEndPointElements pBindingEndPoint;
	private LayerConnectionElements pLayerConnection;
	private SAPointElements pSAPoint;
	private RefSAPointElements pRefSAPoint;
	private RelaySAPointElements pRelaySAPoint;
	private SPPointElements pSPPoint;
	private ActorRefElements pActorRef;
	private ReferenceTypeElements unknownRuleReferenceType;
	private StateGraphNodeElements pStateGraphNode;
	private StateGraphItemElements pStateGraphItem;
	private StateElements pState;
	private StateGraphElements pStateGraph;
	private StateMachineElements pStateMachine;
	private SimpleStateElements pSimpleState;
	private RefinedStateElements pRefinedState;
	private DetailCodeElements pDetailCode;
	private TrPointElements pTrPoint;
	private TransitionPointElements pTransitionPoint;
	private EntryPointElements pEntryPoint;
	private ExitPointElements pExitPoint;
	private ChoicePointElements pChoicePoint;
	private TransitionElements pTransition;
	private NonInitialTransitionElements pNonInitialTransition;
	private TransitionChainStartTransitionElements pTransitionChainStartTransition;
	private InitialTransitionElements pInitialTransition;
	private ContinuationTransitionElements pContinuationTransition;
	private TriggeredTransitionElements pTriggeredTransition;
	private GuardedTransitionElements pGuardedTransition;
	private CPBranchTransitionElements pCPBranchTransition;
	private RefinedTransitionElements pRefinedTransition;
	private TransitionTerminalElements pTransitionTerminal;
	private StateTerminalElements pStateTerminal;
	private TrPointTerminalElements pTrPointTerminal;
	private SubStateTrPointTerminalElements pSubStateTrPointTerminal;
	private ChoicepointTerminalElements pChoicepointTerminal;
	private TriggerElements pTrigger;
	private MessageFromIfElements pMessageFromIf;
	private GuardElements pGuard;
	private ImportElements pImport;
	private ImportedFQNElements pImportedFQN;
	private MULTIPLICITYElements pMULTIPLICITY;
	private AnnotationTargetTypeElements pAnnotationTargetType;
	private RoomAnnotationTargetEnumElements unknownRuleRoomAnnotationTargetEnum;
	
	private final Grammar grammar;

	private BaseGrammarAccess gaBase;

	@Inject
	public RoomGrammarAccess(GrammarProvider grammarProvider,
		BaseGrammarAccess gaBase) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaBase = gaBase;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.eclipse.etrice.core.Room".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public BaseGrammarAccess getBaseGrammarAccess() {
		return gaBase;
	}

	
	//RoomModel:
	//	"RoomModel" name=FQN docu=Documentation? "{" imports+=Import* (primitiveTypes+=PrimitiveType |
	//	enumerationTypes+=EnumerationType | externalTypes+=ExternalType | dataClasses+=DataClass |
	//	protocolClasses+=GeneralProtocolClass | actorClasses+=ActorClass | subSystemClasses+=SubSystemClass |
	//	systems+=LogicalSystem | annotationTypes+=AnnotationType)* "}";
	public RoomModelElements getRoomModelAccess() {
		return (pRoomModel != null) ? pRoomModel : (pRoomModel = new RoomModelElements());
	}
	
	public ParserRule getRoomModelRule() {
		return getRoomModelAccess().getRule();
	}

	//RoomClass:
	//	DataType | GeneralProtocolClass | StructureClass;
	public RoomClassElements getRoomClassAccess() {
		return (pRoomClass != null) ? pRoomClass : (pRoomClass = new RoomClassElements());
	}
	
	public ParserRule getRoomClassRule() {
		return getRoomClassAccess().getRule();
	}

	//StructureClass:
	//	ActorContainerClass | LogicalSystem;
	public StructureClassElements getStructureClassAccess() {
		return (pStructureClass != null) ? pStructureClass : (pStructureClass = new StructureClassElements());
	}
	
	public ParserRule getStructureClassRule() {
		return getStructureClassAccess().getRule();
	}

	//ActorContainerClass:
	//	ActorClass | SubSystemClass;
	public ActorContainerClassElements getActorContainerClassAccess() {
		return (pActorContainerClass != null) ? pActorContainerClass : (pActorContainerClass = new ActorContainerClassElements());
	}
	
	public ParserRule getActorContainerClassRule() {
		return getActorContainerClassAccess().getRule();
	}

	//// **************************************************************
	//// data class
	//VarDecl:
	//	name=ID ":" refType=RefableType;
	public VarDeclElements getVarDeclAccess() {
		return (pVarDecl != null) ? pVarDecl : (pVarDecl = new VarDeclElements());
	}
	
	public ParserRule getVarDeclRule() {
		return getVarDeclAccess().getRule();
	}

	//RefableType:
	//	type=[DataType|FQN] ref?="ref"?;
	public RefableTypeElements getRefableTypeAccess() {
		return (pRefableType != null) ? pRefableType : (pRefableType = new RefableTypeElements());
	}
	
	public ParserRule getRefableTypeRule() {
		return getRefableTypeAccess().getRule();
	}

	//DataType:
	//	PrimitiveType | EnumerationType | ComplexType;
	public DataTypeElements getDataTypeAccess() {
		return (pDataType != null) ? pDataType : (pDataType = new DataTypeElements());
	}
	
	public ParserRule getDataTypeRule() {
		return getDataTypeAccess().getRule();
	}

	//ComplexType:
	//	DataClass | ExternalType;
	public ComplexTypeElements getComplexTypeAccess() {
		return (pComplexType != null) ? pComplexType : (pComplexType = new ComplexTypeElements());
	}
	
	public ParserRule getComplexTypeRule() {
		return getComplexTypeAccess().getRule();
	}

	//PrimitiveType:
	//	"PrimitiveType" name=ID ":" type=LiteralType "->" targetName=FQN ("(" castName=FQN ")")? "default"
	//	defaultValueLiteral=STRING docu=Documentation?;
	public PrimitiveTypeElements getPrimitiveTypeAccess() {
		return (pPrimitiveType != null) ? pPrimitiveType : (pPrimitiveType = new PrimitiveTypeElements());
	}
	
	public ParserRule getPrimitiveTypeRule() {
		return getPrimitiveTypeAccess().getRule();
	}

	//EnumerationType:
	//	"Enumeration" name=ID docu=Documentation? ("of" primitiveType=[PrimitiveType|FQN])? "{" (literals+=EnumLiteral (","
	//	literals+=EnumLiteral)*)? "}";
	public EnumerationTypeElements getEnumerationTypeAccess() {
		return (pEnumerationType != null) ? pEnumerationType : (pEnumerationType = new EnumerationTypeElements());
	}
	
	public ParserRule getEnumerationTypeRule() {
		return getEnumerationTypeAccess().getRule();
	}

	//EnumLiteral:
	//	name=ID ("=" literal=IntLiteral)?;
	public EnumLiteralElements getEnumLiteralAccess() {
		return (pEnumLiteral != null) ? pEnumLiteral : (pEnumLiteral = new EnumLiteralElements());
	}
	
	public ParserRule getEnumLiteralRule() {
		return getEnumLiteralAccess().getRule();
	}

	//ExternalType:
	//	"ExternalType" name=ID "->" targetName=FQN ("default" defaultValueLiteral=STRING)? docu=Documentation?;
	public ExternalTypeElements getExternalTypeAccess() {
		return (pExternalType != null) ? pExternalType : (pExternalType = new ExternalTypeElements());
	}
	
	public ParserRule getExternalTypeRule() {
		return getExternalTypeAccess().getRule();
	}

	//// TODOHRR: define detail level language?
	//DataClass:
	//	"DataClass" name=ID docu=Documentation? ("extends" base=[DataClass|FQN])? "{" annotations+=Annotation* ("usercode1"
	//	userCode1=DetailCode)? ("usercode2" userCode2=DetailCode)? ("usercode3" userCode3=DetailCode)? attributes+=Attribute*
	//	operations+=StandardOperation* "}";
	public DataClassElements getDataClassAccess() {
		return (pDataClass != null) ? pDataClass : (pDataClass = new DataClassElements());
	}
	
	public ParserRule getDataClassRule() {
		return getDataClassAccess().getRule();
	}

	//Attribute:
	//	"Attribute" name=ID ("[" size=INT "]")? ":" type=RefableType ("=" defaultValueLiteral=STRING)? docu=Documentation?;
	public AttributeElements getAttributeAccess() {
		return (pAttribute != null) ? pAttribute : (pAttribute = new AttributeElements());
	}
	
	public ParserRule getAttributeRule() {
		return getAttributeAccess().getRule();
	}

	//Operation:
	//	StandardOperation | PortOperation;
	public OperationElements getOperationAccess() {
		return (pOperation != null) ? pOperation : (pOperation = new OperationElements());
	}
	
	public ParserRule getOperationRule() {
		return getOperationAccess().getRule();
	}

	//StandardOperation:
	//	"Operation" destructor?="~"? name=ID "(" (arguments+=VarDecl ("," arguments+=VarDecl)*)? ")" (":" ("void" |
	//	returnType=RefableType))? docu=Documentation? detailCode=DetailCode;
	public StandardOperationElements getStandardOperationAccess() {
		return (pStandardOperation != null) ? pStandardOperation : (pStandardOperation = new StandardOperationElements());
	}
	
	public ParserRule getStandardOperationRule() {
		return getStandardOperationAccess().getRule();
	}

	//PortOperation:
	//	"Operation" name=ID "(" (arguments+=VarDecl ("," arguments+=VarDecl)*)? ")" (":" ("void" | returnType=RefableType) |
	//	"sends" sendsMsg=[Message])? docu=Documentation? detailCode=DetailCode;
	public PortOperationElements getPortOperationAccess() {
		return (pPortOperation != null) ? pPortOperation : (pPortOperation = new PortOperationElements());
	}
	
	public ParserRule getPortOperationRule() {
		return getPortOperationAccess().getRule();
	}

	//// **************************************************************
	//// protocol class
	//enum CommunicationType:
	//	EVENT_DRIVEN="eventdriven" | DATA_DRIVEN="datadriven" | SYNCHRONOUS="sync";
	public CommunicationTypeElements getCommunicationTypeAccess() {
		return (unknownRuleCommunicationType != null) ? unknownRuleCommunicationType : (unknownRuleCommunicationType = new CommunicationTypeElements());
	}
	
	public EnumRule getCommunicationTypeRule() {
		return getCommunicationTypeAccess().getRule();
	}

	//GeneralProtocolClass:
	//	ProtocolClass | CompoundProtocolClass;
	public GeneralProtocolClassElements getGeneralProtocolClassAccess() {
		return (pGeneralProtocolClass != null) ? pGeneralProtocolClass : (pGeneralProtocolClass = new GeneralProtocolClassElements());
	}
	
	public ParserRule getGeneralProtocolClassRule() {
		return getGeneralProtocolClassAccess().getRule();
	}

	//ProtocolClass:
	//	commType=CommunicationType? "ProtocolClass" name=ID docu=Documentation? ("extends" base=[ProtocolClass|FQN])? "{"
	//	annotations+=Annotation* ("usercode1" userCode1=DetailCode)? ("usercode2" userCode2=DetailCode)? ("usercode3"
	//	userCode3=DetailCode)? ("incoming" "{" incomingMessages+=Message* "}")? ("outgoing" "{" outgoingMessages+=Message*
	//	"}")? ("regular" "PortClass" regular=PortClass)? ("conjugated" "PortClass" conjugated=PortClass)?
	//	semantics=ProtocolSemantics? "}";
	public ProtocolClassElements getProtocolClassAccess() {
		return (pProtocolClass != null) ? pProtocolClass : (pProtocolClass = new ProtocolClassElements());
	}
	
	public ParserRule getProtocolClassRule() {
		return getProtocolClassAccess().getRule();
	}

	//CompoundProtocolClass:
	//	"CompoundProtocolClass" name=ID docu=Documentation? "{" annotations+=Annotation* subProtocols+=SubProtocol* "}";
	public CompoundProtocolClassElements getCompoundProtocolClassAccess() {
		return (pCompoundProtocolClass != null) ? pCompoundProtocolClass : (pCompoundProtocolClass = new CompoundProtocolClassElements());
	}
	
	public ParserRule getCompoundProtocolClassRule() {
		return getCompoundProtocolClassAccess().getRule();
	}

	//SubProtocol:
	//	"SubProtocol" name=ID ":" protocol=[GeneralProtocolClass|FQN];
	public SubProtocolElements getSubProtocolAccess() {
		return (pSubProtocol != null) ? pSubProtocol : (pSubProtocol = new SubProtocolElements());
	}
	
	public ParserRule getSubProtocolRule() {
		return getSubProtocolAccess().getRule();
	}

	//Message:
	//	priv?="private"? "Message" name=ID "(" data=VarDecl? ")" docu=Documentation?;
	public MessageElements getMessageAccess() {
		return (pMessage != null) ? pMessage : (pMessage = new MessageElements());
	}
	
	public ParserRule getMessageRule() {
		return getMessageAccess().getRule();
	}

	//PortClass:
	//	{PortClass} "{" ("usercode" userCode=DetailCode)? (attributes+=Attribute | operations+=PortOperation |
	//	msgHandlers+=MessageHandler)* "}";
	public PortClassElements getPortClassAccess() {
		return (pPortClass != null) ? pPortClass : (pPortClass = new PortClassElements());
	}
	
	public ParserRule getPortClassRule() {
		return getPortClassAccess().getRule();
	}

	//MessageHandler:
	//	InMessageHandler | OutMessageHandler;
	public MessageHandlerElements getMessageHandlerAccess() {
		return (pMessageHandler != null) ? pMessageHandler : (pMessageHandler = new MessageHandlerElements());
	}
	
	public ParserRule getMessageHandlerRule() {
		return getMessageHandlerAccess().getRule();
	}

	//InMessageHandler:
	//	"handle" "incoming" msg=[Message] detailCode=DetailCode;
	public InMessageHandlerElements getInMessageHandlerAccess() {
		return (pInMessageHandler != null) ? pInMessageHandler : (pInMessageHandler = new InMessageHandlerElements());
	}
	
	public ParserRule getInMessageHandlerRule() {
		return getInMessageHandlerAccess().getRule();
	}

	//OutMessageHandler:
	//	"handle" "outgoing" msg=[Message] detailCode=DetailCode;
	public OutMessageHandlerElements getOutMessageHandlerAccess() {
		return (pOutMessageHandler != null) ? pOutMessageHandler : (pOutMessageHandler = new OutMessageHandlerElements());
	}
	
	public ParserRule getOutMessageHandlerRule() {
		return getOutMessageHandlerAccess().getRule();
	}

	//ProtocolSemantics:
	//	{ProtocolSemantics} "semantics" "{" rules+=SemanticsRule* "}";
	public ProtocolSemanticsElements getProtocolSemanticsAccess() {
		return (pProtocolSemantics != null) ? pProtocolSemantics : (pProtocolSemantics = new ProtocolSemanticsElements());
	}
	
	public ParserRule getProtocolSemanticsRule() {
		return getProtocolSemanticsAccess().getRule();
	}

	//SemanticsRule:
	//	InSemanticsRule | OutSemanticsRule;
	public SemanticsRuleElements getSemanticsRuleAccess() {
		return (pSemanticsRule != null) ? pSemanticsRule : (pSemanticsRule = new SemanticsRuleElements());
	}
	
	public ParserRule getSemanticsRuleRule() {
		return getSemanticsRuleAccess().getRule();
	}

	//InSemanticsRule:
	//	"in" ":" msg=[Message] ("->" (followUps+=SemanticsRule | "(" followUps+=SemanticsRule ("," followUps+=SemanticsRule)+
	//	")"))?;
	public InSemanticsRuleElements getInSemanticsRuleAccess() {
		return (pInSemanticsRule != null) ? pInSemanticsRule : (pInSemanticsRule = new InSemanticsRuleElements());
	}
	
	public ParserRule getInSemanticsRuleRule() {
		return getInSemanticsRuleAccess().getRule();
	}

	//OutSemanticsRule:
	//	"out" ":" msg=[Message] ("->" (followUps+=SemanticsRule | "(" followUps+=SemanticsRule (","
	//	followUps+=SemanticsRule)+ ")"))?;
	public OutSemanticsRuleElements getOutSemanticsRuleAccess() {
		return (pOutSemanticsRule != null) ? pOutSemanticsRule : (pOutSemanticsRule = new OutSemanticsRuleElements());
	}
	
	public ParserRule getOutSemanticsRuleRule() {
		return getOutSemanticsRuleAccess().getRule();
	}

	//// **************************************************************
	//// actor class
	//enum ActorCommunicationType:
	//	EVENT_DRIVEN="eventdriven" | DATA_DRIVEN="datadriven" | ASYNCHRONOUS="async" | SYNCHRONOUS="sync";
	public ActorCommunicationTypeElements getActorCommunicationTypeAccess() {
		return (unknownRuleActorCommunicationType != null) ? unknownRuleActorCommunicationType : (unknownRuleActorCommunicationType = new ActorCommunicationTypeElements());
	}
	
	public EnumRule getActorCommunicationTypeRule() {
		return getActorCommunicationTypeAccess().getRule();
	}

	//// some notes on ports
	////
	//// in ROOM ports can be contained in the structure and/or the interface
	//// p in s ==> internal end port
	//// p in i ==> relay port
	//// p in i and p in s ==> external end port
	//// since double containment is not supported we decided to define external ports as reference to interface ports
	//ActorClass:
	//	(abstract?="abstract"? & commType=ActorCommunicationType?) "ActorClass" name=ID docu=Documentation? ("extends"
	//	base=[ActorClass|FQN])? "{" annotations+=Annotation* ("Interface" "{" interfacePorts+=Port*
	//	serviceProvisionPoints+=SPP* "}")? ("Structure" structureDocu=Documentation? "{" ("usercode1" userCode1=DetailCode)?
	//	("usercode2" userCode2=DetailCode)? ("usercode3" userCode3=DetailCode)? ((internalPorts+=Port |
	//	externalPorts+=ExternalPort)* & actorRefs+=ActorRef* & serviceImplementations+=ServiceImplementation* &
	//	serviceAccessPoints+=SAP* & bindings+=Binding* & connections+=LayerConnection* & attributes+=Attribute*) "}")?
	//	("Behavior" behaviorDocu=Documentation? "{" behaviorAnnotations+=Annotation* operations+=StandardOperation*
	//	stateMachine=StateMachine? "}")? "}";
	public ActorClassElements getActorClassAccess() {
		return (pActorClass != null) ? pActorClass : (pActorClass = new ActorClassElements());
	}
	
	public ParserRule getActorClassRule() {
		return getActorClassAccess().getRule();
	}

	//InterfaceItem:
	//	Port | SAP | SPP;
	public InterfaceItemElements getInterfaceItemAccess() {
		return (pInterfaceItem != null) ? pInterfaceItem : (pInterfaceItem = new InterfaceItemElements());
	}
	
	public ParserRule getInterfaceItemRule() {
		return getInterfaceItemAccess().getRule();
	}

	//Port:
	//	conjugated?="conjugated"? "Port" name=ID multiplicity=MULTIPLICITY? ":" protocol=[GeneralProtocolClass|FQN]
	//	docu=Documentation?;
	public PortElements getPortAccess() {
		return (pPort != null) ? pPort : (pPort = new PortElements());
	}
	
	public ParserRule getPortRule() {
		return getPortAccess().getRule();
	}

	//ExternalPort:
	//	"external" "Port" interfacePort=[Port];
	public ExternalPortElements getExternalPortAccess() {
		return (pExternalPort != null) ? pExternalPort : (pExternalPort = new ExternalPortElements());
	}
	
	public ParserRule getExternalPortRule() {
		return getExternalPortAccess().getRule();
	}

	//SAP:
	//	"SAP" name=ID ":" protocol=[ProtocolClass|FQN];
	public SAPElements getSAPAccess() {
		return (pSAP != null) ? pSAP : (pSAP = new SAPElements());
	}
	
	public ParserRule getSAPRule() {
		return getSAPAccess().getRule();
	}

	//SPP:
	//	"SPP" name=ID ":" protocol=[ProtocolClass|FQN];
	public SPPElements getSPPAccess() {
		return (pSPP != null) ? pSPP : (pSPP = new SPPElements());
	}
	
	public ParserRule getSPPRule() {
		return getSPPAccess().getRule();
	}

	//ServiceImplementation:
	//	"ServiceImplementation" "of" spp=[SPP];
	public ServiceImplementationElements getServiceImplementationAccess() {
		return (pServiceImplementation != null) ? pServiceImplementation : (pServiceImplementation = new ServiceImplementationElements());
	}
	
	public ParserRule getServiceImplementationRule() {
		return getServiceImplementationAccess().getRule();
	}

	//LogicalSystem:
	//	"LogicalSystem" name=ID docu=Documentation? "{" annotations+=Annotation* (subSystems+=SubSystemRef* &
	//	bindings+=Binding* & connections+=LayerConnection*) "}";
	public LogicalSystemElements getLogicalSystemAccess() {
		return (pLogicalSystem != null) ? pLogicalSystem : (pLogicalSystem = new LogicalSystemElements());
	}
	
	public ParserRule getLogicalSystemRule() {
		return getLogicalSystemAccess().getRule();
	}

	//ActorContainerRef:
	//	SubSystemRef | ActorRef;
	public ActorContainerRefElements getActorContainerRefAccess() {
		return (pActorContainerRef != null) ? pActorContainerRef : (pActorContainerRef = new ActorContainerRefElements());
	}
	
	public ParserRule getActorContainerRefRule() {
		return getActorContainerRefAccess().getRule();
	}

	//SubSystemRef:
	//	"SubSystemRef" name=ID ":" type=[SubSystemClass|FQN] docu=Documentation?;
	public SubSystemRefElements getSubSystemRefAccess() {
		return (pSubSystemRef != null) ? pSubSystemRef : (pSubSystemRef = new SubSystemRefElements());
	}
	
	public ParserRule getSubSystemRefRule() {
		return getSubSystemRefAccess().getRule();
	}

	//SubSystemClass:
	//	"SubSystemClass" name=ID docu=Documentation? "{" annotations+=Annotation* ("usercode1" userCode1=DetailCode)?
	//	("usercode2" userCode2=DetailCode)? ("usercode3" userCode3=DetailCode)? (relayPorts+=Port* &
	//	serviceProvisionPoints+=SPP* & actorRefs+=ActorRef* & bindings+=Binding* & connections+=LayerConnection* &
	//	threads+=LogicalThread* & actorInstanceMappings+=ActorInstanceMapping*) "}";
	public SubSystemClassElements getSubSystemClassAccess() {
		return (pSubSystemClass != null) ? pSubSystemClass : (pSubSystemClass = new SubSystemClassElements());
	}
	
	public ParserRule getSubSystemClassRule() {
		return getSubSystemClassAccess().getRule();
	}

	//LogicalThread:
	//	"LogicalThread" name=ID;
	public LogicalThreadElements getLogicalThreadAccess() {
		return (pLogicalThread != null) ? pLogicalThread : (pLogicalThread = new LogicalThreadElements());
	}
	
	public ParserRule getLogicalThreadRule() {
		return getLogicalThreadAccess().getRule();
	}

	//ActorInstanceMapping:
	//	"ActorInstanceMapping" path=RefPath "->" thread=[LogicalThread] ("{" actorInstanceMappings+=ActorInstanceMapping*
	//	"}")?;
	public ActorInstanceMappingElements getActorInstanceMappingAccess() {
		return (pActorInstanceMapping != null) ? pActorInstanceMapping : (pActorInstanceMapping = new ActorInstanceMappingElements());
	}
	
	public ParserRule getActorInstanceMappingRule() {
		return getActorInstanceMappingAccess().getRule();
	}

	//RefPath:
	//	refs+=RefSegment ("/" refs+=RefSegment)*;
	public RefPathElements getRefPathAccess() {
		return (pRefPath != null) ? pRefPath : (pRefPath = new RefPathElements());
	}
	
	public ParserRule getRefPathRule() {
		return getRefPathAccess().getRule();
	}

	//RefSegment:
	//	ref=ID (":" idx=INT)?;
	public RefSegmentElements getRefSegmentAccess() {
		return (pRefSegment != null) ? pRefSegment : (pRefSegment = new RefSegmentElements());
	}
	
	public ParserRule getRefSegmentRule() {
		return getRefSegmentAccess().getRule();
	}

	//Binding:
	//	"Binding" endpoint1=BindingEndPoint "and" endpoint2=BindingEndPoint;
	public BindingElements getBindingAccess() {
		return (pBinding != null) ? pBinding : (pBinding = new BindingElements());
	}
	
	public ParserRule getBindingRule() {
		return getBindingAccess().getRule();
	}

	//BindingEndPoint:
	//	(actorRef=[ActorContainerRef] ".")? port=[Port] ("sub" sub=[SubProtocol])?;
	public BindingEndPointElements getBindingEndPointAccess() {
		return (pBindingEndPoint != null) ? pBindingEndPoint : (pBindingEndPoint = new BindingEndPointElements());
	}
	
	public ParserRule getBindingEndPointRule() {
		return getBindingEndPointAccess().getRule();
	}

	//LayerConnection:
	//	"LayerConnection" from=SAPoint "satisfied_by" to=SPPoint;
	public LayerConnectionElements getLayerConnectionAccess() {
		return (pLayerConnection != null) ? pLayerConnection : (pLayerConnection = new LayerConnectionElements());
	}
	
	public ParserRule getLayerConnectionRule() {
		return getLayerConnectionAccess().getRule();
	}

	//SAPoint:
	//	RefSAPoint | RelaySAPoint;
	public SAPointElements getSAPointAccess() {
		return (pSAPoint != null) ? pSAPoint : (pSAPoint = new SAPointElements());
	}
	
	public ParserRule getSAPointRule() {
		return getSAPointAccess().getRule();
	}

	//RefSAPoint: // satisfies a sub actor
	//	"ref" ref=[ActorContainerRef];
	public RefSAPointElements getRefSAPointAccess() {
		return (pRefSAPoint != null) ? pRefSAPoint : (pRefSAPoint = new RefSAPointElements());
	}
	
	public ParserRule getRefSAPointRule() {
		return getRefSAPointAccess().getRule();
	}

	//RelaySAPoint: // relays from own interface
	//	"relay_sap" relay=[SPP];
	public RelaySAPointElements getRelaySAPointAccess() {
		return (pRelaySAPoint != null) ? pRelaySAPoint : (pRelaySAPoint = new RelaySAPointElements());
	}
	
	public ParserRule getRelaySAPointRule() {
		return getRelaySAPointAccess().getRule();
	}

	//SPPoint:
	//	ref=[ActorContainerRef] "." service=[SPP];
	public SPPointElements getSPPointAccess() {
		return (pSPPoint != null) ? pSPPoint : (pSPPoint = new SPPointElements());
	}
	
	public ParserRule getSPPointRule() {
		return getSPPointAccess().getRule();
	}

	//ActorRef:
	//	refType=ReferenceType? "ActorRef" name=ID multiplicity=MULTIPLICITY? ":" type=[ActorClass|FQN] docu=Documentation?;
	public ActorRefElements getActorRefAccess() {
		return (pActorRef != null) ? pActorRef : (pActorRef = new ActorRefElements());
	}
	
	public ParserRule getActorRefRule() {
		return getActorRefAccess().getRule();
	}

	//// IMPORTED='imported'
	//enum ReferenceType:
	//	FIXED="fixed" | OPTIONAL="optional";
	public ReferenceTypeElements getReferenceTypeAccess() {
		return (unknownRuleReferenceType != null) ? unknownRuleReferenceType : (unknownRuleReferenceType = new ReferenceTypeElements());
	}
	
	public EnumRule getReferenceTypeRule() {
		return getReferenceTypeAccess().getRule();
	}

	//// **************************************************************
	//// state machine
	//StateGraphNode:
	//	State | ChoicePoint | TrPoint;
	public StateGraphNodeElements getStateGraphNodeAccess() {
		return (pStateGraphNode != null) ? pStateGraphNode : (pStateGraphNode = new StateGraphNodeElements());
	}
	
	public ParserRule getStateGraphNodeRule() {
		return getStateGraphNodeAccess().getRule();
	}

	//StateGraphItem:
	//	StateGraphNode | Transition;
	public StateGraphItemElements getStateGraphItemAccess() {
		return (pStateGraphItem != null) ? pStateGraphItem : (pStateGraphItem = new StateGraphItemElements());
	}
	
	public ParserRule getStateGraphItemRule() {
		return getStateGraphItemAccess().getRule();
	}

	//State:
	//	SimpleState | RefinedState;
	public StateElements getStateAccess() {
		return (pState != null) ? pState : (pState = new StateElements());
	}
	
	public ParserRule getStateRule() {
		return getStateAccess().getRule();
	}

	//StateGraph:
	//	{StateGraph} "{" (states+=State | trPoints+=TrPoint | chPoints+=ChoicePoint | transitions+=Transition |
	//	refinedTransitions+=RefinedTransition)* "}";
	public StateGraphElements getStateGraphAccess() {
		return (pStateGraph != null) ? pStateGraph : (pStateGraph = new StateGraphElements());
	}
	
	public ParserRule getStateGraphRule() {
		return getStateGraphAccess().getRule();
	}

	//StateMachine returns StateGraph:
	//	{StateGraph} "StateMachine" "{" (states+=State | trPoints+=TrPoint | chPoints+=ChoicePoint | transitions+=Transition
	//	| refinedTransitions+=RefinedTransition)* "}";
	public StateMachineElements getStateMachineAccess() {
		return (pStateMachine != null) ? pStateMachine : (pStateMachine = new StateMachineElements());
	}
	
	public ParserRule getStateMachineRule() {
		return getStateMachineAccess().getRule();
	}

	//SimpleState:
	//	"State" name=ID docu=Documentation? ("{" ("entry" entryCode=DetailCode)? ("exit" exitCode=DetailCode)? ("do"
	//	doCode=DetailCode)? ("subgraph" subgraph=StateGraph)? "}")?;
	public SimpleStateElements getSimpleStateAccess() {
		return (pSimpleState != null) ? pSimpleState : (pSimpleState = new SimpleStateElements());
	}
	
	public ParserRule getSimpleStateRule() {
		return getSimpleStateAccess().getRule();
	}

	//RefinedState:
	//	"RefinedState" target=[State|FQN] docu=Documentation? "{" ("entry" entryCode=DetailCode)? ("exit"
	//	exitCode=DetailCode)? ("do" doCode=DetailCode)? ("subgraph" subgraph=StateGraph)? "}";
	public RefinedStateElements getRefinedStateAccess() {
		return (pRefinedState != null) ? pRefinedState : (pRefinedState = new RefinedStateElements());
	}
	
	public ParserRule getRefinedStateRule() {
		return getRefinedStateAccess().getRule();
	}

	//// TODOHRR: provide a means to call super class code (cf. ROOM p. 310f)
	//// super() keyword or flag like in Trice
	//DetailCode:
	//	{DetailCode} "{" lines+=STRING* "}";
	public DetailCodeElements getDetailCodeAccess() {
		return (pDetailCode != null) ? pDetailCode : (pDetailCode = new DetailCodeElements());
	}
	
	public ParserRule getDetailCodeRule() {
		return getDetailCodeAccess().getRule();
	}

	//TrPoint:
	//	TransitionPoint | EntryPoint | ExitPoint;
	public TrPointElements getTrPointAccess() {
		return (pTrPoint != null) ? pTrPoint : (pTrPoint = new TrPointElements());
	}
	
	public ParserRule getTrPointRule() {
		return getTrPointAccess().getRule();
	}

	//TransitionPoint:
	//	handler?="handler"? "TransitionPoint" name=ID;
	public TransitionPointElements getTransitionPointAccess() {
		return (pTransitionPoint != null) ? pTransitionPoint : (pTransitionPoint = new TransitionPointElements());
	}
	
	public ParserRule getTransitionPointRule() {
		return getTransitionPointAccess().getRule();
	}

	//EntryPoint:
	//	"EntryPoint" name=ID;
	public EntryPointElements getEntryPointAccess() {
		return (pEntryPoint != null) ? pEntryPoint : (pEntryPoint = new EntryPointElements());
	}
	
	public ParserRule getEntryPointRule() {
		return getEntryPointAccess().getRule();
	}

	//ExitPoint:
	//	"ExitPoint" name=ID;
	public ExitPointElements getExitPointAccess() {
		return (pExitPoint != null) ? pExitPoint : (pExitPoint = new ExitPointElements());
	}
	
	public ParserRule getExitPointRule() {
		return getExitPointAccess().getRule();
	}

	//ChoicePoint:
	//	"ChoicePoint" name=ID docu=Documentation?;
	public ChoicePointElements getChoicePointAccess() {
		return (pChoicePoint != null) ? pChoicePoint : (pChoicePoint = new ChoicePointElements());
	}
	
	public ParserRule getChoicePointRule() {
		return getChoicePointAccess().getRule();
	}

	//Transition:
	//	InitialTransition | NonInitialTransition;
	public TransitionElements getTransitionAccess() {
		return (pTransition != null) ? pTransition : (pTransition = new TransitionElements());
	}
	
	public ParserRule getTransitionRule() {
		return getTransitionAccess().getRule();
	}

	//NonInitialTransition:
	//	TransitionChainStartTransition | ContinuationTransition | CPBranchTransition;
	public NonInitialTransitionElements getNonInitialTransitionAccess() {
		return (pNonInitialTransition != null) ? pNonInitialTransition : (pNonInitialTransition = new NonInitialTransitionElements());
	}
	
	public ParserRule getNonInitialTransitionRule() {
		return getNonInitialTransitionAccess().getRule();
	}

	//TransitionChainStartTransition:
	//	TriggeredTransition | GuardedTransition;
	public TransitionChainStartTransitionElements getTransitionChainStartTransitionAccess() {
		return (pTransitionChainStartTransition != null) ? pTransitionChainStartTransition : (pTransitionChainStartTransition = new TransitionChainStartTransitionElements());
	}
	
	public ParserRule getTransitionChainStartTransitionRule() {
		return getTransitionChainStartTransitionAccess().getRule();
	}

	//InitialTransition:
	//	"Transition" name=ID? ":" "initial" "->" to=TransitionTerminal docu=Documentation? "{" ("action" action=DetailCode)?
	//	"}";
	public InitialTransitionElements getInitialTransitionAccess() {
		return (pInitialTransition != null) ? pInitialTransition : (pInitialTransition = new InitialTransitionElements());
	}
	
	public ParserRule getInitialTransitionRule() {
		return getInitialTransitionAccess().getRule();
	}

	//ContinuationTransition:
	//	"Transition" name=ID? ":" from=TransitionTerminal "->" to=TransitionTerminal docu=Documentation? ("{" ("action"
	//	action=DetailCode)? "}")?;
	public ContinuationTransitionElements getContinuationTransitionAccess() {
		return (pContinuationTransition != null) ? pContinuationTransition : (pContinuationTransition = new ContinuationTransitionElements());
	}
	
	public ParserRule getContinuationTransitionRule() {
		return getContinuationTransitionAccess().getRule();
	}

	//TriggeredTransition:
	//	"Transition" name=ID? ":" from=TransitionTerminal "->" to=TransitionTerminal docu=Documentation? "{" "triggers" "{"
	//	triggers+=Trigger ("or" triggers+=Trigger)* "}" ("action" action=DetailCode)? "}";
	public TriggeredTransitionElements getTriggeredTransitionAccess() {
		return (pTriggeredTransition != null) ? pTriggeredTransition : (pTriggeredTransition = new TriggeredTransitionElements());
	}
	
	public ParserRule getTriggeredTransitionRule() {
		return getTriggeredTransitionAccess().getRule();
	}

	//GuardedTransition:
	//	"Transition" name=ID? ":" from=TransitionTerminal "->" to=TransitionTerminal docu=Documentation? "{" "guard"
	//	guard=DetailCode ("action" action=DetailCode)? "}";
	public GuardedTransitionElements getGuardedTransitionAccess() {
		return (pGuardedTransition != null) ? pGuardedTransition : (pGuardedTransition = new GuardedTransitionElements());
	}
	
	public ParserRule getGuardedTransitionRule() {
		return getGuardedTransitionAccess().getRule();
	}

	//CPBranchTransition:
	//	"Transition" name=ID? ":" from=TransitionTerminal "->" to=TransitionTerminal docu=Documentation? "{" "cond"
	//	condition=DetailCode ("action" action=DetailCode)? "}";
	public CPBranchTransitionElements getCPBranchTransitionAccess() {
		return (pCPBranchTransition != null) ? pCPBranchTransition : (pCPBranchTransition = new CPBranchTransitionElements());
	}
	
	public ParserRule getCPBranchTransitionRule() {
		return getCPBranchTransitionAccess().getRule();
	}

	//// by validation RefinedTransition can only be contained in the top level state graph
	//RefinedTransition:
	//	"RefinedTransition" target=[Transition|FQN] docu=Documentation? "{" "action" action=DetailCode "}";
	public RefinedTransitionElements getRefinedTransitionAccess() {
		return (pRefinedTransition != null) ? pRefinedTransition : (pRefinedTransition = new RefinedTransitionElements());
	}
	
	public ParserRule getRefinedTransitionRule() {
		return getRefinedTransitionAccess().getRule();
	}

	//TransitionTerminal:
	//	StateTerminal | TrPointTerminal | SubStateTrPointTerminal | ChoicepointTerminal;
	public TransitionTerminalElements getTransitionTerminalAccess() {
		return (pTransitionTerminal != null) ? pTransitionTerminal : (pTransitionTerminal = new TransitionTerminalElements());
	}
	
	public ParserRule getTransitionTerminalRule() {
		return getTransitionTerminalAccess().getRule();
	}

	//StateTerminal:
	//	state=[State];
	public StateTerminalElements getStateTerminalAccess() {
		return (pStateTerminal != null) ? pStateTerminal : (pStateTerminal = new StateTerminalElements());
	}
	
	public ParserRule getStateTerminalRule() {
		return getStateTerminalAccess().getRule();
	}

	//TrPointTerminal:
	//	"my" trPoint=[TrPoint];
	public TrPointTerminalElements getTrPointTerminalAccess() {
		return (pTrPointTerminal != null) ? pTrPointTerminal : (pTrPointTerminal = new TrPointTerminalElements());
	}
	
	public ParserRule getTrPointTerminalRule() {
		return getTrPointTerminalAccess().getRule();
	}

	//SubStateTrPointTerminal:
	//	trPoint=[TrPoint] "of" state=[State];
	public SubStateTrPointTerminalElements getSubStateTrPointTerminalAccess() {
		return (pSubStateTrPointTerminal != null) ? pSubStateTrPointTerminal : (pSubStateTrPointTerminal = new SubStateTrPointTerminalElements());
	}
	
	public ParserRule getSubStateTrPointTerminalRule() {
		return getSubStateTrPointTerminalAccess().getRule();
	}

	//ChoicepointTerminal:
	//	"cp" cp=[ChoicePoint];
	public ChoicepointTerminalElements getChoicepointTerminalAccess() {
		return (pChoicepointTerminal != null) ? pChoicepointTerminal : (pChoicepointTerminal = new ChoicepointTerminalElements());
	}
	
	public ParserRule getChoicepointTerminalRule() {
		return getChoicepointTerminalAccess().getRule();
	}

	//Trigger:
	//	"<" msgFromIfPairs+=MessageFromIf ("|" msgFromIfPairs+=MessageFromIf)* guard=Guard? ">";
	public TriggerElements getTriggerAccess() {
		return (pTrigger != null) ? pTrigger : (pTrigger = new TriggerElements());
	}
	
	public ParserRule getTriggerRule() {
		return getTriggerAccess().getRule();
	}

	//MessageFromIf:
	//	message=[Message] ":" from=[InterfaceItem];
	public MessageFromIfElements getMessageFromIfAccess() {
		return (pMessageFromIf != null) ? pMessageFromIf : (pMessageFromIf = new MessageFromIfElements());
	}
	
	public ParserRule getMessageFromIfRule() {
		return getMessageFromIfAccess().getRule();
	}

	//Guard:
	//	"guard" guard=DetailCode;
	public GuardElements getGuardAccess() {
		return (pGuard != null) ? pGuard : (pGuard = new GuardElements());
	}
	
	public ParserRule getGuardRule() {
		return getGuardAccess().getRule();
	}

	//// **************************************************************
	//// general
	//// HOWTO: use a combination of URI global scopes and namespace aware local scope provider
	//// this is configured in the work flow by
	////			fragment = scoping.ImportURIScopingFragment {}
	//// and by overriding configureIScopeProviderDelegate in the runtime module with 
	////			ImportedNamespaceAwareLocalScopeProvider
	//// also configure in the RuntimeModule
	////	public Class<? extends ImportUriResolver> bindImportUriResolver() {
	////		return PlatformRelativeUriResolver.class;
	////	}
	//// and in the UiRuntimeModule
	////	public Class<? extends org.eclipse.xtext.ui.editor.IURIEditorOpener> bindIURIEditorOpener() {
	////		return GlobalNonPlatformURIEditorOpener.class;
	////	}
	////	public Class<? extends IHyperlinkHelper> bindIHyperlinkHelper() {
	////		return ImportAwareHyperlinkHelper.class;
	////	}
	//// the attribute 'importedNamespace' is picked up by the ImportedNamespaceAwareLocalScopeProvider
	//// the attribute 'importURI' is picked up by the ImportUriGlobalScopeProvider
	//Import:
	//	"import" (importedNamespace=ImportedFQN "from" | "model") importURI=STRING;
	public ImportElements getImportAccess() {
		return (pImport != null) ? pImport : (pImport = new ImportElements());
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}

	//ImportedFQN:
	//	FQN ".*"?;
	public ImportedFQNElements getImportedFQNAccess() {
		return (pImportedFQN != null) ? pImportedFQN : (pImportedFQN = new ImportedFQNElements());
	}
	
	public ParserRule getImportedFQNRule() {
		return getImportedFQNAccess().getRule();
	}

	//// the following is a data type rule (accompanied by a value converter) and must not be a terminal rule
	//// (because then the lexer already would find this in places where it is not expected, e.g. in an Attribute)
	//MULTIPLICITY returns ecore::EInt:
	//	"[" ("*" | INT) "]";
	public MULTIPLICITYElements getMULTIPLICITYAccess() {
		return (pMULTIPLICITY != null) ? pMULTIPLICITY : (pMULTIPLICITY = new MULTIPLICITYElements());
	}
	
	public ParserRule getMULTIPLICITYRule() {
		return getMULTIPLICITYAccess().getRule();
	}

	//AnnotationTargetType:
	//	"DataClass" | "ActorClass" | "ActorBehavior" | "ProtocolClass" | "CompoundProtocolClass" | "SubSystemClass" |
	//	"LogicalSystem";
	public AnnotationTargetTypeElements getAnnotationTargetTypeAccess() {
		return (pAnnotationTargetType != null) ? pAnnotationTargetType : (pAnnotationTargetType = new AnnotationTargetTypeElements());
	}
	
	public ParserRule getAnnotationTargetTypeRule() {
		return getAnnotationTargetTypeAccess().getRule();
	}

	//enum RoomAnnotationTargetEnum:
	//	DATA_CLASS="DataClass" | ACTOR_CLASS="ActorClass" | ACTOR_BEHAVIOR="ActorBehavior" | PROTOCOL_CLASS="ProtocolClass" |
	//	COMPOUND_PROTOCOL_CLASS="CompoundProtocolClass" | SUBSYSTEM_CLASS="SubSystemClass" |
	//	LOGICAL_SYSTEM_CLASS="LogicalSystem";
	public RoomAnnotationTargetEnumElements getRoomAnnotationTargetEnumAccess() {
		return (unknownRuleRoomAnnotationTargetEnum != null) ? unknownRuleRoomAnnotationTargetEnum : (unknownRuleRoomAnnotationTargetEnum = new RoomAnnotationTargetEnumElements());
	}
	
	public EnumRule getRoomAnnotationTargetEnumRule() {
		return getRoomAnnotationTargetEnumAccess().getRule();
	}

	//// **************************************************************
	//// AnnotationType and Annotation Rules
	//Annotation:
	//	"@" type=[AnnotationType|FQN] ("(" attributes+=KeyValue ("," attributes+=KeyValue)* ")")?;
	public BaseGrammarAccess.AnnotationElements getAnnotationAccess() {
		return gaBase.getAnnotationAccess();
	}
	
	public ParserRule getAnnotationRule() {
		return getAnnotationAccess().getRule();
	}

	//KeyValue:
	//	key=ID "=" value=Literal;
	public BaseGrammarAccess.KeyValueElements getKeyValueAccess() {
		return gaBase.getKeyValueAccess();
	}
	
	public ParserRule getKeyValueRule() {
		return getKeyValueAccess().getRule();
	}

	//AnnotationType:
	//	"AnnotationType" name=ID docu=Documentation? "{" "target" "=" (targets+=AnnotationTargetType | "{"
	//	targets+=AnnotationTargetType ("," targets+=AnnotationTargetType)* "}") attributes+=AnnotationAttribute* "}";
	public BaseGrammarAccess.AnnotationTypeElements getAnnotationTypeAccess() {
		return gaBase.getAnnotationTypeAccess();
	}
	
	public ParserRule getAnnotationTypeRule() {
		return getAnnotationTypeAccess().getRule();
	}

	//AnnotationAttribute:
	//	SimpleAnnotationAttribute | EnumAnnotationAttribute;
	public BaseGrammarAccess.AnnotationAttributeElements getAnnotationAttributeAccess() {
		return gaBase.getAnnotationAttributeAccess();
	}
	
	public ParserRule getAnnotationAttributeRule() {
		return getAnnotationAttributeAccess().getRule();
	}

	//SimpleAnnotationAttribute:
	//	(optional?="optional" | "mandatory") "attribute" name=ID ":" type=LiteralType;
	public BaseGrammarAccess.SimpleAnnotationAttributeElements getSimpleAnnotationAttributeAccess() {
		return gaBase.getSimpleAnnotationAttributeAccess();
	}
	
	public ParserRule getSimpleAnnotationAttributeRule() {
		return getSimpleAnnotationAttributeAccess().getRule();
	}

	//EnumAnnotationAttribute:
	//	(optional?="optional" | "mandatory") "attribute" name=ID ":" "{" values+=STRING ("," values+=STRING)* "}";
	public BaseGrammarAccess.EnumAnnotationAttributeElements getEnumAnnotationAttributeAccess() {
		return gaBase.getEnumAnnotationAttributeAccess();
	}
	
	public ParserRule getEnumAnnotationAttributeRule() {
		return getEnumAnnotationAttributeAccess().getRule();
	}

	//// **************************************************************
	//// Documentation Rule
	//Documentation:
	//	{Documentation} "[" lines+=STRING* "]";
	public BaseGrammarAccess.DocumentationElements getDocumentationAccess() {
		return gaBase.getDocumentationAccess();
	}
	
	public ParserRule getDocumentationRule() {
		return getDocumentationAccess().getRule();
	}

	//// **************************************************************
	//// Literal Rules
	//enum LiteralType:
	//	BOOL="ptBoolean" | INT="ptInteger" | REAL="ptReal" | CHAR="ptCharacter";
	public BaseGrammarAccess.LiteralTypeElements getLiteralTypeAccess() {
		return gaBase.getLiteralTypeAccess();
	}
	
	public EnumRule getLiteralTypeRule() {
		return getLiteralTypeAccess().getRule();
	}

	//LiteralArray:
	//	literals+=Literal ("," literals+=Literal)*;
	public BaseGrammarAccess.LiteralArrayElements getLiteralArrayAccess() {
		return gaBase.getLiteralArrayAccess();
	}
	
	public ParserRule getLiteralArrayRule() {
		return getLiteralArrayAccess().getRule();
	}

	//// Value Types for Attributes
	//Literal:
	//	BooleanLiteral | NumberLiteral | StringLiteral;
	public BaseGrammarAccess.LiteralElements getLiteralAccess() {
		return gaBase.getLiteralAccess();
	}
	
	public ParserRule getLiteralRule() {
		return getLiteralAccess().getRule();
	}

	//BooleanLiteral:
	//	{BooleanLiteral} ("false" | isTrue?="true");
	public BaseGrammarAccess.BooleanLiteralElements getBooleanLiteralAccess() {
		return gaBase.getBooleanLiteralAccess();
	}
	
	public ParserRule getBooleanLiteralRule() {
		return getBooleanLiteralAccess().getRule();
	}

	//NumberLiteral:
	//	IntLiteral | RealLiteral;
	public BaseGrammarAccess.NumberLiteralElements getNumberLiteralAccess() {
		return gaBase.getNumberLiteralAccess();
	}
	
	public ParserRule getNumberLiteralRule() {
		return getNumberLiteralAccess().getRule();
	}

	//RealLiteral:
	//	{RealLiteral} value=Real;
	public BaseGrammarAccess.RealLiteralElements getRealLiteralAccess() {
		return gaBase.getRealLiteralAccess();
	}
	
	public ParserRule getRealLiteralRule() {
		return getRealLiteralAccess().getRule();
	}

	//IntLiteral:
	//	{IntLiteral} value=Integer;
	public BaseGrammarAccess.IntLiteralElements getIntLiteralAccess() {
		return gaBase.getIntLiteralAccess();
	}
	
	public ParserRule getIntLiteralRule() {
		return getIntLiteralAccess().getRule();
	}

	//StringLiteral:
	//	{StringLiteral} value=STRING;
	public BaseGrammarAccess.StringLiteralElements getStringLiteralAccess() {
		return gaBase.getStringLiteralAccess();
	}
	
	public ParserRule getStringLiteralRule() {
		return getStringLiteralAccess().getRule();
	}

	//Integer returns ecore::ELong:
	//	SignedInteger | Hexadecimal;
	public BaseGrammarAccess.IntegerElements getIntegerAccess() {
		return gaBase.getIntegerAccess();
	}
	
	public ParserRule getIntegerRule() {
		return getIntegerAccess().getRule();
	}

	//SignedInteger hidden():
	//	("+" | "-")? INT;
	public BaseGrammarAccess.SignedIntegerElements getSignedIntegerAccess() {
		return gaBase.getSignedIntegerAccess();
	}
	
	public ParserRule getSignedIntegerRule() {
		return getSignedIntegerAccess().getRule();
	}

	//Hexadecimal hidden():
	//	HEX;
	public BaseGrammarAccess.HexadecimalElements getHexadecimalAccess() {
		return gaBase.getHexadecimalAccess();
	}
	
	public ParserRule getHexadecimalRule() {
		return getHexadecimalAccess().getRule();
	}

	//Real returns ecore::EDouble:
	//	Decimal | DotDecimal | DecimalDot | DecimalExp;
	public BaseGrammarAccess.RealElements getRealAccess() {
		return gaBase.getRealAccess();
	}
	
	public ParserRule getRealRule() {
		return getRealAccess().getRule();
	}

	//Decimal hidden():
	//	("+" | "-")? INT "." INT;
	public BaseGrammarAccess.DecimalElements getDecimalAccess() {
		return gaBase.getDecimalAccess();
	}
	
	public ParserRule getDecimalRule() {
		return getDecimalAccess().getRule();
	}

	//DotDecimal hidden():
	//	("+" | "-")? "." INT;
	public BaseGrammarAccess.DotDecimalElements getDotDecimalAccess() {
		return gaBase.getDotDecimalAccess();
	}
	
	public ParserRule getDotDecimalRule() {
		return getDotDecimalAccess().getRule();
	}

	//DecimalDot hidden():
	//	("+" | "-")? INT ".";
	public BaseGrammarAccess.DecimalDotElements getDecimalDotAccess() {
		return gaBase.getDecimalDotAccess();
	}
	
	public ParserRule getDecimalDotRule() {
		return getDecimalDotAccess().getRule();
	}

	//DecimalExp hidden():
	//	("+" | "-")? INT "." INT EXP;
	public BaseGrammarAccess.DecimalExpElements getDecimalExpAccess() {
		return gaBase.getDecimalExpAccess();
	}
	
	public ParserRule getDecimalExpRule() {
		return getDecimalExpAccess().getRule();
	}

	//terminal EXP:
	//	("e" | "E") ("+" | "-")? "0".."9"+;
	public TerminalRule getEXPRule() {
		return gaBase.getEXPRule();
	} 

	//terminal HEX:
	//	("0x" | "0X") ("0".."9" | "a".."f" | "A".."F")+;
	public TerminalRule getHEXRule() {
		return gaBase.getHEXRule();
	} 

	//FQN:
	//	ID ("." ID)*;
	public BaseGrammarAccess.FQNElements getFQNAccess() {
		return gaBase.getFQNAccess();
	}
	
	public ParserRule getFQNRule() {
		return getFQNAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaBase.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaBase.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaBase.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaBase.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaBase.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaBase.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaBase.getANY_OTHERRule();
	} 
}
