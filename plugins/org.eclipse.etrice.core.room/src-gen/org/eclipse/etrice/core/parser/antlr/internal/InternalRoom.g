/*
* generated by Xtext
*/
grammar InternalRoom;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.eclipse.etrice.core.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.etrice.core.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.etrice.core.services.RoomGrammarAccess;

}

@parser::members {

 	private RoomGrammarAccess grammarAccess;
 	
    public InternalRoomParser(TokenStream input, RoomGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "RoomModel";	
   	}
   	
   	@Override
   	protected RoomGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleRoomModel
entryRuleRoomModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRoomModelRule()); }
	 iv_ruleRoomModel=ruleRoomModel 
	 { $current=$iv_ruleRoomModel.current; } 
	 EOF 
;

// Rule RoomModel
ruleRoomModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='RoomModel' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRoomModelAccess().getRoomModelKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRoomModelAccess().getNameFQNParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleFQN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRoomModelRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"FQN");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRoomModelAccess().getDocuDocumentationParserRuleCall_2_0()); 
	    }
		lv_docu_2_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRoomModelRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_2_0, 
        		"Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRoomModelAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRoomModelAccess().getImportsImportParserRuleCall_4_0()); 
	    }
		lv_imports_4_0=ruleImport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRoomModelRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_4_0, 
        		"Import");
	        afterParserOrEnumRuleCall();
	    }

)
)*((
(
		{ 
	        newCompositeNode(grammarAccess.getRoomModelAccess().getDataClassesDataClassParserRuleCall_5_0_0()); 
	    }
		lv_dataClasses_5_0=ruleDataClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRoomModelRule());
	        }
       		add(
       			$current, 
       			"dataClasses",
        		lv_dataClasses_5_0, 
        		"DataClass");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getRoomModelAccess().getProtocolClassesProtocolClassParserRuleCall_5_1_0()); 
	    }
		lv_protocolClasses_6_0=ruleProtocolClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRoomModelRule());
	        }
       		add(
       			$current, 
       			"protocolClasses",
        		lv_protocolClasses_6_0, 
        		"ProtocolClass");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getRoomModelAccess().getActorClassesActorClassParserRuleCall_5_2_0()); 
	    }
		lv_actorClasses_7_0=ruleActorClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRoomModelRule());
	        }
       		add(
       			$current, 
       			"actorClasses",
        		lv_actorClasses_7_0, 
        		"ActorClass");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getRoomModelAccess().getSubSystemClassesSubSystemClassParserRuleCall_5_3_0()); 
	    }
		lv_subSystemClasses_8_0=ruleSubSystemClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRoomModelRule());
	        }
       		add(
       			$current, 
       			"subSystemClasses",
        		lv_subSystemClasses_8_0, 
        		"SubSystemClass");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getRoomModelAccess().getSystemsLogicalSystemParserRuleCall_5_4_0()); 
	    }
		lv_systems_9_0=ruleLogicalSystem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRoomModelRule());
	        }
       		add(
       			$current, 
       			"systems",
        		lv_systems_9_0, 
        		"LogicalSystem");
	        afterParserOrEnumRuleCall();
	    }

)
))+	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getRoomModelAccess().getRightCurlyBracketKeyword_6());
    }
)
;







// Entry rule entryRuleStructureClass
entryRuleStructureClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStructureClassRule()); }
	 iv_ruleStructureClass=ruleStructureClass 
	 { $current=$iv_ruleStructureClass.current; } 
	 EOF 
;

// Rule StructureClass
ruleStructureClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getStructureClassAccess().getActorContainerClassParserRuleCall_0()); 
    }
    this_ActorContainerClass_0=ruleActorContainerClass
    { 
        $current = $this_ActorContainerClass_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStructureClassAccess().getLogicalSystemParserRuleCall_1()); 
    }
    this_LogicalSystem_1=ruleLogicalSystem
    { 
        $current = $this_LogicalSystem_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleActorContainerClass
entryRuleActorContainerClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActorContainerClassRule()); }
	 iv_ruleActorContainerClass=ruleActorContainerClass 
	 { $current=$iv_ruleActorContainerClass.current; } 
	 EOF 
;

// Rule ActorContainerClass
ruleActorContainerClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getActorContainerClassAccess().getActorClassParserRuleCall_0()); 
    }
    this_ActorClass_0=ruleActorClass
    { 
        $current = $this_ActorClass_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getActorContainerClassAccess().getSubSystemClassParserRuleCall_1()); 
    }
    this_SubSystemClass_1=ruleSubSystemClass
    { 
        $current = $this_SubSystemClass_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleTypedID
entryRuleTypedID returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypedIDRule()); }
	 iv_ruleTypedID=ruleTypedID 
	 { $current=$iv_ruleTypedID.current; } 
	 EOF 
;

// Rule TypedID
ruleTypedID returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getTypedIDAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypedIDRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTypedIDAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypedIDAccess().getTypeTypeParserRuleCall_2_0()); 
	    }
		lv_type_2_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypedIDRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFreeTypedID
entryRuleFreeTypedID returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFreeTypedIDRule()); }
	 iv_ruleFreeTypedID=ruleFreeTypedID 
	 { $current=$iv_ruleFreeTypedID.current; } 
	 EOF 
;

// Rule FreeTypedID
ruleFreeTypedID returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getFreeTypedIDAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFreeTypedIDRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFreeTypedIDAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFreeTypedIDAccess().getTypeFreeTypeParserRuleCall_2_0()); 
	    }
		lv_type_2_0=ruleFreeType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFreeTypedIDRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"FreeType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleType
entryRuleType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	 iv_ruleType=ruleType 
	 { $current=$iv_ruleType.current; } 
	 EOF 
;

// Rule Type
ruleType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getPrimPrimitiveTypeEnumRuleCall_0_0()); 
	    }
		lv_prim_0_0=rulePrimitiveType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		set(
       			$current, 
       			"prim",
        		lv_prim_0_0, 
        		"PrimitiveType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getTypeDataClassCrossReference_1_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFreeType
entryRuleFreeType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFreeTypeRule()); }
	 iv_ruleFreeType=ruleFreeType 
	 { $current=$iv_ruleFreeType.current; } 
	 EOF 
;

// Rule FreeType
ruleFreeType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getFreeTypeAccess().getPrimPrimitiveTypeEnumRuleCall_0_0()); 
	    }
		lv_prim_0_0=rulePrimitiveType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFreeTypeRule());
	        }
       		set(
       			$current, 
       			"prim",
        		lv_prim_0_0, 
        		"PrimitiveType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_type_1_0=RULE_ID
		{
			newLeafNode(lv_type_1_0, grammarAccess.getFreeTypeAccess().getTypeIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFreeTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleDataClass
entryRuleDataClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataClassRule()); }
	 iv_ruleDataClass=ruleDataClass 
	 { $current=$iv_ruleDataClass.current; } 
	 EOF 
;

// Rule DataClass
ruleDataClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='DataClass' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDataClassAccess().getDataClassKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDataClassAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataClassRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDataClassAccess().getDocuDocumentationParserRuleCall_2_0()); 
	    }
		lv_docu_2_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataClassRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_2_0, 
        		"Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_3='extends' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDataClassAccess().getExtendsKeyword_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataClassRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getDataClassAccess().getBaseDataClassCrossReference_3_1_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDataClassAccess().getLeftCurlyBracketKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataClassAccess().getImportsImportParserRuleCall_5_0()); 
	    }
		lv_imports_6_0=ruleImport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataClassRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_6_0, 
        		"Import");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getDataClassAccess().getAttributesAttributeParserRuleCall_6_0()); 
	    }
		lv_attributes_7_0=ruleAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataClassRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_7_0, 
        		"Attribute");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getDataClassAccess().getOperationsOperationParserRuleCall_7_0()); 
	    }
		lv_operations_8_0=ruleOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataClassRule());
	        }
       		add(
       			$current, 
       			"operations",
        		lv_operations_8_0, 
        		"Operation");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getDataClassAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	 iv_ruleAttribute=ruleAttribute 
	 { $current=$iv_ruleAttribute.current; } 
	 EOF 
;

// Rule Attribute
ruleAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Attribute' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAttributeAccess().getAttributeKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAttributeAccess().getLeftSquareBracketKeyword_2_0());
    }
(
(
		lv_size_3_0=RULE_INT
		{
			newLeafNode(lv_size_3_0, grammarAccess.getAttributeAccess().getSizeINTTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"size",
        		lv_size_3_0, 
        		"INT");
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAttributeAccess().getRightSquareBracketKeyword_2_2());
    }
)?	otherlv_5=':' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAttributeAccess().getColonKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getTypeTypeParserRuleCall_4_0()); 
	    }
		lv_type_6_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_6_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getDocuDocumentationParserRuleCall_5_0()); 
	    }
		lv_docu_7_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_7_0, 
        		"Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleOperation
entryRuleOperation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperationRule()); }
	 iv_ruleOperation=ruleOperation 
	 { $current=$iv_ruleOperation.current; } 
	 EOF 
;

// Rule Operation
ruleOperation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Operation' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOperationAccess().getOperationKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getOperationAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOperationAccess().getLeftParenthesisKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getOperationAccess().getArgumentsFreeTypedIDParserRuleCall_3_0_0()); 
	    }
		lv_arguments_3_0=ruleFreeTypedID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_3_0, 
        		"FreeTypedID");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOperationAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperationAccess().getArgumentsFreeTypedIDParserRuleCall_3_1_1_0()); 
	    }
		lv_arguments_5_0=ruleFreeTypedID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_5_0, 
        		"FreeTypedID");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getOperationAccess().getRightParenthesisKeyword_4());
    }
(	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getOperationAccess().getColonKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperationAccess().getReturntypeFreeTypeParserRuleCall_5_1_0()); 
	    }
		lv_returntype_8_0=ruleFreeType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationRule());
	        }
       		set(
       			$current, 
       			"returntype",
        		lv_returntype_8_0, 
        		"FreeType");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getOperationAccess().getDocuDocumentationParserRuleCall_6_0()); 
	    }
		lv_docu_9_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_9_0, 
        		"Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getOperationAccess().getDetailCodeDetailCodeParserRuleCall_7_0()); 
	    }
		lv_detailCode_10_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationRule());
	        }
       		set(
       			$current, 
       			"detailCode",
        		lv_detailCode_10_0, 
        		"DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleProtocolClass
entryRuleProtocolClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProtocolClassRule()); }
	 iv_ruleProtocolClass=ruleProtocolClass 
	 { $current=$iv_ruleProtocolClass.current; } 
	 EOF 
;

// Rule ProtocolClass
ruleProtocolClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ProtocolClass' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getProtocolClassAccess().getProtocolClassKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getProtocolClassAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProtocolClassRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getProtocolClassAccess().getDocuDocumentationParserRuleCall_2_0()); 
	    }
		lv_docu_2_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProtocolClassRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_2_0, 
        		"Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_3='extends' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getProtocolClassAccess().getExtendsKeyword_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getProtocolClassRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getProtocolClassAccess().getBaseProtocolClassCrossReference_3_1_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getProtocolClassAccess().getLeftCurlyBracketKeyword_4());
    }
(	otherlv_6='usercode1' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getProtocolClassAccess().getUsercode1Keyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProtocolClassAccess().getUserCode1DetailCodeParserRuleCall_5_1_0()); 
	    }
		lv_userCode1_7_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProtocolClassRule());
	        }
       		set(
       			$current, 
       			"userCode1",
        		lv_userCode1_7_0, 
        		"DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_8='usercode2' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getProtocolClassAccess().getUsercode2Keyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProtocolClassAccess().getUserCode2DetailCodeParserRuleCall_6_1_0()); 
	    }
		lv_userCode2_9_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProtocolClassRule());
	        }
       		set(
       			$current, 
       			"userCode2",
        		lv_userCode2_9_0, 
        		"DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_10='incoming' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getProtocolClassAccess().getIncomingKeyword_7());
    }
	otherlv_11='{' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getProtocolClassAccess().getLeftCurlyBracketKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProtocolClassAccess().getIncomingMessagesMessageParserRuleCall_9_0()); 
	    }
		lv_incomingMessages_12_0=ruleMessage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProtocolClassRule());
	        }
       		add(
       			$current, 
       			"incomingMessages",
        		lv_incomingMessages_12_0, 
        		"Message");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getProtocolClassAccess().getRightCurlyBracketKeyword_10());
    }
	otherlv_14='outgoing' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getProtocolClassAccess().getOutgoingKeyword_11());
    }
	otherlv_15='{' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getProtocolClassAccess().getLeftCurlyBracketKeyword_12());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProtocolClassAccess().getOutgoingMessagesMessageParserRuleCall_13_0()); 
	    }
		lv_outgoingMessages_16_0=ruleMessage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProtocolClassRule());
	        }
       		add(
       			$current, 
       			"outgoingMessages",
        		lv_outgoingMessages_16_0, 
        		"Message");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_17='}' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getProtocolClassAccess().getRightCurlyBracketKeyword_14());
    }
(	otherlv_18='regular' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getProtocolClassAccess().getRegularKeyword_15_0());
    }
	otherlv_19='PortClass' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getProtocolClassAccess().getPortClassKeyword_15_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProtocolClassAccess().getRegularPortClassParserRuleCall_15_2_0()); 
	    }
		lv_regular_20_0=rulePortClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProtocolClassRule());
	        }
       		set(
       			$current, 
       			"regular",
        		lv_regular_20_0, 
        		"PortClass");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_21='conjugate' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getProtocolClassAccess().getConjugateKeyword_16_0());
    }
	otherlv_22='PortClass' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getProtocolClassAccess().getPortClassKeyword_16_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProtocolClassAccess().getConjugatePortClassParserRuleCall_16_2_0()); 
	    }
		lv_conjugate_23_0=rulePortClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProtocolClassRule());
	        }
       		set(
       			$current, 
       			"conjugate",
        		lv_conjugate_23_0, 
        		"PortClass");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getProtocolClassAccess().getSemanticsProtocolSemanticsParserRuleCall_17_0()); 
	    }
		lv_semantics_24_0=ruleProtocolSemantics		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProtocolClassRule());
	        }
       		set(
       			$current, 
       			"semantics",
        		lv_semantics_24_0, 
        		"ProtocolSemantics");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_25='}' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getProtocolClassAccess().getRightCurlyBracketKeyword_18());
    }
)
;





// Entry rule entryRuleMessage
entryRuleMessage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMessageRule()); }
	 iv_ruleMessage=ruleMessage 
	 { $current=$iv_ruleMessage.current; } 
	 EOF 
;

// Rule Message
ruleMessage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Message' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMessageAccess().getMessageKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getMessageAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMessageRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMessageAccess().getLeftParenthesisKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getMessageAccess().getArgumentsTypedIDParserRuleCall_3_0_0()); 
	    }
		lv_arguments_3_0=ruleTypedID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMessageRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_3_0, 
        		"TypedID");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMessageAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMessageAccess().getArgumentsTypedIDParserRuleCall_3_1_1_0()); 
	    }
		lv_arguments_5_0=ruleTypedID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMessageRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_5_0, 
        		"TypedID");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMessageAccess().getRightParenthesisKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMessageAccess().getDocuDocumentationParserRuleCall_5_0()); 
	    }
		lv_docu_7_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMessageRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_7_0, 
        		"Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRulePortClass
entryRulePortClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPortClassRule()); }
	 iv_rulePortClass=rulePortClass 
	 { $current=$iv_rulePortClass.current; } 
	 EOF 
;

// Rule PortClass
rulePortClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPortClassAccess().getLeftCurlyBracketKeyword_0());
    }
(	otherlv_1='usercode' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPortClassAccess().getUsercodeKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPortClassAccess().getUserCodeDetailCodeParserRuleCall_1_1_0()); 
	    }
		lv_userCode_2_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPortClassRule());
	        }
       		set(
       			$current, 
       			"userCode",
        		lv_userCode_2_0, 
        		"DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))?((
(
		{ 
	        newCompositeNode(grammarAccess.getPortClassAccess().getAttributesAttributeParserRuleCall_2_0_0()); 
	    }
		lv_attributes_3_0=ruleAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPortClassRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_3_0, 
        		"Attribute");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPortClassAccess().getOperationsOperationParserRuleCall_2_1_0()); 
	    }
		lv_operations_4_0=ruleOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPortClassRule());
	        }
       		add(
       			$current, 
       			"operations",
        		lv_operations_4_0, 
        		"Operation");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPortClassAccess().getMsgHandlersMessageHandlerParserRuleCall_2_2_0()); 
	    }
		lv_msgHandlers_5_0=ruleMessageHandler		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPortClassRule());
	        }
       		add(
       			$current, 
       			"msgHandlers",
        		lv_msgHandlers_5_0, 
        		"MessageHandler");
	        afterParserOrEnumRuleCall();
	    }

)
))+	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPortClassAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleMessageHandler
entryRuleMessageHandler returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMessageHandlerRule()); }
	 iv_ruleMessageHandler=ruleMessageHandler 
	 { $current=$iv_ruleMessageHandler.current; } 
	 EOF 
;

// Rule MessageHandler
ruleMessageHandler returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='handle' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMessageHandlerAccess().getHandleKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMessageHandlerRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getMessageHandlerAccess().getMsgMessageCrossReference_1_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMessageHandlerAccess().getDetailCodeDetailCodeParserRuleCall_2_0()); 
	    }
		lv_detailCode_2_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMessageHandlerRule());
	        }
       		set(
       			$current, 
       			"detailCode",
        		lv_detailCode_2_0, 
        		"DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleProtocolSemantics
entryRuleProtocolSemantics returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProtocolSemanticsRule()); }
	 iv_ruleProtocolSemantics=ruleProtocolSemantics 
	 { $current=$iv_ruleProtocolSemantics.current; } 
	 EOF 
;

// Rule ProtocolSemantics
ruleProtocolSemantics returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='semantics' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getProtocolSemanticsAccess().getSemanticsKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getProtocolSemanticsAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProtocolSemanticsAccess().getRulesSemanticsRuleParserRuleCall_2_0()); 
	    }
		lv_rules_2_0=ruleSemanticsRule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProtocolSemanticsRule());
	        }
       		add(
       			$current, 
       			"rules",
        		lv_rules_2_0, 
        		"SemanticsRule");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getProtocolSemanticsAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleSemanticsRule
entryRuleSemanticsRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSemanticsRuleRule()); }
	 iv_ruleSemanticsRule=ruleSemanticsRule 
	 { $current=$iv_ruleSemanticsRule.current; } 
	 EOF 
;

// Rule SemanticsRule
ruleSemanticsRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSemanticsRuleAccess().getSemanticsInRuleParserRuleCall_0()); 
    }
    this_SemanticsInRule_0=ruleSemanticsInRule
    { 
        $current = $this_SemanticsInRule_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSemanticsRuleAccess().getSemanticsOutRuleParserRuleCall_1()); 
    }
    this_SemanticsOutRule_1=ruleSemanticsOutRule
    { 
        $current = $this_SemanticsOutRule_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSemanticsInRule
entryRuleSemanticsInRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSemanticsInRuleRule()); }
	 iv_ruleSemanticsInRule=ruleSemanticsInRule 
	 { $current=$iv_ruleSemanticsInRule.current; } 
	 EOF 
;

// Rule SemanticsInRule
ruleSemanticsInRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='in' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSemanticsInRuleAccess().getInKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSemanticsInRuleRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getSemanticsInRuleAccess().getMsgMessageCrossReference_1_0()); 
	}

)
)	otherlv_2='->' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSemanticsInRuleAccess().getHyphenMinusGreaterThanSignKeyword_2());
    }
	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSemanticsInRuleAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSemanticsInRuleAccess().getFollowUpsSemanticsRuleParserRuleCall_4_0()); 
	    }
		lv_followUps_4_0=ruleSemanticsRule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSemanticsInRuleRule());
	        }
       		add(
       			$current, 
       			"followUps",
        		lv_followUps_4_0, 
        		"SemanticsRule");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSemanticsInRuleAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleSemanticsOutRule
entryRuleSemanticsOutRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSemanticsOutRuleRule()); }
	 iv_ruleSemanticsOutRule=ruleSemanticsOutRule 
	 { $current=$iv_ruleSemanticsOutRule.current; } 
	 EOF 
;

// Rule SemanticsOutRule
ruleSemanticsOutRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='out' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSemanticsOutRuleAccess().getOutKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSemanticsOutRuleRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getSemanticsOutRuleAccess().getMsgMessageCrossReference_1_0()); 
	}

)
)	otherlv_2='->' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSemanticsOutRuleAccess().getHyphenMinusGreaterThanSignKeyword_2());
    }
	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSemanticsOutRuleAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSemanticsOutRuleAccess().getFollowUpsSemanticsRuleParserRuleCall_4_0()); 
	    }
		lv_followUps_4_0=ruleSemanticsRule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSemanticsOutRuleRule());
	        }
       		add(
       			$current, 
       			"followUps",
        		lv_followUps_4_0, 
        		"SemanticsRule");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSemanticsOutRuleAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleActorClass
entryRuleActorClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActorClassRule()); }
	 iv_ruleActorClass=ruleActorClass 
	 { $current=$iv_ruleActorClass.current; } 
	 EOF 
;

// Rule ActorClass
ruleActorClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_abstract_0_0=	'abstract' 
    {
        newLeafNode(lv_abstract_0_0, grammarAccess.getActorClassAccess().getAbstractAbstractKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getActorClassRule());
	        }
       		setWithLastConsumed($current, "abstract", true, "abstract");
	    }

)
)?	otherlv_1='ActorClass' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getActorClassAccess().getActorClassKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getActorClassAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getActorClassRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getDocuDocumentationParserRuleCall_3_0()); 
	    }
		lv_docu_3_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorClassRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_3_0, 
        		"Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_4='extends' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getActorClassAccess().getExtendsKeyword_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getActorClassRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getBaseActorClassCrossReference_4_1_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getActorClassAccess().getLeftCurlyBracketKeyword_5());
    }
(	otherlv_7='Interface' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getActorClassAccess().getInterfaceKeyword_6_0());
    }
	otherlv_8='{' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getActorClassAccess().getLeftCurlyBracketKeyword_6_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getIfPortsPortParserRuleCall_6_2_0()); 
	    }
		lv_ifPorts_9_0=rulePort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorClassRule());
	        }
       		add(
       			$current, 
       			"ifPorts",
        		lv_ifPorts_9_0, 
        		"Port");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getIfSPPsSPPRefParserRuleCall_6_3_0()); 
	    }
		lv_ifSPPs_10_0=ruleSPPRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorClassRule());
	        }
       		add(
       			$current, 
       			"ifSPPs",
        		lv_ifSPPs_10_0, 
        		"SPPRef");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getActorClassAccess().getRightCurlyBracketKeyword_6_4());
    }
)?(	otherlv_12='Structure' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getActorClassAccess().getStructureKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getStructureDocuDocumentationParserRuleCall_7_1_0()); 
	    }
		lv_structureDocu_13_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorClassRule());
	        }
       		set(
       			$current, 
       			"structureDocu",
        		lv_structureDocu_13_0, 
        		"Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_14='{' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getActorClassAccess().getLeftCurlyBracketKeyword_7_2());
    }
(	otherlv_15='usercode1' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getActorClassAccess().getUsercode1Keyword_7_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getUserCode1DetailCodeParserRuleCall_7_3_1_0()); 
	    }
		lv_userCode1_16_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorClassRule());
	        }
       		set(
       			$current, 
       			"userCode1",
        		lv_userCode1_16_0, 
        		"DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_17='usercode2' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getActorClassAccess().getUsercode2Keyword_7_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getUserCode2DetailCodeParserRuleCall_7_4_1_0()); 
	    }
		lv_userCode2_18_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorClassRule());
	        }
       		set(
       			$current, 
       			"userCode2",
        		lv_userCode2_18_0, 
        		"DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))?((
(
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getIntPortsPortParserRuleCall_7_5_0_0()); 
	    }
		lv_intPorts_19_0=rulePort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorClassRule());
	        }
       		add(
       			$current, 
       			"intPorts",
        		lv_intPorts_19_0, 
        		"Port");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getExtPortsExternalPortParserRuleCall_7_5_1_0()); 
	    }
		lv_extPorts_20_0=ruleExternalPort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorClassRule());
	        }
       		add(
       			$current, 
       			"extPorts",
        		lv_extPorts_20_0, 
        		"ExternalPort");
	        afterParserOrEnumRuleCall();
	    }

)
))*(
(
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getServiceImplementationsServiceImplementationParserRuleCall_7_6_0()); 
	    }
		lv_serviceImplementations_21_0=ruleServiceImplementation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorClassRule());
	        }
       		add(
       			$current, 
       			"serviceImplementations",
        		lv_serviceImplementations_21_0, 
        		"ServiceImplementation");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getStrSAPsSAPRefParserRuleCall_7_7_0()); 
	    }
		lv_strSAPs_22_0=ruleSAPRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorClassRule());
	        }
       		add(
       			$current, 
       			"strSAPs",
        		lv_strSAPs_22_0, 
        		"SAPRef");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getAttributesAttributeParserRuleCall_7_8_0()); 
	    }
		lv_attributes_23_0=ruleAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorClassRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_23_0, 
        		"Attribute");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getActorRefsActorRefParserRuleCall_7_9_0()); 
	    }
		lv_actorRefs_24_0=ruleActorRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorClassRule());
	        }
       		add(
       			$current, 
       			"actorRefs",
        		lv_actorRefs_24_0, 
        		"ActorRef");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getBindingsBindingParserRuleCall_7_10_0()); 
	    }
		lv_bindings_25_0=ruleBinding		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorClassRule());
	        }
       		add(
       			$current, 
       			"bindings",
        		lv_bindings_25_0, 
        		"Binding");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getConnectionsLayerConnectionParserRuleCall_7_11_0()); 
	    }
		lv_connections_26_0=ruleLayerConnection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorClassRule());
	        }
       		add(
       			$current, 
       			"connections",
        		lv_connections_26_0, 
        		"LayerConnection");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_27='}' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getActorClassAccess().getRightCurlyBracketKeyword_7_12());
    }
)?(	otherlv_28='Behavior' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getActorClassAccess().getBehaviorKeyword_8_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getBehaviorDocuDocumentationParserRuleCall_8_1_0()); 
	    }
		lv_behaviorDocu_29_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorClassRule());
	        }
       		set(
       			$current, 
       			"behaviorDocu",
        		lv_behaviorDocu_29_0, 
        		"Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_30='{' 
    {
    	newLeafNode(otherlv_30, grammarAccess.getActorClassAccess().getLeftCurlyBracketKeyword_8_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getOperationsOperationParserRuleCall_8_3_0()); 
	    }
		lv_operations_31_0=ruleOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorClassRule());
	        }
       		add(
       			$current, 
       			"operations",
        		lv_operations_31_0, 
        		"Operation");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getStateMachineStateMachineParserRuleCall_8_4_0()); 
	    }
		lv_stateMachine_32_0=ruleStateMachine		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorClassRule());
	        }
       		set(
       			$current, 
       			"stateMachine",
        		lv_stateMachine_32_0, 
        		"StateMachine");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_33='}' 
    {
    	newLeafNode(otherlv_33, grammarAccess.getActorClassAccess().getRightCurlyBracketKeyword_8_5());
    }
)?	otherlv_34='}' 
    {
    	newLeafNode(otherlv_34, grammarAccess.getActorClassAccess().getRightCurlyBracketKeyword_9());
    }
)
;







// Entry rule entryRulePort
entryRulePort returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPortRule()); }
	 iv_rulePort=rulePort 
	 { $current=$iv_rulePort.current; } 
	 EOF 
;

// Rule Port
rulePort returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_conjugated_0_0=	'conjugated' 
    {
        newLeafNode(lv_conjugated_0_0, grammarAccess.getPortAccess().getConjugatedConjugatedKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPortRule());
	        }
       		setWithLastConsumed($current, "conjugated", true, "conjugated");
	    }

)
)?	otherlv_1='Port' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPortAccess().getPortKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getPortAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPortRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(	otherlv_3='[' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPortAccess().getLeftSquareBracketKeyword_3_0());
    }
(
(
		lv_multiplicity_4_0=RULE_INT
		{
			newLeafNode(lv_multiplicity_4_0, grammarAccess.getPortAccess().getMultiplicityINTTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPortRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"multiplicity",
        		lv_multiplicity_4_0, 
        		"INT");
	    }

)
)	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPortAccess().getRightSquareBracketKeyword_3_2());
    }
)?	otherlv_6=':' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPortAccess().getColonKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPortRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getPortAccess().getProtocolProtocolClassCrossReference_5_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPortAccess().getDocuDocumentationParserRuleCall_6_0()); 
	    }
		lv_docu_8_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPortRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_8_0, 
        		"Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleExternalPort
entryRuleExternalPort returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExternalPortRule()); }
	 iv_ruleExternalPort=ruleExternalPort 
	 { $current=$iv_ruleExternalPort.current; } 
	 EOF 
;

// Rule ExternalPort
ruleExternalPort returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='external' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExternalPortAccess().getExternalKeyword_0());
    }
	otherlv_1='Port' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExternalPortAccess().getPortKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getExternalPortRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getExternalPortAccess().getIfportPortCrossReference_2_0()); 
	}

)
))
;





// Entry rule entryRuleSAPRef
entryRuleSAPRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSAPRefRule()); }
	 iv_ruleSAPRef=ruleSAPRef 
	 { $current=$iv_ruleSAPRef.current; } 
	 EOF 
;

// Rule SAPRef
ruleSAPRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='SAP' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSAPRefAccess().getSAPKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSAPRefAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSAPRefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSAPRefAccess().getColonKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSAPRefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSAPRefAccess().getProtocolProtocolClassCrossReference_3_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSPPRef
entryRuleSPPRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSPPRefRule()); }
	 iv_ruleSPPRef=ruleSPPRef 
	 { $current=$iv_ruleSPPRef.current; } 
	 EOF 
;

// Rule SPPRef
ruleSPPRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='SPP' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSPPRefAccess().getSPPKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSPPRefAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSPPRefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSPPRefAccess().getColonKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSPPRefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSPPRefAccess().getProtocolProtocolClassCrossReference_3_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleServiceImplementation
entryRuleServiceImplementation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getServiceImplementationRule()); }
	 iv_ruleServiceImplementation=ruleServiceImplementation 
	 { $current=$iv_ruleServiceImplementation.current; } 
	 EOF 
;

// Rule ServiceImplementation
ruleServiceImplementation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ServiceImplementation' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getServiceImplementationAccess().getServiceImplementationKeyword_0());
    }
	otherlv_1='of' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getServiceImplementationAccess().getOfKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getServiceImplementationRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getServiceImplementationAccess().getSppSPPRefCrossReference_2_0()); 
	}

)
))
;





// Entry rule entryRuleLogicalSystem
entryRuleLogicalSystem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLogicalSystemRule()); }
	 iv_ruleLogicalSystem=ruleLogicalSystem 
	 { $current=$iv_ruleLogicalSystem.current; } 
	 EOF 
;

// Rule LogicalSystem
ruleLogicalSystem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='LogicalSystem' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLogicalSystemAccess().getLogicalSystemKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getLogicalSystemAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLogicalSystemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLogicalSystemAccess().getDocuDocumentationParserRuleCall_2_0()); 
	    }
		lv_docu_2_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogicalSystemRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_2_0, 
        		"Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLogicalSystemAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLogicalSystemAccess().getSubSystemsSubSystemRefParserRuleCall_4_0()); 
	    }
		lv_subSystems_4_0=ruleSubSystemRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogicalSystemRule());
	        }
       		add(
       			$current, 
       			"subSystems",
        		lv_subSystems_4_0, 
        		"SubSystemRef");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getLogicalSystemAccess().getBindingsBindingParserRuleCall_5_0()); 
	    }
		lv_bindings_5_0=ruleBinding		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogicalSystemRule());
	        }
       		add(
       			$current, 
       			"bindings",
        		lv_bindings_5_0, 
        		"Binding");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getLogicalSystemAccess().getConnectionsLayerConnectionParserRuleCall_6_0()); 
	    }
		lv_connections_6_0=ruleLayerConnection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogicalSystemRule());
	        }
       		add(
       			$current, 
       			"connections",
        		lv_connections_6_0, 
        		"LayerConnection");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getLogicalSystemAccess().getRightCurlyBracketKeyword_7());
    }
)
;







// Entry rule entryRuleSubSystemRef
entryRuleSubSystemRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubSystemRefRule()); }
	 iv_ruleSubSystemRef=ruleSubSystemRef 
	 { $current=$iv_ruleSubSystemRef.current; } 
	 EOF 
;

// Rule SubSystemRef
ruleSubSystemRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='SubSystemRef' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSubSystemRefAccess().getSubSystemRefKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSubSystemRefAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubSystemRefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSubSystemRefAccess().getColonKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubSystemRefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSubSystemRefAccess().getTypeSubSystemClassCrossReference_3_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSubSystemRefAccess().getDocuDocumentationParserRuleCall_4_0()); 
	    }
		lv_docu_4_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubSystemRefRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_4_0, 
        		"Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleSubSystemClass
entryRuleSubSystemClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubSystemClassRule()); }
	 iv_ruleSubSystemClass=ruleSubSystemClass 
	 { $current=$iv_ruleSubSystemClass.current; } 
	 EOF 
;

// Rule SubSystemClass
ruleSubSystemClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='SubSystemClass' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSubSystemClassAccess().getSubSystemClassKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSubSystemClassAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubSystemClassRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSubSystemClassAccess().getDocuDocumentationParserRuleCall_2_0()); 
	    }
		lv_docu_2_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubSystemClassRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_2_0, 
        		"Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSubSystemClassAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='usercode1' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSubSystemClassAccess().getUsercode1Keyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubSystemClassAccess().getUserCode1DetailCodeParserRuleCall_4_1_0()); 
	    }
		lv_userCode1_5_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubSystemClassRule());
	        }
       		set(
       			$current, 
       			"userCode1",
        		lv_userCode1_5_0, 
        		"DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_6='usercode2' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSubSystemClassAccess().getUsercode2Keyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubSystemClassAccess().getUserCode2DetailCodeParserRuleCall_5_1_0()); 
	    }
		lv_userCode2_7_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubSystemClassRule());
	        }
       		set(
       			$current, 
       			"userCode2",
        		lv_userCode2_7_0, 
        		"DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getSubSystemClassAccess().getRelayPortsPortParserRuleCall_6_0()); 
	    }
		lv_relayPorts_8_0=rulePort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubSystemClassRule());
	        }
       		add(
       			$current, 
       			"relayPorts",
        		lv_relayPorts_8_0, 
        		"Port");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getSubSystemClassAccess().getIfSPPsSPPRefParserRuleCall_7_0()); 
	    }
		lv_ifSPPs_9_0=ruleSPPRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubSystemClassRule());
	        }
       		add(
       			$current, 
       			"ifSPPs",
        		lv_ifSPPs_9_0, 
        		"SPPRef");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getSubSystemClassAccess().getActorRefsActorRefParserRuleCall_8_0()); 
	    }
		lv_actorRefs_10_0=ruleActorRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubSystemClassRule());
	        }
       		add(
       			$current, 
       			"actorRefs",
        		lv_actorRefs_10_0, 
        		"ActorRef");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getSubSystemClassAccess().getBindingsBindingParserRuleCall_9_0()); 
	    }
		lv_bindings_11_0=ruleBinding		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubSystemClassRule());
	        }
       		add(
       			$current, 
       			"bindings",
        		lv_bindings_11_0, 
        		"Binding");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getSubSystemClassAccess().getConnectionsLayerConnectionParserRuleCall_10_0()); 
	    }
		lv_connections_12_0=ruleLayerConnection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubSystemClassRule());
	        }
       		add(
       			$current, 
       			"connections",
        		lv_connections_12_0, 
        		"LayerConnection");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getSubSystemClassAccess().getThreadsLogicalThreadParserRuleCall_11_0()); 
	    }
		lv_threads_13_0=ruleLogicalThread		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubSystemClassRule());
	        }
       		add(
       			$current, 
       			"threads",
        		lv_threads_13_0, 
        		"LogicalThread");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getSubSystemClassAccess().getRightCurlyBracketKeyword_12());
    }
)
;





// Entry rule entryRuleLogicalThread
entryRuleLogicalThread returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLogicalThreadRule()); }
	 iv_ruleLogicalThread=ruleLogicalThread 
	 { $current=$iv_ruleLogicalThread.current; } 
	 EOF 
;

// Rule LogicalThread
ruleLogicalThread returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='LogicalThread' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLogicalThreadAccess().getLogicalThreadKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getLogicalThreadAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLogicalThreadRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='prio' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLogicalThreadAccess().getPrioKeyword_2());
    }
	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLogicalThreadAccess().getEqualsSignKeyword_3());
    }
(
(
		lv_prio_4_0=RULE_INT
		{
			newLeafNode(lv_prio_4_0, grammarAccess.getLogicalThreadAccess().getPrioINTTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLogicalThreadRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"prio",
        		lv_prio_4_0, 
        		"INT");
	    }

)
)	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getLogicalThreadAccess().getLeftCurlyBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLogicalThreadAccess().getInstancesActorInstancePathParserRuleCall_6_0()); 
	    }
		lv_instances_6_0=ruleActorInstancePath		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogicalThreadRule());
	        }
       		add(
       			$current, 
       			"instances",
        		lv_instances_6_0, 
        		"ActorInstancePath");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getLogicalThreadAccess().getCommaKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLogicalThreadAccess().getInstancesActorInstancePathParserRuleCall_7_1_0()); 
	    }
		lv_instances_8_0=ruleActorInstancePath		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogicalThreadRule());
	        }
       		add(
       			$current, 
       			"instances",
        		lv_instances_8_0, 
        		"ActorInstancePath");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getLogicalThreadAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleActorInstancePath
entryRuleActorInstancePath returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActorInstancePathRule()); }
	 iv_ruleActorInstancePath=ruleActorInstancePath 
	 { $current=$iv_ruleActorInstancePath.current; } 
	 EOF 
;

// Rule ActorInstancePath
ruleActorInstancePath returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_segments_0_0=RULE_ID
		{
			newLeafNode(lv_segments_0_0, grammarAccess.getActorInstancePathAccess().getSegmentsIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getActorInstancePathRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"segments",
        		lv_segments_0_0, 
        		"ID");
	    }

)
)(	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getActorInstancePathAccess().getFullStopKeyword_1_0());
    }
(
(
		lv_segments_2_0=RULE_ID
		{
			newLeafNode(lv_segments_2_0, grammarAccess.getActorInstancePathAccess().getSegmentsIDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getActorInstancePathRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"segments",
        		lv_segments_2_0, 
        		"ID");
	    }

)
))*)
;





// Entry rule entryRuleBinding
entryRuleBinding returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBindingRule()); }
	 iv_ruleBinding=ruleBinding 
	 { $current=$iv_ruleBinding.current; } 
	 EOF 
;

// Rule Binding
ruleBinding returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Binding' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBindingAccess().getBindingKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingAccess().getEndpoint1BindingEndPointParserRuleCall_1_0()); 
	    }
		lv_endpoint1_1_0=ruleBindingEndPoint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingRule());
	        }
       		set(
       			$current, 
       			"endpoint1",
        		lv_endpoint1_1_0, 
        		"BindingEndPoint");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='and' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBindingAccess().getAndKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingAccess().getEndpoint2BindingEndPointParserRuleCall_3_0()); 
	    }
		lv_endpoint2_3_0=ruleBindingEndPoint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingRule());
	        }
       		set(
       			$current, 
       			"endpoint2",
        		lv_endpoint2_3_0, 
        		"BindingEndPoint");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleBindingEndPoint
entryRuleBindingEndPoint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBindingEndPointRule()); }
	 iv_ruleBindingEndPoint=ruleBindingEndPoint 
	 { $current=$iv_ruleBindingEndPoint.current; } 
	 EOF 
;

// Rule BindingEndPoint
ruleBindingEndPoint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBindingEndPointRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getBindingEndPointAccess().getActorRefActorContainerRefCrossReference_0_0_0()); 
	}

)
)	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBindingEndPointAccess().getFullStopKeyword_0_1());
    }
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBindingEndPointRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getBindingEndPointAccess().getPortPortCrossReference_1_0()); 
	}

)
))
;





// Entry rule entryRuleLayerConnection
entryRuleLayerConnection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLayerConnectionRule()); }
	 iv_ruleLayerConnection=ruleLayerConnection 
	 { $current=$iv_ruleLayerConnection.current; } 
	 EOF 
;

// Rule LayerConnection
ruleLayerConnection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='LayerConnection' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLayerConnectionAccess().getLayerConnectionKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLayerConnectionAccess().getFromSAPointParserRuleCall_1_0()); 
	    }
		lv_from_1_0=ruleSAPoint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLayerConnectionRule());
	        }
       		set(
       			$current, 
       			"from",
        		lv_from_1_0, 
        		"SAPoint");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='satisfied_by' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLayerConnectionAccess().getSatisfied_byKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLayerConnectionAccess().getToSPPointParserRuleCall_3_0()); 
	    }
		lv_to_3_0=ruleSPPoint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLayerConnectionRule());
	        }
       		set(
       			$current, 
       			"to",
        		lv_to_3_0, 
        		"SPPoint");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSAPoint
entryRuleSAPoint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSAPointRule()); }
	 iv_ruleSAPoint=ruleSAPoint 
	 { $current=$iv_ruleSAPoint.current; } 
	 EOF 
;

// Rule SAPoint
ruleSAPoint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSAPointAccess().getRefSAPointParserRuleCall_0()); 
    }
    this_RefSAPoint_0=ruleRefSAPoint
    { 
        $current = $this_RefSAPoint_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSAPointAccess().getRelaySAPointParserRuleCall_1()); 
    }
    this_RelaySAPoint_1=ruleRelaySAPoint
    { 
        $current = $this_RelaySAPoint_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleRefSAPoint
entryRuleRefSAPoint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRefSAPointRule()); }
	 iv_ruleRefSAPoint=ruleRefSAPoint 
	 { $current=$iv_ruleRefSAPoint.current; } 
	 EOF 
;

// Rule RefSAPoint
ruleRefSAPoint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ref' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRefSAPointAccess().getRefKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRefSAPointRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getRefSAPointAccess().getRefActorContainerRefCrossReference_1_0()); 
	}

)
))
;





// Entry rule entryRuleRelaySAPoint
entryRuleRelaySAPoint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelaySAPointRule()); }
	 iv_ruleRelaySAPoint=ruleRelaySAPoint 
	 { $current=$iv_ruleRelaySAPoint.current; } 
	 EOF 
;

// Rule RelaySAPoint
ruleRelaySAPoint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='relay_sap' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRelaySAPointAccess().getRelay_sapKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelaySAPointRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getRelaySAPointAccess().getRelaySPPRefCrossReference_1_0()); 
	}

)
))
;





// Entry rule entryRuleSPPoint
entryRuleSPPoint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSPPointRule()); }
	 iv_ruleSPPoint=ruleSPPoint 
	 { $current=$iv_ruleSPPoint.current; } 
	 EOF 
;

// Rule SPPoint
ruleSPPoint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSPPointRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getSPPointAccess().getRefActorContainerRefCrossReference_0_0()); 
	}

)
)	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSPPointAccess().getFullStopKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSPPointRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getSPPointAccess().getServiceSPPRefCrossReference_2_0()); 
	}

)
))
;





// Entry rule entryRuleActorRef
entryRuleActorRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActorRefRule()); }
	 iv_ruleActorRef=ruleActorRef 
	 { $current=$iv_ruleActorRef.current; } 
	 EOF 
;

// Rule ActorRef
ruleActorRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ActorRef' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getActorRefAccess().getActorRefKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getActorRefAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getActorRefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getActorRefAccess().getColonKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getActorRefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getActorRefAccess().getTypeActorClassCrossReference_3_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getActorRefAccess().getDocuDocumentationParserRuleCall_4_0()); 
	    }
		lv_docu_4_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorRefRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_4_0, 
        		"Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleStateGraphNode
entryRuleStateGraphNode returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStateGraphNodeRule()); }
	 iv_ruleStateGraphNode=ruleStateGraphNode 
	 { $current=$iv_ruleStateGraphNode.current; } 
	 EOF 
;

// Rule StateGraphNode
ruleStateGraphNode returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getStateGraphNodeAccess().getStateParserRuleCall_0()); 
    }
    this_State_0=ruleState
    { 
        $current = $this_State_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStateGraphNodeAccess().getChoicePointParserRuleCall_1()); 
    }
    this_ChoicePoint_1=ruleChoicePoint
    { 
        $current = $this_ChoicePoint_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStateGraphNodeAccess().getTrPointParserRuleCall_2()); 
    }
    this_TrPoint_2=ruleTrPoint
    { 
        $current = $this_TrPoint_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;







// Entry rule entryRuleState
entryRuleState returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStateRule()); }
	 iv_ruleState=ruleState 
	 { $current=$iv_ruleState.current; } 
	 EOF 
;

// Rule State
ruleState returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getStateAccess().getBaseStateParserRuleCall_0()); 
    }
    this_BaseState_0=ruleBaseState
    { 
        $current = $this_BaseState_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStateAccess().getRefinedStateParserRuleCall_1()); 
    }
    this_RefinedState_1=ruleRefinedState
    { 
        $current = $this_RefinedState_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleStateGraph
entryRuleStateGraph returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStateGraphRule()); }
	 iv_ruleStateGraph=ruleStateGraph 
	 { $current=$iv_ruleStateGraph.current; } 
	 EOF 
;

// Rule StateGraph
ruleStateGraph returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getStateGraphAccess().getStateGraphAction_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStateGraphAccess().getLeftCurlyBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getStateGraphAccess().getStatesStateParserRuleCall_2_0_0()); 
	    }
		lv_states_2_0=ruleState		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateGraphRule());
	        }
       		add(
       			$current, 
       			"states",
        		lv_states_2_0, 
        		"State");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStateGraphAccess().getTrPointsTrPointParserRuleCall_2_1_0()); 
	    }
		lv_trPoints_3_0=ruleTrPoint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateGraphRule());
	        }
       		add(
       			$current, 
       			"trPoints",
        		lv_trPoints_3_0, 
        		"TrPoint");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStateGraphAccess().getChPointsChoicePointParserRuleCall_2_2_0()); 
	    }
		lv_chPoints_4_0=ruleChoicePoint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateGraphRule());
	        }
       		add(
       			$current, 
       			"chPoints",
        		lv_chPoints_4_0, 
        		"ChoicePoint");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStateGraphAccess().getTransitionsTransitionParserRuleCall_2_3_0()); 
	    }
		lv_transitions_5_0=ruleTransition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateGraphRule());
	        }
       		add(
       			$current, 
       			"transitions",
        		lv_transitions_5_0, 
        		"Transition");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getStateGraphAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleStateMachine
entryRuleStateMachine returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStateMachineRule()); }
	 iv_ruleStateMachine=ruleStateMachine 
	 { $current=$iv_ruleStateMachine.current; } 
	 EOF 
;

// Rule StateMachine
ruleStateMachine returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getStateMachineAccess().getStateGraphAction_0(),
            $current);
    }
)	otherlv_1='StateMachine' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStateMachineAccess().getStateMachineKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStateMachineAccess().getLeftCurlyBracketKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineAccess().getStatesStateParserRuleCall_3_0_0()); 
	    }
		lv_states_3_0=ruleState		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineRule());
	        }
       		add(
       			$current, 
       			"states",
        		lv_states_3_0, 
        		"State");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineAccess().getTrPointsTrPointParserRuleCall_3_1_0()); 
	    }
		lv_trPoints_4_0=ruleTrPoint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineRule());
	        }
       		add(
       			$current, 
       			"trPoints",
        		lv_trPoints_4_0, 
        		"TrPoint");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineAccess().getChPointsChoicePointParserRuleCall_3_2_0()); 
	    }
		lv_chPoints_5_0=ruleChoicePoint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineRule());
	        }
       		add(
       			$current, 
       			"chPoints",
        		lv_chPoints_5_0, 
        		"ChoicePoint");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineAccess().getTransitionsTransitionParserRuleCall_3_3_0()); 
	    }
		lv_transitions_6_0=ruleTransition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineRule());
	        }
       		add(
       			$current, 
       			"transitions",
        		lv_transitions_6_0, 
        		"Transition");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getStateMachineAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleBaseState
entryRuleBaseState returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBaseStateRule()); }
	 iv_ruleBaseState=ruleBaseState 
	 { $current=$iv_ruleBaseState.current; } 
	 EOF 
;

// Rule BaseState
ruleBaseState returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='State' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBaseStateAccess().getStateKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getBaseStateAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBaseStateRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBaseStateAccess().getDocuDocumentationParserRuleCall_2_0()); 
	    }
		lv_docu_2_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBaseStateRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_2_0, 
        		"Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBaseStateAccess().getLeftCurlyBracketKeyword_3_0());
    }
(	otherlv_4='entry' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getBaseStateAccess().getEntryKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBaseStateAccess().getEntryCodeDetailCodeParserRuleCall_3_1_1_0()); 
	    }
		lv_entryCode_5_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBaseStateRule());
	        }
       		set(
       			$current, 
       			"entryCode",
        		lv_entryCode_5_0, 
        		"DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_6='exit' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getBaseStateAccess().getExitKeyword_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBaseStateAccess().getExitCodeDetailCodeParserRuleCall_3_2_1_0()); 
	    }
		lv_exitCode_7_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBaseStateRule());
	        }
       		set(
       			$current, 
       			"exitCode",
        		lv_exitCode_7_0, 
        		"DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_8='subgraph' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getBaseStateAccess().getSubgraphKeyword_3_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBaseStateAccess().getSubgraphStateGraphParserRuleCall_3_3_1_0()); 
	    }
		lv_subgraph_9_0=ruleStateGraph		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBaseStateRule());
	        }
       		set(
       			$current, 
       			"subgraph",
        		lv_subgraph_9_0, 
        		"StateGraph");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getBaseStateAccess().getRightCurlyBracketKeyword_3_4());
    }
)?)
;





// Entry rule entryRuleRefinedState
entryRuleRefinedState returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRefinedStateRule()); }
	 iv_ruleRefinedState=ruleRefinedState 
	 { $current=$iv_ruleRefinedState.current; } 
	 EOF 
;

// Rule RefinedState
ruleRefinedState returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='RefinedState' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRefinedStateAccess().getRefinedStateKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRefinedStateRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRefinedStateAccess().getBaseBaseStateCrossReference_1_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRefinedStateAccess().getDocuDocumentationParserRuleCall_2_0()); 
	    }
		lv_docu_2_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRefinedStateRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_2_0, 
        		"Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRefinedStateAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='entry' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRefinedStateAccess().getEntryKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRefinedStateAccess().getEntryCodeDetailCodeParserRuleCall_4_1_0()); 
	    }
		lv_entryCode_5_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRefinedStateRule());
	        }
       		set(
       			$current, 
       			"entryCode",
        		lv_entryCode_5_0, 
        		"DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_6='exit' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRefinedStateAccess().getExitKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRefinedStateAccess().getExitCodeDetailCodeParserRuleCall_5_1_0()); 
	    }
		lv_exitCode_7_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRefinedStateRule());
	        }
       		set(
       			$current, 
       			"exitCode",
        		lv_exitCode_7_0, 
        		"DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_8='subgraph' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRefinedStateAccess().getSubgraphKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRefinedStateAccess().getSubgraphStateGraphParserRuleCall_6_1_0()); 
	    }
		lv_subgraph_9_0=ruleStateGraph		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRefinedStateRule());
	        }
       		set(
       			$current, 
       			"subgraph",
        		lv_subgraph_9_0, 
        		"StateGraph");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getRefinedStateAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleDetailCode
entryRuleDetailCode returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDetailCodeRule()); }
	 iv_ruleDetailCode=ruleDetailCode 
	 { $current=$iv_ruleDetailCode.current; } 
	 EOF 
;

// Rule DetailCode
ruleDetailCode returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDetailCodeAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		lv_commands_1_0=RULE_STRING
		{
			newLeafNode(lv_commands_1_0, grammarAccess.getDetailCodeAccess().getCommandsSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDetailCodeRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"commands",
        		lv_commands_1_0, 
        		"STRING");
	    }

)
)+	otherlv_2='}' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDetailCodeAccess().getRightCurlyBracketKeyword_2());
    }
)
;





// Entry rule entryRuleTrPoint
entryRuleTrPoint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTrPointRule()); }
	 iv_ruleTrPoint=ruleTrPoint 
	 { $current=$iv_ruleTrPoint.current; } 
	 EOF 
;

// Rule TrPoint
ruleTrPoint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTrPointAccess().getTransitionPointParserRuleCall_0()); 
    }
    this_TransitionPoint_0=ruleTransitionPoint
    { 
        $current = $this_TransitionPoint_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTrPointAccess().getEntryPointParserRuleCall_1()); 
    }
    this_EntryPoint_1=ruleEntryPoint
    { 
        $current = $this_EntryPoint_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTrPointAccess().getExitPointParserRuleCall_2()); 
    }
    this_ExitPoint_2=ruleExitPoint
    { 
        $current = $this_ExitPoint_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleTransitionPoint
entryRuleTransitionPoint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTransitionPointRule()); }
	 iv_ruleTransitionPoint=ruleTransitionPoint 
	 { $current=$iv_ruleTransitionPoint.current; } 
	 EOF 
;

// Rule TransitionPoint
ruleTransitionPoint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_handler_0_0=	'handler' 
    {
        newLeafNode(lv_handler_0_0, grammarAccess.getTransitionPointAccess().getHandlerHandlerKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransitionPointRule());
	        }
       		setWithLastConsumed($current, "handler", true, "handler");
	    }

)
)?	otherlv_1='TransitionPoint' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTransitionPointAccess().getTransitionPointKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getTransitionPointAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransitionPointRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleEntryPoint
entryRuleEntryPoint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEntryPointRule()); }
	 iv_ruleEntryPoint=ruleEntryPoint 
	 { $current=$iv_ruleEntryPoint.current; } 
	 EOF 
;

// Rule EntryPoint
ruleEntryPoint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='EntryPoint' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEntryPointAccess().getEntryPointKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getEntryPointAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEntryPointRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleExitPoint
entryRuleExitPoint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExitPointRule()); }
	 iv_ruleExitPoint=ruleExitPoint 
	 { $current=$iv_ruleExitPoint.current; } 
	 EOF 
;

// Rule ExitPoint
ruleExitPoint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ExitPoint' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExitPointAccess().getExitPointKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getExitPointAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExitPointRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleChoicePoint
entryRuleChoicePoint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getChoicePointRule()); }
	 iv_ruleChoicePoint=ruleChoicePoint 
	 { $current=$iv_ruleChoicePoint.current; } 
	 EOF 
;

// Rule ChoicePoint
ruleChoicePoint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ChoicePoint' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getChoicePointAccess().getChoicePointKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getChoicePointAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getChoicePointRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getChoicePointAccess().getDocuDocumentationParserRuleCall_2_0()); 
	    }
		lv_docu_2_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getChoicePointRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_2_0, 
        		"Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleTransition
entryRuleTransition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTransitionRule()); }
	 iv_ruleTransition=ruleTransition 
	 { $current=$iv_ruleTransition.current; } 
	 EOF 
;

// Rule Transition
ruleTransition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTransitionAccess().getInitialTransitionParserRuleCall_0()); 
    }
    this_InitialTransition_0=ruleInitialTransition
    { 
        $current = $this_InitialTransition_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTransitionAccess().getNonInitialTransitionParserRuleCall_1()); 
    }
    this_NonInitialTransition_1=ruleNonInitialTransition
    { 
        $current = $this_NonInitialTransition_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleNonInitialTransition
entryRuleNonInitialTransition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNonInitialTransitionRule()); }
	 iv_ruleNonInitialTransition=ruleNonInitialTransition 
	 { $current=$iv_ruleNonInitialTransition.current; } 
	 EOF 
;

// Rule NonInitialTransition
ruleNonInitialTransition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNonInitialTransitionAccess().getTriggeredTransitionParserRuleCall_0()); 
    }
    this_TriggeredTransition_0=ruleTriggeredTransition
    { 
        $current = $this_TriggeredTransition_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNonInitialTransitionAccess().getContinuationTransitionParserRuleCall_1()); 
    }
    this_ContinuationTransition_1=ruleContinuationTransition
    { 
        $current = $this_ContinuationTransition_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNonInitialTransitionAccess().getCPBranchTransitionParserRuleCall_2()); 
    }
    this_CPBranchTransition_2=ruleCPBranchTransition
    { 
        $current = $this_CPBranchTransition_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleInitialTransition
entryRuleInitialTransition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInitialTransitionRule()); }
	 iv_ruleInitialTransition=ruleInitialTransition 
	 { $current=$iv_ruleInitialTransition.current; } 
	 EOF 
;

// Rule InitialTransition
ruleInitialTransition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Transition' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInitialTransitionAccess().getTransitionKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getInitialTransitionAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInitialTransitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)?	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInitialTransitionAccess().getColonKeyword_2());
    }
	otherlv_3='initial' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInitialTransitionAccess().getInitialKeyword_3());
    }
	otherlv_4='->' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInitialTransitionAccess().getHyphenMinusGreaterThanSignKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInitialTransitionAccess().getToTransitionTerminalParserRuleCall_5_0()); 
	    }
		lv_to_5_0=ruleTransitionTerminal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInitialTransitionRule());
	        }
       		set(
       			$current, 
       			"to",
        		lv_to_5_0, 
        		"TransitionTerminal");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInitialTransitionAccess().getDocuDocumentationParserRuleCall_6_0()); 
	    }
		lv_docu_6_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInitialTransitionRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_6_0, 
        		"Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInitialTransitionAccess().getLeftCurlyBracketKeyword_7());
    }
(	otherlv_8='action' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getInitialTransitionAccess().getActionKeyword_8_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInitialTransitionAccess().getActionDetailCodeParserRuleCall_8_1_0()); 
	    }
		lv_action_9_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInitialTransitionRule());
	        }
       		set(
       			$current, 
       			"action",
        		lv_action_9_0, 
        		"DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getInitialTransitionAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleContinuationTransition
entryRuleContinuationTransition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getContinuationTransitionRule()); }
	 iv_ruleContinuationTransition=ruleContinuationTransition 
	 { $current=$iv_ruleContinuationTransition.current; } 
	 EOF 
;

// Rule ContinuationTransition
ruleContinuationTransition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Transition' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getContinuationTransitionAccess().getTransitionKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getContinuationTransitionAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getContinuationTransitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)?	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getContinuationTransitionAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContinuationTransitionAccess().getFromTransitionTerminalParserRuleCall_3_0()); 
	    }
		lv_from_3_0=ruleTransitionTerminal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContinuationTransitionRule());
	        }
       		set(
       			$current, 
       			"from",
        		lv_from_3_0, 
        		"TransitionTerminal");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='->' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getContinuationTransitionAccess().getHyphenMinusGreaterThanSignKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContinuationTransitionAccess().getToTransitionTerminalParserRuleCall_5_0()); 
	    }
		lv_to_5_0=ruleTransitionTerminal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContinuationTransitionRule());
	        }
       		set(
       			$current, 
       			"to",
        		lv_to_5_0, 
        		"TransitionTerminal");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getContinuationTransitionAccess().getDocuDocumentationParserRuleCall_6_0()); 
	    }
		lv_docu_6_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContinuationTransitionRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_6_0, 
        		"Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getContinuationTransitionAccess().getLeftCurlyBracketKeyword_7_0());
    }
(	otherlv_8='action' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getContinuationTransitionAccess().getActionKeyword_7_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContinuationTransitionAccess().getActionDetailCodeParserRuleCall_7_1_1_0()); 
	    }
		lv_action_9_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContinuationTransitionRule());
	        }
       		set(
       			$current, 
       			"action",
        		lv_action_9_0, 
        		"DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getContinuationTransitionAccess().getRightCurlyBracketKeyword_7_2());
    }
)?)
;





// Entry rule entryRuleTriggeredTransition
entryRuleTriggeredTransition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTriggeredTransitionRule()); }
	 iv_ruleTriggeredTransition=ruleTriggeredTransition 
	 { $current=$iv_ruleTriggeredTransition.current; } 
	 EOF 
;

// Rule TriggeredTransition
ruleTriggeredTransition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Transition' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTriggeredTransitionAccess().getTransitionKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getTriggeredTransitionAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTriggeredTransitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)?	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTriggeredTransitionAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTriggeredTransitionAccess().getFromTransitionTerminalParserRuleCall_3_0()); 
	    }
		lv_from_3_0=ruleTransitionTerminal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTriggeredTransitionRule());
	        }
       		set(
       			$current, 
       			"from",
        		lv_from_3_0, 
        		"TransitionTerminal");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='->' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTriggeredTransitionAccess().getHyphenMinusGreaterThanSignKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTriggeredTransitionAccess().getToTransitionTerminalParserRuleCall_5_0()); 
	    }
		lv_to_5_0=ruleTransitionTerminal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTriggeredTransitionRule());
	        }
       		set(
       			$current, 
       			"to",
        		lv_to_5_0, 
        		"TransitionTerminal");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTriggeredTransitionAccess().getDocuDocumentationParserRuleCall_6_0()); 
	    }
		lv_docu_6_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTriggeredTransitionRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_6_0, 
        		"Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTriggeredTransitionAccess().getLeftCurlyBracketKeyword_7());
    }
	otherlv_8='triggers' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getTriggeredTransitionAccess().getTriggersKeyword_8());
    }
	otherlv_9='{' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getTriggeredTransitionAccess().getLeftCurlyBracketKeyword_9());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTriggeredTransitionAccess().getTriggersTriggerParserRuleCall_10_0()); 
	    }
		lv_triggers_10_0=ruleTrigger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTriggeredTransitionRule());
	        }
       		add(
       			$current, 
       			"triggers",
        		lv_triggers_10_0, 
        		"Trigger");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11='or' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getTriggeredTransitionAccess().getOrKeyword_11_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTriggeredTransitionAccess().getTriggersTriggerParserRuleCall_11_1_0()); 
	    }
		lv_triggers_12_0=ruleTrigger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTriggeredTransitionRule());
	        }
       		add(
       			$current, 
       			"triggers",
        		lv_triggers_12_0, 
        		"Trigger");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getTriggeredTransitionAccess().getRightCurlyBracketKeyword_12());
    }
(	otherlv_14='action' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getTriggeredTransitionAccess().getActionKeyword_13_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTriggeredTransitionAccess().getActionDetailCodeParserRuleCall_13_1_0()); 
	    }
		lv_action_15_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTriggeredTransitionRule());
	        }
       		set(
       			$current, 
       			"action",
        		lv_action_15_0, 
        		"DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_16='}' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getTriggeredTransitionAccess().getRightCurlyBracketKeyword_14());
    }
)
;





// Entry rule entryRuleCPBranchTransition
entryRuleCPBranchTransition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCPBranchTransitionRule()); }
	 iv_ruleCPBranchTransition=ruleCPBranchTransition 
	 { $current=$iv_ruleCPBranchTransition.current; } 
	 EOF 
;

// Rule CPBranchTransition
ruleCPBranchTransition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Transition' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCPBranchTransitionAccess().getTransitionKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getCPBranchTransitionAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCPBranchTransitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)?	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCPBranchTransitionAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCPBranchTransitionAccess().getFromTransitionTerminalParserRuleCall_3_0()); 
	    }
		lv_from_3_0=ruleTransitionTerminal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCPBranchTransitionRule());
	        }
       		set(
       			$current, 
       			"from",
        		lv_from_3_0, 
        		"TransitionTerminal");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='->' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCPBranchTransitionAccess().getHyphenMinusGreaterThanSignKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCPBranchTransitionAccess().getToTransitionTerminalParserRuleCall_5_0()); 
	    }
		lv_to_5_0=ruleTransitionTerminal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCPBranchTransitionRule());
	        }
       		set(
       			$current, 
       			"to",
        		lv_to_5_0, 
        		"TransitionTerminal");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCPBranchTransitionAccess().getDocuDocumentationParserRuleCall_6_0()); 
	    }
		lv_docu_6_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCPBranchTransitionRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_6_0, 
        		"Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getCPBranchTransitionAccess().getLeftCurlyBracketKeyword_7());
    }
	otherlv_8='cond' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getCPBranchTransitionAccess().getCondKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCPBranchTransitionAccess().getConditionDetailCodeParserRuleCall_9_0()); 
	    }
		lv_condition_9_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCPBranchTransitionRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_9_0, 
        		"DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_10='action' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getCPBranchTransitionAccess().getActionKeyword_10_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCPBranchTransitionAccess().getActionDetailCodeParserRuleCall_10_1_0()); 
	    }
		lv_action_11_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCPBranchTransitionRule());
	        }
       		set(
       			$current, 
       			"action",
        		lv_action_11_0, 
        		"DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getCPBranchTransitionAccess().getRightCurlyBracketKeyword_11());
    }
)
;





// Entry rule entryRuleTransitionTerminal
entryRuleTransitionTerminal returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTransitionTerminalRule()); }
	 iv_ruleTransitionTerminal=ruleTransitionTerminal 
	 { $current=$iv_ruleTransitionTerminal.current; } 
	 EOF 
;

// Rule TransitionTerminal
ruleTransitionTerminal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTransitionTerminalAccess().getStateTerminalParserRuleCall_0()); 
    }
    this_StateTerminal_0=ruleStateTerminal
    { 
        $current = $this_StateTerminal_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTransitionTerminalAccess().getTrPointTerminalParserRuleCall_1()); 
    }
    this_TrPointTerminal_1=ruleTrPointTerminal
    { 
        $current = $this_TrPointTerminal_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTransitionTerminalAccess().getSubStateTrPointTerminalParserRuleCall_2()); 
    }
    this_SubStateTrPointTerminal_2=ruleSubStateTrPointTerminal
    { 
        $current = $this_SubStateTrPointTerminal_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTransitionTerminalAccess().getChoicepointTerminalParserRuleCall_3()); 
    }
    this_ChoicepointTerminal_3=ruleChoicepointTerminal
    { 
        $current = $this_ChoicepointTerminal_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleStateTerminal
entryRuleStateTerminal returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStateTerminalRule()); }
	 iv_ruleStateTerminal=ruleStateTerminal 
	 { $current=$iv_ruleStateTerminal.current; } 
	 EOF 
;

// Rule StateTerminal
ruleStateTerminal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateTerminalRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getStateTerminalAccess().getStateBaseStateCrossReference_0()); 
	}

)
)
;





// Entry rule entryRuleTrPointTerminal
entryRuleTrPointTerminal returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTrPointTerminalRule()); }
	 iv_ruleTrPointTerminal=ruleTrPointTerminal 
	 { $current=$iv_ruleTrPointTerminal.current; } 
	 EOF 
;

// Rule TrPointTerminal
ruleTrPointTerminal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='my' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTrPointTerminalAccess().getMyKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTrPointTerminalRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getTrPointTerminalAccess().getTrPointTrPointCrossReference_1_0()); 
	}

)
))
;





// Entry rule entryRuleSubStateTrPointTerminal
entryRuleSubStateTrPointTerminal returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubStateTrPointTerminalRule()); }
	 iv_ruleSubStateTrPointTerminal=ruleSubStateTrPointTerminal 
	 { $current=$iv_ruleSubStateTrPointTerminal.current; } 
	 EOF 
;

// Rule SubStateTrPointTerminal
ruleSubStateTrPointTerminal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubStateTrPointTerminalRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getSubStateTrPointTerminalAccess().getTrPointTrPointCrossReference_0_0()); 
	}

)
)	otherlv_1='of' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSubStateTrPointTerminalAccess().getOfKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubStateTrPointTerminalRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getSubStateTrPointTerminalAccess().getStateBaseStateCrossReference_2_0()); 
	}

)
))
;





// Entry rule entryRuleChoicepointTerminal
entryRuleChoicepointTerminal returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getChoicepointTerminalRule()); }
	 iv_ruleChoicepointTerminal=ruleChoicepointTerminal 
	 { $current=$iv_ruleChoicepointTerminal.current; } 
	 EOF 
;

// Rule ChoicepointTerminal
ruleChoicepointTerminal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='cp' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getChoicepointTerminalAccess().getCpKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getChoicepointTerminalRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getChoicepointTerminalAccess().getCpChoicePointCrossReference_1_0()); 
	}

)
))
;





// Entry rule entryRuleTrigger
entryRuleTrigger returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTriggerRule()); }
	 iv_ruleTrigger=ruleTrigger 
	 { $current=$iv_ruleTrigger.current; } 
	 EOF 
;

// Rule Trigger
ruleTrigger returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='<' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTriggerAccess().getLessThanSignKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTriggerAccess().getMsgFromIfPairsMessageFromIfParserRuleCall_1_0()); 
	    }
		lv_msgFromIfPairs_1_0=ruleMessageFromIf		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTriggerRule());
	        }
       		add(
       			$current, 
       			"msgFromIfPairs",
        		lv_msgFromIfPairs_1_0, 
        		"MessageFromIf");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='|' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTriggerAccess().getVerticalLineKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTriggerAccess().getMsgFromIfPairsMessageFromIfParserRuleCall_2_1_0()); 
	    }
		lv_msgFromIfPairs_3_0=ruleMessageFromIf		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTriggerRule());
	        }
       		add(
       			$current, 
       			"msgFromIfPairs",
        		lv_msgFromIfPairs_3_0, 
        		"MessageFromIf");
	        afterParserOrEnumRuleCall();
	    }

)
))*(
(
		{ 
	        newCompositeNode(grammarAccess.getTriggerAccess().getGuardGuardParserRuleCall_3_0()); 
	    }
		lv_guard_4_0=ruleGuard		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTriggerRule());
	        }
       		set(
       			$current, 
       			"guard",
        		lv_guard_4_0, 
        		"Guard");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_5='>' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTriggerAccess().getGreaterThanSignKeyword_4());
    }
)
;





// Entry rule entryRuleMessageFromIf
entryRuleMessageFromIf returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMessageFromIfRule()); }
	 iv_ruleMessageFromIf=ruleMessageFromIf 
	 { $current=$iv_ruleMessageFromIf.current; } 
	 EOF 
;

// Rule MessageFromIf
ruleMessageFromIf returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMessageFromIfRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getMessageFromIfAccess().getMessageMessageCrossReference_0_0()); 
	}

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMessageFromIfAccess().getColonKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMessageFromIfRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getMessageFromIfAccess().getFromInterfaceItemCrossReference_2_0()); 
	}

)
))
;





// Entry rule entryRuleGuard
entryRuleGuard returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGuardRule()); }
	 iv_ruleGuard=ruleGuard 
	 { $current=$iv_ruleGuard.current; } 
	 EOF 
;

// Rule Guard
ruleGuard returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='guard' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGuardAccess().getGuardKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGuardAccess().getGuardDetailCodeParserRuleCall_1_0()); 
	    }
		lv_guard_1_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGuardRule());
	        }
       		set(
       			$current, 
       			"guard",
        		lv_guard_1_0, 
        		"DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleDocumentation
entryRuleDocumentation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDocumentationRule()); }
	 iv_ruleDocumentation=ruleDocumentation 
	 { $current=$iv_ruleDocumentation.current; } 
	 EOF 
;

// Rule Documentation
ruleDocumentation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDocumentationAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		lv_text_1_0=RULE_STRING
		{
			newLeafNode(lv_text_1_0, grammarAccess.getDocumentationAccess().getTextSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDocumentationRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"text",
        		lv_text_1_0, 
        		"STRING");
	    }

)
)+	otherlv_2=']' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDocumentationAccess().getRightSquareBracketKeyword_2());
    }
)
;





// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	 iv_ruleImport=ruleImport 
	 { $current=$iv_ruleImport.current; } 
	 EOF 
;

// Rule Import
ruleImport returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImportAccess().getImportedNamespaceImportedFQNParserRuleCall_1_0()); 
	    }
		lv_importedNamespace_1_0=ruleImportedFQN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImportRule());
	        }
       		set(
       			$current, 
       			"importedNamespace",
        		lv_importedNamespace_1_0, 
        		"ImportedFQN");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleImportedFQN
entryRuleImportedFQN returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportedFQNRule()); } 
	 iv_ruleImportedFQN=ruleImportedFQN 
	 { $current=$iv_ruleImportedFQN.current.getText(); }  
	 EOF 
;

// Rule ImportedFQN
ruleImportedFQN returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getImportedFQNAccess().getFQNParserRuleCall_0()); 
    }
    this_FQN_0=ruleFQN    {
		$current.merge(this_FQN_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getImportedFQNAccess().getFullStopKeyword_1_0()); 
    }

	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getImportedFQNAccess().getAsteriskKeyword_1_1()); 
    }
)?)
    ;





// Entry rule entryRuleFQN
entryRuleFQN returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFQNRule()); } 
	 iv_ruleFQN=ruleFQN 
	 { $current=$iv_ruleFQN.current.getText(); }  
	 EOF 
;

// Rule FQN
ruleFQN returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Rule PrimitiveType
rulePrimitiveType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='void' 
	{
        $current = grammarAccess.getPrimitiveTypeAccess().getVoidEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getPrimitiveTypeAccess().getVoidEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='int8' 
	{
        $current = grammarAccess.getPrimitiveTypeAccess().getInt8EnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getPrimitiveTypeAccess().getInt8EnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='int16' 
	{
        $current = grammarAccess.getPrimitiveTypeAccess().getInt16EnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getPrimitiveTypeAccess().getInt16EnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='int32' 
	{
        $current = grammarAccess.getPrimitiveTypeAccess().getInt32EnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getPrimitiveTypeAccess().getInt32EnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='uint8' 
	{
        $current = grammarAccess.getPrimitiveTypeAccess().getUint8EnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getPrimitiveTypeAccess().getUint8EnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='uint16' 
	{
        $current = grammarAccess.getPrimitiveTypeAccess().getUint16EnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getPrimitiveTypeAccess().getUint16EnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='uint32' 
	{
        $current = grammarAccess.getPrimitiveTypeAccess().getUint32EnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getPrimitiveTypeAccess().getUint32EnumLiteralDeclaration_6()); 
    }
)
    |(	enumLiteral_7='float32' 
	{
        $current = grammarAccess.getPrimitiveTypeAccess().getFloat32EnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_7, grammarAccess.getPrimitiveTypeAccess().getFloat32EnumLiteralDeclaration_7()); 
    }
)
    |(	enumLiteral_8='float64' 
	{
        $current = grammarAccess.getPrimitiveTypeAccess().getFloat64EnumLiteralDeclaration_8().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_8, grammarAccess.getPrimitiveTypeAccess().getFloat64EnumLiteralDeclaration_8()); 
    }
)
    |(	enumLiteral_9='boolean' 
	{
        $current = grammarAccess.getPrimitiveTypeAccess().getBooleanEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_9, grammarAccess.getPrimitiveTypeAccess().getBooleanEnumLiteralDeclaration_9()); 
    }
)
    |(	enumLiteral_10='string' 
	{
        $current = grammarAccess.getPrimitiveTypeAccess().getStringEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_10, grammarAccess.getPrimitiveTypeAccess().getStringEnumLiteralDeclaration_10()); 
    }
)
    |(	enumLiteral_11='char' 
	{
        $current = grammarAccess.getPrimitiveTypeAccess().getCharEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_11, grammarAccess.getPrimitiveTypeAccess().getCharEnumLiteralDeclaration_11()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


