apply plugin: 'c'
apply from: "$rootDir/gradle/publish.gradle"
apply from: "$rootDir/gradle/etGenerator.gradle"

dependencies {
	modelpath_c files('model')
}

def models = [
	'model/etrice/api/interrupt.room',
	'model/etrice/api/logger.room',
	'model/etrice/api/tcp.room',
	'model/etrice/api/testcontrol.room',
	'model/etrice/api/timer.room',
	'model/etrice/api/contracts/monitors.room'
]

createGeneratorTask('generate', 'c', models, 'src-gen', '-lib')

model {
	components {
		etrice_modellib_c(NativeLibrarySpec) {
			sources.c {
				builtBy generate
				source {
					srcDirs = ['src-gen']
					include '**/*.c'
				}
				exportedHeaders {
					srcDirs = ['src-gen']
				}
				lib project: ':runtime:org.eclipse.etrice.runtime.c', library: 'etrice_runtime_c', linkage: 'api'
			}
			binaries {
				withType(SharedLibraryBinarySpec) { buildable = false }
				all { cCompiler.args '-g3', '-std=c99' }
			}
		}
	}
}

clean.delete 'src-gen'

task zipModellib(type: Zip, dependsOn: generate) {
    archiveName = project.name + "-${version}.zip"
    destinationDir = buildDir
    from projectDir
	include 'src-gen/**', 'model/**/*.room'
	includeEmptyDirs false
}
build.dependsOn zipModellib

publishing {
    publications {
        etrice(MavenPublication) {
            artifact zipModellib
        }
    }
	repositories publishRepos
}