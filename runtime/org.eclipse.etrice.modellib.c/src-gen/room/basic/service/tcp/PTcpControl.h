/**
 * @author generated by eTrice
 *
 * Header File of ProtocolClass PTcpControl
 * 
 */

#ifndef _ROOM_BASIC_SERVICE_TCP_PTCPCONTROL_H_
#define _ROOM_BASIC_SERVICE_TCP_PTCPCONTROL_H_

#include "etDatatypes.h"
#include "modelbase/etPort.h"


#include "room/basic/service/tcp/DTcpControl.h"


/* message IDs */
enum PTcpControl_msg_ids {
	PTcpControl_MSG_MIN = 0,
	PTcpControl_OUT_established = 1,
	PTcpControl_OUT_error = 2,
	PTcpControl_IN_open = 3,
	PTcpControl_IN_close = 4,
	PTcpControl_MSG_MAX = 5
};

/*--------------------- port structs and methods */
typedef etPort PTcpControlPort;
typedef etReplPort PTcpControlReplPort;


void PTcpControlPort_established(const PTcpControlPort* self);
void PTcpControlReplPort_established_broadcast(const PTcpControlReplPort* self);
void PTcpControlReplPort_established(const PTcpControlReplPort* self, int idx);
void PTcpControlPort_error(const PTcpControlPort* self);
void PTcpControlReplPort_error_broadcast(const PTcpControlReplPort* self);
void PTcpControlReplPort_error(const PTcpControlReplPort* self, int idx);


etInt32 PTcpControlReplPort_getReplication(const PTcpControlReplPort* self);
typedef etPort PTcpControlConjPort;
typedef etReplPort PTcpControlConjReplPort;


void PTcpControlConjPort_open(const PTcpControlConjPort* self, DTcpControl* data);
void PTcpControlConjReplPort_open_broadcast(const PTcpControlConjReplPort* self, DTcpControl* data);
void PTcpControlConjReplPort_open(const PTcpControlConjReplPort* self, int idx, DTcpControl* data);
void PTcpControlConjPort_close(const PTcpControlConjPort* self);
void PTcpControlConjReplPort_close_broadcast(const PTcpControlConjReplPort* self);
void PTcpControlConjReplPort_close(const PTcpControlConjReplPort* self, int idx);


etInt32 PTcpControlConjReplPort_getReplication(const PTcpControlConjReplPort* self);

/*--------------------- debug helpers */

/* get message string for message id */
const char* PTcpControl_getMessageString(int msg_id);


#endif /* _ROOM_BASIC_SERVICE_TCP_PTCPCONTROL_H_ */

