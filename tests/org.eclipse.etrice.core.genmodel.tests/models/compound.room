RoomModel compound {

	SubSystemClass Main {
		ActorRef appl: Appl
	}
	
	ActorClass Appl {
		Structure {
			ActorRef wrap: DeepWrapper
			ActorRef ref0: AC1
			ActorRef reg: Reg
			ActorRef conj: Conj
 			Binding wrap.rel sub extra and ref0.extra
			Binding wrap.rel sub suppl and ref0.suppl
			Binding wrap.rel sub red and ref0.red
			Binding wrap.rel sub green and ref0.green
			Binding wrap.rel sub blue and ref0.blue
			Binding reg.p0 and conj.p0
		}
		Behavior { }
	}
	
	ActorClass AC1 {
		Interface {
			conjugated Port red: PC1
			conjugated Port green: PC1
			conjugated Port blue: PC1
			conjugated Port extra: PC2
			conjugated Port suppl: PC3
		}
		Structure {
			external Port red
			external Port green
			external Port blue
			external Port extra
			external Port suppl
		}
		Behavior { }
	}
	
	ActorClass DeepWrapper {
		Interface {
			Port rel: CPC
		}
		Structure {
			ActorRef ref0: Wrapper
			Binding rel and ref0.rel
		}
		Behavior { }
	}
	
	
	ActorClass Wrapper {
		Interface {
			Port rel: CPC
		}
		Structure {
			ActorRef ref0: AC2
			Binding rel sub suppl and ref0.suppl
			Binding rel sub extra and ref0.extra
			Binding rel sub red and ref0.red
			Binding rel sub green and ref0.green
			Binding rel sub blue and ref0.blue
		}
		Behavior { }
	}
	
	ActorClass AC2 {
		Interface {
			Port red: PC1
			Port green: PC1
			Port blue: PC1
			Port extra: PC2
			Port suppl: PC3
		}
		Structure {
			external Port red
			external Port green
			external Port blue
			external Port extra
			external Port suppl
		}
		Behavior { }
	}

	ActorClass Reg {
		Interface {
			Port p0: PC1
		}
		Structure {
			external Port p0
		}
		Behavior { }
	}
	ActorClass Conj {
		Interface {
			conjugated Port p0: PC1
		}
		Structure {
			external Port p0
		}
		Behavior { }
	}

	ProtocolClass PC1 {
		incoming {
			Message m1()
		}
	}

	ProtocolClass PC2 {
		incoming {
			Message m1()
		}
	}

	ProtocolClass PC3 {
		incoming {
			Message m1()
		}
	}
	
	CompoundProtocolClass CPC {
		SubProtocol red: PC1
		SubProtocol green: PC1
		SubProtocol blue: PC1
		
		SubProtocol extra: PC2
		SubProtocol suppl: PC3
	}
	
	CompoundProtocolClass CPC3 {
		SubProtocol red: PC1
		SubProtocol green: PC1
		SubProtocol blue: PC1
	}
}