<?xml version="1.0"?>
<!--
	Ant makefile for building and running of tests.
	This includes invocation of the Java code generator and conversion of the etunit
	results into xunit xml.
	
	@author Henrik Rentz-Reichert
-->
<project name="project">
	
	<property name="c.tests.model.path" value="./models"/>
	<property name="modellib.path" value="../../runtime/org.eclipse.etrice.modellib.c"/>
	<property name="runtime.path" value="../../runtime/org.eclipse.etrice.runtime.c"/>
	<property name="bin.path" value="./bin"/>
	<property name="xml.output" value="./tmp"/>
	<property name="output" value="./output"/>
	<property environment="env"/>

	
	<!--
		all: copies the models, generates, compiles, runs, converts and copies the results
	-->
	<target name="all" depends="convert,copy_results">
		<echo>done with org.eclipse.etrice.generator.c.tests</echo>
	</target>

	<!--
		set_tp: get the target.platform property from the environment var TARGET_PLATFORM if not set already
	-->
	<target name="set_tp" unless="target.platform">
		<echo>using local target platform</echo>
		<property name="target.platform" value="${env.TARGET_PLATFORM}"/>
	</target>

	<!--
		set_tr: sets the test.result property if not set already
	-->
	<target name="set_tr" unless="test.results">
		<echo>using local test result folder</echo>
		<property name="test.results" value="./results"/>
	</target>

	<!--
		set_rp: sets the runtime.path property if not set already
	-->
	<target name="set_rp" unless="c-runtime.path">
		<echo>using local runtime folder</echo>
		<property name="c-runtime.path" value="C:\Users\hrentz\Documents\protos\Entwicklung\Projekte\protos\eTrice\tasks\bugs\2012-01-18\org.eclipse.etrice\runtime\org.eclipse.etrice.runtime.c"/>
	</target>
	
	<!--
		clean: deletes all folders created by this script
	-->
	<target name="clean" depends="set_tr">
		<delete dir="${bin.path}"/>
		<delete dir="models"/>
		<delete dir="${output}"/>
		<delete dir="${test.results}"/>
		<delete dir="src-gen"/>
		<delete dir="tmp"/>
	</target>
	
	<!--
		copy_models: copies the models from their original folders to the build location
	-->
	<target name="copy_models">
		<copy todir="models" >
			<fileset dir="../org.eclipse.etrice.generator.common.tests/models">
				<include name="*.room"/>
			</fileset>
			<fileset dir="${modellib.path}/model">
				<include name="TimingService.room"/>
				<include name="Types.room"/>
			</fileset>
		</copy>
	</target>
	
	<!--
		generate: invokes the Java generator for the ROOM models
	-->
	<target name="generate" depends="set_tp,copy_models">
		<mkdir dir="${output}"/>
		<path id="clspath">
			<pathelement location="../../plugins/org.eclipse.etrice.generator.c/bin"/>
			<pathelement location="../../plugins/org.eclipse.etrice.generator.doc/bin"/>
			<pathelement location="../../plugins/org.eclipse.etrice.generator/bin"/>
			<pathelement location="../../plugins/org.eclipse.etrice.core.genmodel/bin"/>
			<pathelement location="../../plugins/org.eclipse.etrice.core.room/bin"/>
			<pathelement location="../../plugins/org.eclipse.etrice.core.config/bin"/>
			<fileset dir="${target.platform}/plugins/">
				<include name="org.eclipse.emf.ecore_2.8.0*.jar" />
				<include name="org.eclipse.emf.common_2.8.0*.jar" />
				<include name="org.eclipse.emf.ecore.xmi_2.8.0*.jar" />
				<include name="org.eclipse.xtext_2.*.jar" />
				<include name="com.google.inject_*.jar" />
				<include name="com.google.guava_10.*.jar" />
				<include name="org.eclipse.equinox.common_3.6.*.jar" />
				<include name="org.eclipse.xtext.util_2.*.jar" />
				<include name="org.eclipse.xtext.xtend2.lib_2.*.jar" />
				<include name="org.eclipse.xtext.xbase.lib_2.*.jar" />
				<include name="org.apache.log4j_1.2.15*.jar" />
				<include name="org.antlr.runtime_3.2.0*.jar" />
				<include name="javax.inject_1.0.0*.jar" />
			</fileset>
		</path>

		<java output="${output}/generate.txt" classname="org.eclipse.etrice.generator.c.Main" fork="true" failonerror="true">
			<arg value="${c.tests.model.path}/ChoicePointTest.room"/>
			<arg value="${c.tests.model.path}/HandlerTest.room"/>
			<!-- not needed yet
				<arg value="${modellib.path}/model/TimingService.room"/>
			-->
			<arg value="${modellib.path}/model/Types.room"/>
			<classpath refid="clspath"/>
		</java>
	</target>
	
	<!--
		compile_runtime: compiles the C runtime library
	-->
	<target name="compile_runtime" depends="set_rp">
		<mkdir dir="${c-runtime.path}/bin"/>
		<exec dir="${c-runtime.path}/bin" executable="gcc">
			<arg value="-I${c-runtime.path}/src/common"/>
			<arg value="-I${c-runtime.path}/src/config"/>
			<arg value="-I${c-runtime.path}/src/platforms/generic"/>
			<arg value="-c"/>
			<arg value="-g3"/>
			<arg value="-O0"/>
			<arg value="-Wall"/>
			<arg value="../src/common/debugging/etMSCLogger.c"/>
			<arg value="../src/common/etUnit/etUnit.c"/>
			<arg value="../src/common/messaging/etMessage.c"/>
			<arg value="../src/common/messaging/etMessageQueue.c"/>
			<arg value="../src/common/messaging/etMessageService.c"/>
			<arg value="../src/common/modelbase/etActor.c"/>
			<arg value="../src/common/modelbase/etPort.c"/>
			<arg value="../src/platforms/generic/etLogger.c"/>
			<arg value="../src/platforms/generic/etPlatform.c"/>
			<arg value="../src/platforms/generic/etTimer.c"/>
		</exec>
		<exec dir="${c-runtime.path}/bin" executable="ar">
			<arg value="-r"/>
			<arg value="liborg.eclipse.etrice.runtime.c.a"/>
			<arg value="etMSCLogger.o"/>
			<arg value="etUnit.o"/>
			<arg value="etMessage.o"/>
			<arg value="etMessageQueue.o"/>
			<arg value="etMessageService.o"/>
			<arg value="etActor.o"/>
			<arg value="etPort.o"/>
			<arg value="etLogger.o"/>
			<arg value="etPlatform.o"/>
			<arg value="etTimer.o"/>
		</exec>
	</target>
	
	<!--
		compile: compiles the generated C sources
	-->
	<target name="build" depends="set_rp,compile_runtime,generate">

		<!-- compile and link HandlerTest -->
		<mkdir dir="bin/HandlerTest"/>
		<exec dir="bin/HandlerTest" executable="gcc">
			<arg value="-I../../src-gen/ChoicePointTest"/>
			<arg value="-I../src-gen/HandlerTest"/>
			<arg value="-I${c-runtime.path}/src/common"/>
			<arg value="-I${c-runtime.path}/src/config"/>
			<arg value="-I${c-runtime.path}/src/platforms/generic"/>
			<arg value="-c"/>
			<arg value="-g3"/>
			<arg value="-O0"/>
			<arg value="-Wall"/>
			<arg value="../../src-gen/HandlerTest/HandlerTest_Top.c"/>
			<arg value="../../src-gen/HandlerTest/HandlerUser.c"/>
			<arg value="../../src-gen/HandlerTest/SubSystem_HandlerTest.c"/>
			<arg value="../../src-gen/HandlerTest/SubSystem_HandlerTest_Runner.c"/>
			<arg value="../../src-gen/HandlerTest/Tester.c"/>
			<arg value="../../src-gen/HandlerTest/TestProtocol.c"/>
		</exec>
		<exec dir="bin/HandlerTest" executable="gcc">
			<arg value="-L../../../../runtime/org.eclipse.etrice.runtime.c/bin"/>
			<arg value="-oHandlerTest.exe"/>
			<arg value="HandlerTest_Top.o"/>
			<arg value="HandlerUser.o"/>
			<arg value="SubSystem_HandlerTest.o"/>
			<arg value="Tester.o"/>
			<arg value="TestProtocol.o"/>
			<arg value="SubSystem_HandlerTest_Runner.o"/>
			
			<!-- library has to be in the last position -->
			<arg value="-lorg.eclipse.etrice.runtime.c"/>
		</exec>
		
		<!-- compile and link ChoicepointTest -->
		<mkdir dir="bin/ChoicePointTest"/>
		<exec dir="bin/ChoicePointTest" executable="gcc">
			<arg value="-I../../src-gen/ChoicePointTest"/>
			<arg value="-I../../src-gen/HandlerTest"/>
			<arg value="-I${c-runtime.path}/src/common"/>
			<arg value="-I${c-runtime.path}/src/config"/>
			<arg value="-I${c-runtime.path}/src/platforms/generic"/>
			<arg value="-c"/>
			<arg value="-g3"/>
			<arg value="-O0"/>
			<arg value="-Wall"/>
			<arg value="../../src-gen/ChoicePointTest/CPTest_Top.c"/>
			<arg value="../../src-gen/ChoicePointTest/CPTester.c"/>
			<arg value="../../src-gen/ChoicePointTest/CPUser.c"/>
			<arg value="../../src-gen/ChoicePointTest/SubSystem_CPTest.c"/>
			<arg value="../../src-gen/ChoicePointTest/SubSystem_CPTest_Runner.c"/>
			<arg value="../../src-gen/ChoicePointTest/TestProtocol.c"/>
		</exec>
		<exec dir="bin/ChoicePointTest" executable="gcc">
			<arg value="-L../../../../runtime/org.eclipse.etrice.runtime.c/bin"/>
			<arg value="-oChoicePointTest.exe"/>
			<arg value="CPTest_Top.o"/>
			<arg value="CPTester.o"/>
			<arg value="CPUser.o"/>
			<arg value="SubSystem_CPTest.o"/>
			<arg value="SubSystem_CPTest_Runner.o"/>
			<arg value="TestProtocol.o"/>
			
			<!-- library has to be in the last position -->
			<arg value="-lorg.eclipse.etrice.runtime.c"/>
		</exec>
	</target>

	<!--
		run: runs all executables
	-->
	<target name="run" depends="build">
		<mkdir dir="tmp/log"/>
		<exec dir="./" resolveexecutable="true" executable="./bin/HandlerTest/HandlerTest.exe"/>
		<exec dir="./" resolveexecutable="true" executable="./bin/ChoicePointTest/ChoicePointTest.exe"/>
	</target>
	
	<!--
		convert: converts etu- into xunit xml-format
	-->
	<target name="convert" depends="run,set_tp">
		<path id="clspath">
			<pathelement location="../../plugins/org.eclipse.etrice.etunit.converter/bin"/>
			<fileset dir="${target.platform}/plugins/">
				<include name="org.eclipse.core.runtime_3.8.0*.jar" />
				<include name="org.eclipse.emf.ecore_2.8.0*.jar" />
				<include name="org.eclipse.emf.ecore.xmi_2.8.0*.jar" />
				<include name="org.eclipse.emf.common_2.8.0*.jar" />
			</fileset>
		</path>

		<java output="${output}/convert.txt" classname="org.eclipse.etrice.etunit.converter.EtUnitReportConverter" fork="true" failonerror="true">
			<arg value="-suite"/>
			<arg value="org.eclipse.etrice.generator.c.tests.ChoicePointTest"/>
			<arg value="./tmp/ChoicePointTest.etu"/>
			<classpath refid="clspath"/>
		</java>

		<java output="${output}/convert.txt" classname="org.eclipse.etrice.etunit.converter.EtUnitReportConverter" fork="true" failonerror="true">
			<arg value="-suite"/>
			<arg value="org.eclipse.etrice.generator.c.tests.HandlerTest"/>
			<arg value="./tmp/HandlerTest.etu"/>
			<classpath refid="clspath"/>
		</java>
	</target>
	
	<!--
		copy_results: copies the *.xml results to their final destination
	-->
	<target name="copy_results" depends="set_tr">
		<copy todir="${test.results}" >
			<fileset dir="./tmp">
				<include name="*.xml"/>
			</fileset>
		</copy>
	</target>
	
</project>
