/**
 * @author generated by eTrice
 *
 * Instance File of SubSystemClass SS
 * - instantiation of all actor instances and port instances
 * - configuration of data and connection of ports
 */

#include "messaging/etMessageService.h"
#include "platform/etMemory.h"

/* instantiation of message services */

/* MessageService for Thread1 */
static uint8 msgBuffer_Thread1[MESSAGE_POOL_MAX*MESSAGE_BLOCK_SIZE];
static etMessageService msgService_Thread1;


/* include all used ActorClasses */
#include "Testee.h"
#include "Tester.h"

/* include all used ProtcolClasses */
#include "PTestTrigger.h"


/* declarations of all ActorClass instances (const and variable structs) */

/* forward declaration of variable actor structs */
static Tester _SS_tester;
static Testee _SS_testee;


/* instance _SS_tester */
static const Tester_const _SS_tester_const = {
	/* Ports: {myActor, etReceiveMessage, msgService, peerAddress, localId} */
	{&_SS_tester, Tester_receiveMessage, &msgService_Thread1, 104, 1} /* Port testee */
	
	/* data receive ports */
};
static Tester _SS_tester = {&_SS_tester_const};

/* instance _SS_testee */
static const Testee_const _SS_testee_const = {
	/* Ports: {myActor, etReceiveMessage, msgService, peerAddress, localId} */
	{&_SS_testee, Testee_receiveMessage, &msgService_Thread1, 102, 1} /* Port tester */
	
	/* data receive ports */
};
static Testee _SS_testee = {&_SS_testee_const};

