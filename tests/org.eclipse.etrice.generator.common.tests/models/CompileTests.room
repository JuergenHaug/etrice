RoomModel CompileTestsModel {

	import room.basic.types.* from "Types.room"
	import room.basic.test.* from "Tests.room"
	import DetailExpressionTestModel.DetailExpressionTest from "DetailExpressionTest.room"
	import StatemachineInterfaceTestModel.StatemachineInterfaceTest from "StatemachineInterfaceTest.room"
	import StatemachineInterfaceTestInheritedModel.StatemachineInterfaceInheritedTest from "StatemachineInterfaceInheritedTest.room"
	import ContinuationTransitionTest.ContinuationTransitionTest from "ContinuationTransitionTest.room"

	ActorClass CompileTests {
		@TestInstance
		Structure {
			Attribute caseId : int32

			// just compile
			ActorRef detailExpressionTest: DetailExpressionTest
			ActorRef statemachineInterfaceTest : StatemachineInterfaceTest
			ActorRef statemachineInterfaceInheritedTest : StatemachineInterfaceInheritedTest
			ActorRef continuationTransitionTest : ContinuationTransitionTest
		}
		Behavior {
			ctor {
				"caseId = etUnit_openAll(\"log/testlog\", \"CompileTests\", \"org.eclipse.etrice.generator.common.tests.CompileTests\", \"CompileTests_case\");"
			}
			dtor {
				"etUnit_closeAll(caseId);"
			}
			StateMachine {
				Transition init: initial -> finish
				State finish {
					entry {
						"etUnit_testFinished(caseId);"
					}
				}
			}
		}
	}

}