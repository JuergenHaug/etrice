/**
 * @author generated by eTrice
 *
 * Header File of ProtocolClass SecurityProtocol
 * 
 */

#ifndef _SECURITYPROTOCOL_H_
#define _SECURITYPROTOCOL_H_

#include "etDatatypes.h"
#include "modelbase/etPort.h"




/* message IDs */
enum SecurityProtocol_msg_ids {
	SecurityProtocol_MSG_MIN = 0,
	SecurityProtocol_OUT_pong = 1,
	SecurityProtocol_IN_ping = 2,
	SecurityProtocol_MSG_MAX = 3
};

/*--------------------- port structs and methods */
typedef etPort SecurityProtocolPort;
typedef etReplPort SecurityProtocolReplPort;


void SecurityProtocolPort_pong(const SecurityProtocolPort* self);
void SecurityProtocolReplPort_pong_broadcast(const SecurityProtocolReplPort* self);
void SecurityProtocolReplPort_pong(const SecurityProtocolReplPort* self, int idx);


etInt32 SecurityProtocolReplPort_getReplication(const SecurityProtocolReplPort* self);
typedef etPort SecurityProtocolConjPort;
typedef etReplPort SecurityProtocolConjReplPort;


void SecurityProtocolConjPort_ping(const SecurityProtocolConjPort* self);
void SecurityProtocolConjReplPort_ping_broadcast(const SecurityProtocolConjReplPort* self);
void SecurityProtocolConjReplPort_ping(const SecurityProtocolConjReplPort* self, int idx);


etInt32 SecurityProtocolConjReplPort_getReplication(const SecurityProtocolConjReplPort* self);

/*--------------------- debug helpers */

/* get message string for message id */
const char* SecurityProtocol_getMessageString(int msg_id);


#endif /* _SECURITYPROTOCOL_H_ */

