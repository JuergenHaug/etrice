/**
 * @author generated by eTrice
 *
 * Header File of ActorClass Fork
 * 
 */

#ifndef _FORK_H_
#define _FORK_H_

#include "etDatatypes.h"
#include "messaging/etMessage.h"

#include "CommunicationProtocol.h"


typedef struct Fork Fork;

/* const part of ActorClass (ROM) */
typedef struct Fork_const {
	/* simple ports */
	const CommunicationProtocolPort inport;
	
	/* data receive ports */

	/* saps */
	
	/* replicated ports */
	const etReplPort broadcast;
	
	/* services */
} Fork_const;


/* constant for state machine data */
#define FORK_HISTORY_SIZE 2

/* variable part of ActorClass (RAM) */
struct Fork {
	const Fork_const* const constData;
	
	/* data send ports */

	/*--------------------- attributes ---------------------*/
	
	
		/* state machine variables */
		etInt16 state;
		etInt16 history[FORK_HISTORY_SIZE];
};

void Fork_init(Fork* self);

void Fork_receiveMessage(void* self, void* ifitem, const etMessage* msg);


/*--------------------- operations ---------------------*/


#endif /* _FORK_H_ */

