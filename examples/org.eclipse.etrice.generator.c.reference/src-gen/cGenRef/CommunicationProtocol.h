/**
 * @author generated by eTrice
 *
 * Header File of ProtocolClass CommunicationProtocol
 * 
 */

#ifndef _COMMUNICATIONPROTOCOL_H_
#define _COMMUNICATIONPROTOCOL_H_

#include "etDatatypes.h"
#include "etPort.h"


#include "DataClass1.h"

/* message IDs */
enum {
	CommunicationProtocol_MSG_MIN = 0, 
	/* IDs for outgoing messages */
	CommunicationProtocol_OUT_outMessage1 = 1,
	CommunicationProtocol_OUT_outMessage2 = 2,
	CommunicationProtocol_OUT_outMessage123456789 = 3,
	/* IDs for incoming messages */
	CommunicationProtocol_IN_inMessage1 = 4,
	CommunicationProtocol_IN_inMessage2 = 5,
	/* error if msgID >= MSG_MAX */
	CommunicationProtocol_MSG_MAX = 6
};

/*--------------------- port classes */

typedef etPort CommunicationProtocolPort;

void CommunicationProtocolPort_outMessage1(const CommunicationProtocolPort* self);
void CommunicationProtocolPort_outMessage2(const CommunicationProtocolPort* self);
void CommunicationProtocolPort_outMessage123456789(const CommunicationProtocolPort* self);





typedef etPort CommunicationProtocolConjPort;

void CommunicationProtocolConjPort_inMessage1(const CommunicationProtocolConjPort* self);
void CommunicationProtocolConjPort_inMessage2(const CommunicationProtocolConjPort* self);





/*--------------------- debug helpers */

/* get message string for message id */
const char* CommunicationProtocol_getMessageString(int msg_id);



#endif /* _COMMUNICATIONPROTOCOL_H_ */

