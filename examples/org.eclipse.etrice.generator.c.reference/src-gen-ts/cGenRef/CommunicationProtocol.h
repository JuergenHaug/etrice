/**
 * @author generated by eTrice
 *
 * Header File of ProtocolClass CommunicationProtocol
 * 
 */

#ifndef _COMMUNICATIONPROTOCOL_H_
#define _COMMUNICATIONPROTOCOL_H_

#include "etDatatypes.h"
#include "modelbase/etPort.h"




/* message IDs */
enum CommunicationProtocol_msg_ids {
	CommunicationProtocol_MSG_MIN = 0,
	CommunicationProtocol_OUT_receivedData = 1,
	CommunicationProtocol_IN_sendData = 2,
	CommunicationProtocol_MSG_MAX = 3
};

/*--------------------- port structs and methods */
typedef etPort CommunicationProtocolPort;
typedef etReplPort CommunicationProtocolReplPort;


void CommunicationProtocolPort_receivedData(const CommunicationProtocolPort* self);
void CommunicationProtocolReplPort_receivedData_broadcast(const CommunicationProtocolReplPort* self);
void CommunicationProtocolReplPort_receivedData(const CommunicationProtocolReplPort* self, int idx);


etInt32 CommunicationProtocolReplPort_getReplication(const CommunicationProtocolReplPort* self);
typedef etPort CommunicationProtocolConjPort;
typedef etReplPort CommunicationProtocolConjReplPort;


void CommunicationProtocolConjPort_sendData(const CommunicationProtocolConjPort* self);
void CommunicationProtocolConjReplPort_sendData_broadcast(const CommunicationProtocolConjReplPort* self);
void CommunicationProtocolConjReplPort_sendData(const CommunicationProtocolConjReplPort* self, int idx);


etInt32 CommunicationProtocolConjReplPort_getReplication(const CommunicationProtocolConjReplPort* self);

/*--------------------- debug helpers */

/* get message string for message id */
const char* CommunicationProtocol_getMessageString(int msg_id);


#endif /* _COMMUNICATIONPROTOCOL_H_ */

