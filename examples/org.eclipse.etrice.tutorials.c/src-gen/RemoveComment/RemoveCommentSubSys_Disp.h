/**
 * @author generated by eTrice
 *
 * Dispatcher File of SubSystemClass RemoveCommentSubSys
 * - one generated dispatcher for each MessageService (Thread)
 */

#include "messaging/etMessageReceiver.h"
#include "debugging/etLogger.h"
#include "debugging/etMSCLogger.h"

static void MsgDispatcher_Thread1_receiveMessage(const etMessage* msg){
	ET_MSC_LOGGER_SYNC_ENTRY("MsgDispatcher_Thread1", "receiveMessage")
	switch(msg->address){
	
		/* interface items of /RemoveCommentSubSys/Topref */
		/* interface items of /RemoveCommentSubSys/Topref/reader */
		case 103:
		AFileReader_receiveMessage((void*)&_RemoveCommentSubSys_Topref_reader,(etPort*)&_RemoveCommentSubSys_Topref_reader_const.outPort, msg);
		break;
		/* interface items of /RemoveCommentSubSys/Topref/cParser */
		case 105:
		ACParser_receiveMessage((void*)&_RemoveCommentSubSys_Topref_cParser,(etPort*)&_RemoveCommentSubSys_Topref_cParser_const.readerPort, msg);
		break;

		default:
			etLogger_logErrorF("MessageService_Thread1_receiveMessage: address %d does not exist ", msg->address);
		break;
	}
	ET_MSC_LOGGER_SYNC_EXIT
}
