/**
 * @author generated by eTrice
 *
 * Header File of ActorClass TrafficController
 * 
 */

#ifndef _TRAFFICLIGHT_EXAMPLE_TRAFFICCONTROLLER_H_
#define _TRAFFICLIGHT_EXAMPLE_TRAFFICCONTROLLER_H_

#include "etDatatypes.h"
#include "messaging/etMessage.h"

#include "room/basic/service/timing/PTimer.h"
#include "trafficlight/example/PTrafficLight.h"

/*--------------------- begin user code ---------------------*/
#include "platform/etTcpSockets.h"
/*--------------------- end user code ---------------------*/

typedef struct TrafficController TrafficController;

/* const part of ActorClass (ROM) */
typedef struct TrafficController_const {
	/* simple ports */
	const PTrafficLightConjPort light1;
	const PTrafficLightConjPort light2;
	
	/* data receive ports */

	/* saps */
	const PTimerConjPort timeout;
	
	/* replicated ports */
	
	/* services */
} TrafficController_const;


/* constant for state machine data */
#define TRAFFICCONTROLLER_HISTORY_SIZE 2

/* variable part of ActorClass (RAM) */
struct TrafficController {
	const TrafficController_const* const constData;
	
	/* data send ports */
	
	/*--------------------- attributes ---------------------*/
	
	
	/* state machine variables */
	etInt16 state;
	etInt16 history[TRAFFICCONTROLLER_HISTORY_SIZE];
};

void TrafficController_init(TrafficController* self);

void TrafficController_receiveMessage(void* self, void* ifitem, const etMessage* msg);


/*--------------------- operations ---------------------*/
void TrafficController_ctor(TrafficController* self);
void TrafficController_dtor(TrafficController* self);


#endif /* _TRAFFICLIGHT_EXAMPLE_TRAFFICCONTROLLER_H_ */

